<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>MySQL-表命名规范（一）</title>
      <link href="/2023/05/15/MySQL/MySQL-%E8%A1%A8%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2023/05/15/MySQL/MySQL-%E8%A1%A8%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>本文主要讲解 <code>MySQL</code> 表中的一些错误命名规范，虽然这是一个很简单的事情，但随着需求增多，表也在不断扩张，如果没有相关的表命名规范，到时候维护起来也会及其麻烦。我们以 开源框架 <code>Ruoyi</code> 为例，讲解这个框架对表的命名处理。</p></blockquote><h2 id="不规范表命名存在的问题"><a href="#不规范表命名存在的问题" class="headerlink" title="不规范表命名存在的问题"></a>不规范表命名存在的问题</h2><h3 id="表命名"><a href="#表命名" class="headerlink" title="表命名"></a>表命名</h3><div class="note orange simple"><p>问题一：如下图中，如下表名虽然可以做到见名其意，但随着业务扩展。当需要查询某一个模块的数据时，但又不清楚表名就会存在问题。</p></div><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305151249471.png" alt="image-20230515124929426"></p><h3 id="字段命名"><a href="#字段命名" class="headerlink" title="字段命名"></a>字段命名</h3><div class="note orange simple"><p>问题二：如下图中，找到了表名，但如果要修改某个字段的数据又会存在问题了。</p></div><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305151255479.png" alt="image-20230515125527436"></p><h2 id="Ruoyi-对表命名的处理"><a href="#Ruoyi-对表命名的处理" class="headerlink" title="Ruoyi 对表命名的处理"></a><code>Ruoyi</code> 对表命名的处理</h2><blockquote><p>基本规范</p><ul><li><strong>数据库表名、字段名、索引名等都需要命名规范，可读性高(一般要求用英文)，最好做到见名知意</strong></li><li>我们可以通过命名知道表属于那个模块，可以高效的定位到表进行修改。</li></ul></blockquote><h3 id="表命名-1"><a href="#表命名-1" class="headerlink" title="表命名"></a>表命名</h3><blockquote><p>基本规范</p><ul><li>必须使用小写字母或者数字，禁止使用数字开头，禁止使用拼音，并且一般不使用英文缩写。</li><li>在 <code>MySQL</code> 中，如果表名可以使用父级模块的名称作为前缀，可以更好地组织和管理表</li></ul></blockquote><p>如下图，<code>QRTZ</code> 开头就可以知道是定时任务模块的数据。<code>system</code> 开头的就知道是系统模块的数据。</p><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305151302576.png" alt="image2022-12-30_10-30-27.png"></p><h3 id="字段命名-1"><a href="#字段命名-1" class="headerlink" title="字段命名"></a>字段命名</h3><blockquote><p>基本规范</p><ul><li>必须使用小写字母或者数字，禁止使用数字开头，禁止使用拼音，并且一般不使用英文缩写</li></ul></blockquote><p>例如，一个表的账号字段</p><ul><li>反例</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE `account_user` (</span><br><span class="line">  `1_acc_no` bigint(20) NOT NULL AUTO_INCREMENT COMMENT &#x27;账号&#x27;,</span><br><span class="line">  PRIMARY KEY (`acc_no`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT=&#x27;用户信息表&#x27;;</span><br></pre></td></tr></table></figure><ul><li>正例</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE `account_user` (</span><br><span class="line">  `account_no` bigint(20) NOT NULL AUTO_INCREMENT COMMENT &#x27;账号&#x27;,</span><br><span class="line">  PRIMARY KEY (`account_no`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT=&#x27;用户信息表&#x27;;</span><br></pre></td></tr></table></figure><h3 id="索引命名"><a href="#索引命名" class="headerlink" title="索引命名"></a>索引命名</h3><p>主键索引：</p><ul><li>pk_字段名。 例如：<strong><code>PRIMARY KEY (</code>id<code>) USING BTREE</code></strong></li></ul><p>唯一索引：</p><ul><li>uk_字段名。 例如：<strong><code>UNIQUE INDEX</code>uk_mobile<code>(</code>mobile<code>ASC) USING BTREE</code></strong></li></ul><p>普通索引：</p><ul><li>idx_字段名。例如：<strong><code>INDEX</code>idx_mobile<code>(</code>mobile<code>ASC) USING BTREE</code></strong></li></ul>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx-负载均衡（九）</title>
      <link href="/2023/05/12/Nginx/Nginx-%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%EF%BC%88%E4%B9%9D%EF%BC%89/"/>
      <url>/2023/05/12/Nginx/Nginx-%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%EF%BC%88%E4%B9%9D%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="问题思考？"><a href="#问题思考？" class="headerlink" title="问题思考？"></a>问题思考？</h2><ol><li><p><strong>负载均衡之前使用的什么方案？</strong></p><ul><li>在早期并发不大的情况，我们一般使用如下图所示的架构。</li><li>当用户增长量上升，服务器处理请求的能力到达了极限，就会出现加载速度慢，出现宕机情况</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305121653538.png" alt="image.png"></p></li><li><p><strong>负载均衡 解决了什么问题？</strong></p><ul><li>针对上面的问题就可以使用 负载均衡 策略进行处理，具体如下图</li><li>当我们其中一台服务出现问题，我们可以通过负载均衡策略将请求转移到其他服务器中。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305121654822.gif" alt="v2-3661c2082103036ecb23a3f29be740be_b.gif"></p></li><li><p><strong>负载均衡提供的策略？</strong></p><ul><li>轮询策略（round-robin）：请求在所有可用服务器之间平均分配，负载均衡默认的配置就是轮询。</li><li>权重策略（weight）：服务器被分配一个权重，请求根据每个服务器的权重分配。</li><li>随机策略（random）：请求被随机分配在任意一台可用服务器当中。</li><li>ip_hash：客户端的 IP 地址将用作哈希键，来自同一个ip的请求会被转发到相同的服务器。</li><li>响应时长策略（fair）：根据服务器的响应时间来分配请求，响应时间短的优先分配，即负载压力小的优先会分配。</li><li>最少连接（least_conn）：将请求分配给活动连接数最少的服务器（较为空闲的服务器）。</li></ul></li></ol><h2 id="Nginx-配置负载均衡策略"><a href="#Nginx-配置负载均衡策略" class="headerlink" title="Nginx 配置负载均衡策略"></a><strong>Nginx 配置负载均衡策略</strong></h2><blockquote><p>根据业务场景的不同选择不同的策略方式，如果选择的策略不适合特定场景，可能会导致性能问题。</p></blockquote><h3 id="最佳实现（round-robin、random）"><a href="#最佳实现（round-robin、random）" class="headerlink" title="最佳实现（round-robin、random）"></a>最佳实现（round-robin、random）</h3><blockquote><p>最佳实践的两种策略：<strong>轮询策略（round-robin）、随机策略（random）</strong></p><p><strong>最佳实现的考量指标</strong></p><ul><li>这种是最常见的一种配置，当不知道用什么的时候就采用这一类型。</li><li>随机策略在大量请求的情况下，按照概率的理论等同于轮询策略。</li></ul></blockquote><p><strong>轮询策略（round-robin）：请求在所有可用服务器之间平均分配</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 默认配置就是轮询策略</span></span><br><span class="line"><span class="section">upstream</span> server_group &#123;</span><br><span class="line">   <span class="attribute">server</span> <span class="number">192.168.206.100:9001</span>;</span><br><span class="line">   <span class="attribute">server</span> <span class="number">192.168.206.101:9001</span>;</span><br><span class="line">   <span class="attribute">server</span> <span class="number">192.168.206.102:9001</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">server&#123;</span><br><span class="line">   </span><br><span class="line">    <span class="comment"># 监听端口</span></span><br><span class="line">    <span class="attribute">listen</span> <span class="number">8003</span>;</span><br><span class="line">    <span class="comment"># 匹配请求中的host值</span></span><br><span class="line">    <span class="attribute">server_name</span> ruoyi.balance.localhost;</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 监听请求静态资源 html 路径</span></span><br><span class="line">    <span class="section">location</span> / &#123;</span><br><span class="line">      <span class="comment"># 查找目录</span></span><br><span class="line">      <span class="attribute">root</span> /home/basics-analysis/web;</span><br><span class="line">      <span class="comment"># 默认查找</span></span><br><span class="line">      <span class="attribute">index</span> index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">       </span><br><span class="line">    <span class="comment"># 监听请求后端服务</span></span><br><span class="line">    <span class="section">location</span><span class="regexp"> ^~</span> /api &#123;</span><br><span class="line">        <span class="comment">#nginx的主机地址</span></span><br><span class="line">        <span class="attribute">proxy_set_header</span> Host <span class="variable">$http_host</span>;</span><br><span class="line">  </span><br><span class="line">        <span class="comment">#用户端真实的IP，即客户端IP</span></span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="comment"># 配置代理服务器</span></span><br><span class="line">        <span class="attribute">proxy_pass</span> http://server_group;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>随机策略（random）：请求被随机分配在任意一台可用服务器当中</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 随机策略</span></span><br><span class="line"><span class="section">upstream</span> server_group &#123;</span><br><span class="line">   random;</span><br><span class="line">   <span class="attribute">server</span> <span class="number">192.168.206.100:9001</span>;</span><br><span class="line">   <span class="attribute">server</span> <span class="number">192.168.206.101:9001</span>;</span><br><span class="line">   <span class="attribute">server</span> <span class="number">192.168.206.102:9001</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="性能优先（weight、fair、least-conn）"><a href="#性能优先（weight、fair、least-conn）" class="headerlink" title="性能优先（weight、fair、least_conn）"></a>性能优先（weight、fair、least_conn）</h3><blockquote><p>性能优先的三种策略：<strong>权重策略（weight）、响应时长策略（fair）、最小连接（least_conn）</strong></p><p><strong>性能优先的考量指标</strong></p><ul><li>从经验或硬件上分为高权重、低权重的机器。</li><li>按照节点请求的响应时长来决定是多分配请求，还是少分配请求。</li><li>按照保持的连接数。一般来说保持的连接数越多说明处理的任务越多，也是最繁忙的，可以将请求分配给其他机器处理。</li></ul></blockquote><p><strong>权重策略（weight）：服务器被分配一个权重，请求根据每个服务器的权重分配</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 权重策略</span></span><br><span class="line"><span class="section">upstream</span> server_group &#123;</span><br><span class="line">   <span class="attribute">server</span> <span class="number">192.168.206.100:9001</span> weight=<span class="number">5</span>;</span><br><span class="line">   <span class="attribute">server</span> <span class="number">192.168.206.101:9001</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>响应时长策略（fair）：根据服务器的响应时间来分配请求，响应时间短的优先分配，即负载压力小的优先会分配</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 响应时长策略</span></span><br><span class="line"><span class="section">upstream</span> server_group &#123;</span><br><span class="line">   fair;</span><br><span class="line">   <span class="attribute">server</span> <span class="number">192.168.206.100:9001</span>;</span><br><span class="line">   <span class="attribute">server</span> <span class="number">192.168.206.101:9001</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>最少连接数（least_conn）：将请求分配给活动连接数最少的服务器（较为空闲的服务器）</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 最少连接数</span></span><br><span class="line"><span class="section">upstream</span> server_group &#123;</span><br><span class="line">   least_conn;</span><br><span class="line">   <span class="attribute">server</span> <span class="number">192.168.206.100:9001</span>;</span><br><span class="line">   <span class="attribute">server</span> <span class="number">192.168.206.101:9001</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="保持稳定（ip-hash、url-hash）"><a href="#保持稳定（ip-hash、url-hash）" class="headerlink" title="保持稳定（ip_hash、url_hash）"></a>保持稳定（ip_hash、url_hash）</h3><blockquote><p><strong>保持稳定的两种策略：ip_hash、url_hash</strong></p><p><strong>保持稳定的考量指标</strong></p><ul><li>很多请求都是有状态的，上一次请求到哪个业务节点，这次还要请求到哪台机器。</li><li>将客户端的 IP 地址 或者 url 作为哈希键，来自同一个ip的请求会被转发到相同的服务器。</li></ul><p><strong>保持稳定的两种策略存在的问题</strong></p><ul><li><strong>当有一个上游服务器宕机或者扩容的时候，会引发大量的路由变更，进而引发连锁反应，如果上游服务器在有缓存的情况下导致大量缓存失效等问题。</strong></li><li><strong>针对这个问题，参考博文：</strong><a href="https://blog.csdn.net/qq_34556414/article/details/106156796">https://blog.csdn.net/qq_34556414/article/details/106156796</a></li></ul></blockquote><p><strong>ip_hash策略</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ip_hash</span></span><br><span class="line"><span class="section">upstream</span> server_group &#123;</span><br><span class="line">   ip_hash;</span><br><span class="line">   <span class="attribute">server</span> <span class="number">192.168.206.100:9001</span>;</span><br><span class="line">   <span class="attribute">server</span> <span class="number">192.168.206.101:9001</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>url_hash策略</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># url_hash</span></span><br><span class="line"><span class="section">upstream</span> server_group&#123;</span><br><span class="line">   <span class="attribute">hash</span> <span class="variable">$request_uri</span> consistent;</span><br><span class="line">   <span class="attribute">server</span> <span class="number">192.168.206.100:9001</span>;</span><br><span class="line">   <span class="attribute">server</span> <span class="number">192.168.206.101:9001</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="故障节点摘除与恢复"><a href="#故障节点摘除与恢复" class="headerlink" title="故障节点摘除与恢复"></a>故障节点摘除与恢复</h2><ul><li>经典配置详解</li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">upstream</span> server_group &#123;</span><br><span class="line">   <span class="attribute">server</span> <span class="number">192.168.206.100:9001</span> max_fails=<span class="number">3</span> fail_timeout=<span class="number">30s</span>;</span><br><span class="line">   <span class="attribute">server</span> <span class="number">192.168.206.101:9001</span> backup;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>配置详解</strong></p><div class="table-container"><table><thead><tr><th><strong>指令</strong></th><th><strong>默认值</strong></th><th><strong>解释</strong></th></tr></thead><tbody><tr><td>max_fails</td><td>1</td><td>请求失败多少次之后，暂停使用该节点。需要搭配fail_timeout 一起使用。</td></tr><tr><td>fail_timeout</td><td>10s</td><td>当认定该节点不能使用之后，暂定多久可以使用。</td></tr><tr><td>backup</td><td>-</td><td>类似于switch语句中的default，当主要节点都挂了的时候，会把请求打到这个backup节点</td></tr></tbody></table></div><h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><blockquote><p><a href="https://zhuanlan.zhihu.com/p/32841479">什么是负载均衡？</a></p><p><a href="https://blog.csdn.net/finally_vince/article/details/124454458">Nginx负载均衡解决的问题和实现方式都在这里啦</a></p><p><a href="https://juejin.cn/post/6844904019043811342">Nginx专题（2）：Nginx的负载均衡策略及其配置</a></p><p><a href="https://blog.csdn.net/xyang81/article/details/51702900">Nginx负载均衡配置</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Web服务器 </category>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx-WebSocket（八）</title>
      <link href="/2023/05/12/Nginx/Nginx-WebSocket%EF%BC%88%E5%85%AB%EF%BC%89/"/>
      <url>/2023/05/12/Nginx/Nginx-WebSocket%EF%BC%88%E5%85%AB%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="Nginx-配置-WebSocket"><a href="#Nginx-配置-WebSocket" class="headerlink" title="Nginx 配置 WebSocket"></a>Nginx 配置 WebSocket</h2><blockquote><p>具体步骤如下：</p><ol><li>创建 <code>Nginx</code> 配置文件 <code>8004.conf</code></li><li>刷新 <code>Nginx</code> 配置文件</li></ol></blockquote><h3 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h3><ol><li><p>创建 <code>Nginx</code> 配置文件 <code>8004.conf</code></p><ul><li><code>Nginx</code> 配置文件路径：<code>/etc/nginx/conf.d</code></li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将 $http_upgrade 变量映射到 $connection_upgrade 变量</span></span><br><span class="line"><span class="comment"># $http_upgrade 变量通常用于表示客户端请求是否支持 WebSocket。</span></span><br><span class="line"><span class="comment"># 如果客户端请求支持 WebSocket，则 $http_upgrade 变量的值为 &quot;websocket&quot;；否则，它的值为空字符串。</span></span><br><span class="line"><span class="attribute">map</span> <span class="variable">$http_upgrade</span> <span class="variable">$connection_upgrade</span> &#123;</span><br><span class="line">    <span class="attribute">default</span> upgrade;</span><br><span class="line">    &#x27;&#x27;      close;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 虚拟主机server块</span></span><br><span class="line">server&#123;</span><br><span class="line"> </span><br><span class="line">   <span class="comment"># do something ...</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 监听 /message 路径的请求</span></span><br><span class="line">    <span class="section">location</span><span class="regexp"> ^~</span> /message &#123;</span><br><span class="line">       <span class="attribute">proxy_pass</span> http://server:port;</span><br><span class="line">       <span class="comment"># 表示使用 HTTP/1.1 协议</span></span><br><span class="line">       <span class="attribute">proxy_http_version</span> <span class="number">1</span>.<span class="number">1</span>;   </span><br><span class="line">       <span class="comment"># 表示将 Upgrade 头设置为 $http_upgrade。在http请求头中加入了 Upgrade: websocket</span></span><br><span class="line">       <span class="attribute">proxy_set_header</span> Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line">       <span class="comment"># 表示将 Connection 头设置为 &quot;upgrade&quot;。在http请求头中加入了 Connection: Upgrade</span></span><br><span class="line">       <span class="attribute">proxy_set_header</span> Connection <span class="variable">$connection_upgrade</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>刷新 <code>Nginx</code> 配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos conf.d]<span class="comment"># /usr/sbin/nginx -t </span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@VM-0-9-centos conf.d]<span class="comment"># /usr/sbin/nginx -s reload</span></span><br><span class="line">[root@VM-0-9-centos conf.d]<span class="comment"># </span></span><br></pre></td></tr></table></figure></li></ol><h2 id="WebSocket-长时间不进行推送"><a href="#WebSocket-长时间不进行推送" class="headerlink" title="WebSocket 长时间不进行推送"></a>WebSocket 长时间不进行推送</h2><ol><li>方案一：通过 <code>proxy_read_timeout</code> 超时连接时长解决</li></ol><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 监听 /message 路径的请求</span></span><br><span class="line"><span class="section">location</span><span class="regexp"> ^~</span> /message &#123;</span><br><span class="line">   <span class="attribute">proxy_pass</span> http://server:port;</span><br><span class="line">   <span class="comment"># 解决连接超时问题，60分钟，默认是60s。</span></span><br><span class="line">   <span class="attribute">proxy_read_timeout</span> <span class="number">3600s</span>;</span><br><span class="line">   <span class="comment"># 表示使用 HTTP/1.1 协议</span></span><br><span class="line">   <span class="attribute">proxy_http_version</span> <span class="number">1</span>.<span class="number">1</span>;   </span><br><span class="line">   <span class="comment"># 表示将 Upgrade 头设置为 $http_upgrade。在http请求头中加入了 Upgrade: websocket</span></span><br><span class="line">   <span class="attribute">proxy_set_header</span> Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line">   <span class="comment"># 表示将 Connection 头设置为 &quot;upgrade&quot;。在http请求头中加入了 Connection: Upgrade</span></span><br><span class="line">   <span class="attribute">proxy_set_header</span> Connection <span class="variable">$connection_upgrade</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>方案二：通过前端设置定时器，进行 <code>WebSocket</code> 进行心跳请求</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">timer=<span class="built_in">setInterval</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (websocket.<span class="property">readyState</span> == <span class="number">1</span>) &#123;</span><br><span class="line">        websocket.<span class="title function_">send</span>(<span class="string">&quot;心跳包检测&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//IM连接已断开</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;, <span class="number">50</span> * <span class="number">1000</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web服务器 </category>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx-配置跨域（七）</title>
      <link href="/2023/05/12/Nginx/Nginx-%E9%85%8D%E7%BD%AE%E8%B7%A8%E5%9F%9F%EF%BC%88%E4%B8%83%EF%BC%89/"/>
      <url>/2023/05/12/Nginx/Nginx-%E9%85%8D%E7%BD%AE%E8%B7%A8%E5%9F%9F%EF%BC%88%E4%B8%83%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="问题思考？"><a href="#问题思考？" class="headerlink" title="问题思考？"></a>问题思考？</h2><ol><li><p><strong>什么是跨域？</strong></p><ul><li><strong>跨域是指浏览器不允许一个网站访问另一个网站的资源。</strong></li></ul></li><li><p><strong>跨域的例子？</strong></p><ul><li>当我们开发时，需要前后端进行联调代码。</li><li>这时 如果 前端的ip是 <code>192.168.56.10:8080</code> ，后端的ip是 <code>192.168.53.20:8888</code></li><li>那么 前端 请求后台就会出现跨域问题。</li></ul></li><li><p><strong>出现跨域的原因？</strong></p><ul><li>不同域名。例如：<a href="http://www.example.com/">www.example.com</a> 请求 <a href="http://api.example.com/">api.example.com</a></li><li>不同协议。例如：<a href="http://a.baidu.com/">http://a.baidu.com</a> 请求 <a href="https://www.baidu.com/">https://www.baidu.com</a> </li><li>不同端口。例如：<a href="http://127.0.0.1:5500/">http://127.0.0.1:5500</a> 请求 <a href="http://127.0.0.1:8089/">http://127.0.0.1:8089</a>  </li></ul></li><li><p><strong>图解说明</strong></p><ul><li><p>当我们在网页上面请求 <a href="http://127.0.0.1:5500/index">http://127.0.0.1:5500/index</a></p><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305121459712.png" alt="img"></p></li></ul><ul><li><p>这时候在JavaScript中需要请求第三方接口 <a href="http://127.0.0.1:8089/">http://127.0.0.1:8089</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="title function_">fetch</span>(<span class="string">&quot;http://127.0.0.1:8089/api/testCross&quot;</span>)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>控制台中打印错误信息</p><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305121459518.png" alt="img"></p></li></ul></li></ol><h2 id="Nginx-处理跨域"><a href="#Nginx-处理跨域" class="headerlink" title="Nginx 处理跨域"></a><code>Nginx</code> 处理跨域</h2><ul><li><p><strong>方式一：接受来自任意源的跨域请求</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># 配置允许所有源的跨域请求（即 add_header &#x27;Access-Control-Allow-Origin&#x27; &#x27;*&#x27;;）</span></span><br><span class="line">  <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span> <span class="string">&#x27;*&#x27;</span>;</span><br><span class="line">  <span class="comment"># 配置允许请求方法</span></span><br><span class="line">  <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Allow-Methods&#x27;</span> <span class="string">&#x27;GET, POST, PUT, DELETE&#x27;</span>;</span><br><span class="line">  <span class="comment"># 配置允许的请求头</span></span><br><span class="line">  <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Allow-Headers&#x27;</span> <span class="string">&#x27;DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type&#x27;</span>;</span><br><span class="line">  <span class="comment"># 如果请求方法是 OPTIONS，则返回 HTTP 状态码 20</span></span><br><span class="line">  <span class="attribute">if</span> (<span class="variable">$request_method</span> = <span class="string">&#x27;OPTIONS&#x27;</span>) &#123;</span><br><span class="line">    <span class="attribute">return</span> <span class="number">204</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>方式二：只有请求路径以 /api/ 开头的请求才会添加跨域头信息</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span> /api &#123;</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 配置允许所有源的跨域请求（即 add_header &#x27;Access-Control-Allow-Origin&#x27; &#x27;*&#x27;;）</span></span><br><span class="line">    <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span> <span class="string">&#x27;*&#x27;</span>;</span><br><span class="line">    <span class="comment"># 配置允许请求方法</span></span><br><span class="line">    <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Allow-Methods&#x27;</span> <span class="string">&#x27;GET, POST, PUT, DELETE&#x27;</span>;</span><br><span class="line">    <span class="comment"># 配置允许的请求头</span></span><br><span class="line">    <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Allow-Headers&#x27;</span> <span class="string">&#x27;DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type&#x27;</span>;</span><br><span class="line">    <span class="comment"># 如果请求方法是 OPTIONS，则返回 HTTP 状态码 20</span></span><br><span class="line">    <span class="attribute">if</span> (<span class="variable">$request_method</span> = <span class="string">&#x27;OPTIONS&#x27;</span>) &#123;</span><br><span class="line">        <span class="attribute">return</span> <span class="number">204</span>;</span><br><span class="line">     &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="SpringBoot-处理跨域"><a href="#SpringBoot-处理跨域" class="headerlink" title="SpringBoot 处理跨域"></a><code>SpringBoot</code> 处理跨域</h2><ul><li><p>针对于上面的前后端联调例子，我们可以在 <code>java</code> 中添加以下代码，就可以解决跨域问题。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ResourcesConfig</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 跨域配置</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> CorsFilter <span class="title function_">corsFilter</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">CorsConfiguration</span> <span class="variable">config</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CorsConfiguration</span>();</span><br><span class="line">        config.setAllowCredentials(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">// 设置访问源地址</span></span><br><span class="line">        config.addAllowedOriginPattern(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        <span class="comment">// 设置访问源请求头</span></span><br><span class="line">        config.addAllowedHeader(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        <span class="comment">// 设置访问源请求方法</span></span><br><span class="line">        config.addAllowedMethod(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        <span class="comment">// 有效期 1800秒</span></span><br><span class="line">        config.setMaxAge(<span class="number">1800L</span>);</span><br><span class="line">        <span class="comment">// 添加映射路径，拦截一切请求</span></span><br><span class="line">        <span class="type">UrlBasedCorsConfigurationSource</span> <span class="variable">source</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UrlBasedCorsConfigurationSource</span>();</span><br><span class="line">        source.registerCorsConfiguration(<span class="string">&quot;/**&quot;</span>, config);</span><br><span class="line">        <span class="comment">// 返回新的CorsFilter</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">CorsFilter</span>(source);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="区别？"><a href="#区别？" class="headerlink" title="区别？"></a>区别？</h2><blockquote><p><code>Nginx</code> 处理跨域和 <code>Spring Boot</code> 处理跨域的区别主要在于它们<strong>处理跨域请求的位置</strong>不同。</p><p><code>Nginx</code> ：处理跨域适用于<strong>前端应用程序</strong>与<strong>后端 API 之间</strong>的跨域问题</p><p><code>Spring Boot</code>：处理跨域则适用于在<strong>后端应用程序</strong>中解决跨域问题</p></blockquote><ol><li><p><strong><code>Nginx</code> 处理跨域</strong></p><ul><li><code>Nginx</code> 处理跨域是在服务器端处理跨域请求的</li><li>首先，当客户端发送跨域请求时，<strong>请求会先到达 <code>Nginx</code> 服务器</strong>。</li><li>然后，<code>Nginx</code> 服务器会添加相应的头信息并转发请求到后端应用服务器。</li></ul></li><li><p><strong><code>SpringBoot</code> 处理跨域</strong></p><ul><li>Spring Boot 处理跨域是在应用服务器端处理跨域请求的</li><li>首先，当客户端发送跨域请求时，请求会先到达 <code>Nginx</code> 服务器；</li><li>然后，<code>Nginx</code> 服务器会转发请求到后端应用服务器；</li><li>最后，应用服务器再通过配置 <code>CORS</code> 过滤器来处理跨域请求；</li></ul></li><li><p><strong>服务器和服务器之间不存在跨域，只有浏览器才存在跨域的说法，例如 HttpClient 请求</strong>。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Web服务器 </category>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx-配置参数（六）</title>
      <link href="/2023/05/12/Nginx/Nginx-%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0%EF%BC%88%E5%85%AD%EF%BC%89/"/>
      <url>/2023/05/12/Nginx/Nginx-%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0%EF%BC%88%E5%85%AD%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="location-参数"><a href="#location-参数" class="headerlink" title="location 参数"></a>location 参数</h2><blockquote><p>location ：配置请求的路由，可以使用修饰符或正则表达式。</p><p>注意事项：<strong>location uri 前边的/不能省略，uri后边的/可以省略</strong>。</p></blockquote><p>如下内容的优先级从高到低</p><div class="tabs" id="location"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#location-1">1.精确匹配【=】</button></li><li class="tab"><button type="button" data-href="#location-2">2.抢占式前缀匹配【^~】</button></li><li class="tab"><button type="button" data-href="#location-3">3.正则匹配【~】</button></li><li class="tab"><button type="button" data-href="#location-4">3.正则匹配【~*】</button></li><li class="tab"><button type="button" data-href="#location-5">4.普通前缀匹配【/】</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="location-1"><p>用于<strong>标准 URI</strong> 前，要求请求字符串与其精准匹配，成功则立即处理，nginx 停止搜索其他匹配。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  只有当访问 www.nginx-test.com/match_all/ 时才会匹配 /usr/share/nginx/html/match_all/index.html</span></span><br><span class="line"><span class="section">location</span> = /match_all/ &#123;</span><br><span class="line">   <span class="attribute">root</span> /usr/share/nginx/html</span><br><span class="line">   index index.html</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="location-2"><p>用于<strong>标准 URI</strong> 前，并要求一旦匹配到就会立即处理，不再去匹配其他的那些个正则 URI，一般用来匹配目录</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 当访问 www.nginx-test.com/bbs/ 时会匹配上 /usr/share/nginx/html/bbs/index.html</span></span><br><span class="line"><span class="section">location</span><span class="regexp"> ^~</span> /bbs &#123;</span><br><span class="line">   <span class="attribute">root</span> /usr/share/nginx/html;</span><br><span class="line">   <span class="attribute">index</span> index.html index.htm;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="location-3"><p>用于<strong>正则 URI</strong> 前，表示 URI 包含正则表达式， <strong>区分</strong>大小写</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">用于正则 <span class="attribute">URI</span> 前，表示 URI 包含正则表达式， 区分大小写<span class="comment"># 当访问 www.nginx-test.com/a.jpg 等路径时会去 /usr/share/nginx/images/a.jpg 找对应的资源</span></span><br><span class="line">location <span class="regexp">~ \.(jpeg|jpg|png|svg)$</span> &#123;</span><br><span class="line">   <span class="attribute">root</span> /usr/share/nginx/images;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="location-4"><p>用于<strong>正则 URI</strong> 前， 表示 URI 包含正则表达式， <strong>不区分</strong>大小写</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 当访问 www.nginx-test.com/A.jpg 等路径时会去 /usr/share/nginx/images/A.jpg 找对应的资源</span></span><br><span class="line"><span class="section">location</span> <span class="regexp">~* \.(jpeg|jpg|png|svg)$</span> &#123;</span><br><span class="line">   <span class="attribute">root</span> /usr/share/nginx/images;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="location-5"><p>location 后没有参数直接跟着 <strong>标准 URI</strong>，表示前缀匹配，代表跟请求中的 URI 从头开始匹配</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">   <span class="attribute">root</span> /usr/share/nginx/html</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="root-参数"><a href="#root-参数" class="headerlink" title="root 参数"></a>root 参数</h2><blockquote><p> <code>root</code> : 指令用于指定一个文件系统路径和静态资源文件的根目录。</p></blockquote><ul><li>语法</li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">   <span class="comment"># root路径＋location路径</span></span><br><span class="line">   <span class="attribute">root</span> path</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>示例</li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span><span class="regexp"> ^~</span> /test &#123;</span><br><span class="line"><span class="attribute">root</span> /opt</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>请求示例</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://x.x.x.x/test</span><br></pre></td></tr></table></figure><ul><li>实际访问目录</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/opt/test</span><br></pre></td></tr></table></figure><h2 id="alias-参数"><a href="#alias-参数" class="headerlink" title="alias 参数"></a>alias 参数</h2><blockquote><p> <code>alias</code> ：指令用于指定文件系统路径，但它与 <code>root</code> 指令有所不同。</p><p> 指定文件路径，使用 <code>alias</code> 时，目录后面一定要加 <strong>/</strong></p></blockquote><ul><li>语法</li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">   <span class="comment"># root路径＋location路径</span></span><br><span class="line">   <span class="attribute">alias</span> path</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>示例</li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span><span class="regexp"> ^~</span> /test-alias/ &#123;</span><br><span class="line">    <span class="attribute">alias</span> /opt/test/alias/;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>请求示例</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://x.x.x.x/test-alias/index.html</span><br></pre></td></tr></table></figure><ul><li>实际访问目录</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/opt/test/alias/</span><br></pre></td></tr></table></figure><h2 id="proxy-pass-修饰符"><a href="#proxy-pass-修饰符" class="headerlink" title="proxy_pass 修饰符"></a>proxy_pass 修饰符</h2><blockquote><p>反向代理配置，用于代理请求，适用于前后端负载分离或多台机器、服务器负载分离的场景。</p><p>匹配到location配置的URL路径后，转发请求到【proxy_pass】配置的URL。</p><p>是否会附加location配置路径与【proxy_pass】配置的路径后是否有”/“有关，有”/“则不附加。</p><p>具体博文请参考 <a href="http://localhost:4000/2023/05/11/Nginx/Nginx-%E4%BB%A3%E7%90%86%E8%BD%AC%E5%8F%91%EF%BC%88%E5%9B%9B%EF%BC%89/">Nginx-代理转发（四）</a></p></blockquote><h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><blockquote><p><a href="https://blog.csdn.net/weixin_46270732/article/details/116937218">什么是NGINX的动静分离；什么是负载均衡</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Web服务器 </category>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx-动静分离（五）</title>
      <link href="/2023/05/11/Nginx/Nginx-%E5%8A%A8%E9%9D%99%E5%88%86%E7%A6%BB%EF%BC%88%E4%BA%94%EF%BC%89/"/>
      <url>/2023/05/11/Nginx/Nginx-%E5%8A%A8%E9%9D%99%E5%88%86%E7%A6%BB%EF%BC%88%E4%BA%94%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>本文的核心主要是将前四篇博文的内容进行一个综合练习，通过 <code>Nginx</code> 部署开源框架 <code>Ruoyi-Vue</code> 这个需求进行实现动静分离。 </p><p><strong>准备工作</strong></p><ul><li>网盘链接: <a href="https://pan.baidu.com/s/13bTaoFbooNpEQ9oE9vXsGw">https://pan.baidu.com/s/13bTaoFbooNpEQ9oE9vXsGw</a>  密码: vx7n</li></ul></blockquote><h2 id="问题思考"><a href="#问题思考" class="headerlink" title="问题思考?"></a>问题思考?</h2><ol><li><p><strong>为什么不使用 Apache Tomcat 处理动静分离？</strong></p><ul><li><code>Apache Tocmat</code> 严格来说是一款 <code>java EE</code> 服务器，主要是用来处理 <code>servlet</code> 请求。例如 <code>SpringBoot</code> 中内置的就是 Tomcat 服务器。</li></ul></li><li><p><strong>静态资源（<code>html、css、js</code>、图片）交给谁处理？</strong></p><ul><li>将静态文件交给 <code>Nginx</code> 处理，可以提高系统的访问速度，减少 <code>Tomcat</code> 的请求次数，有效的给后端服务器降压。</li></ul></li><li><p><strong>静态资源一定是和 <code>Nginx</code> 放在同一台服务器的吗？</strong></p><ul><li>是的，本质上来说 <code>Nginx</code> 配置本身就是一个静态资源的服务器。例如，我们打的前端 Docker 镜像本质上一个 <code>Nginx</code> 服务器。</li></ul></li><li><p><strong>那动静分离之后，静态资源如何跟动态请求交互呢？</strong></p><ul><li>静态资源是通过浏览器和动态资源进行交互的。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305120041894.png" alt="888dce6baa76ca30e5892d8f9d16f4a"></p></li></ol><h2 id="具体需求"><a href="#具体需求" class="headerlink" title="具体需求"></a>具体需求</h2><blockquote><p>本过程也可以在一台服务器中进行，但为了更好的理解动静分离，本人用到的是两台服务器 <code>server1</code> 和 <code>server2</code> 。</p><ul><li><code>server1</code> ：部署的是 <code>nginx</code> 和 前端文件服务；</li><li><code>server2</code> ：部署的是后端 jar 服务；</li></ul><p>实现流程如下：</p><ul><li>首先，当客户端通过 <a href="http://ip:port/path">http://ip:port/path</a> 进行访问。</li><li>然后，当请求达到服务器之后，通过 <code>Nginx</code> 代理 转发到真正的目标服务器上。</li><li>最后，返回请求信息。</li><li>具体流程如下图</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305120049140.png" alt="image-20230512004958119"></p></blockquote><h2 id="Nginx-配置-Ruoyi-Vue-框架"><a href="#Nginx-配置-Ruoyi-Vue-框架" class="headerlink" title="Nginx 配置 Ruoyi-Vue 框架"></a><code>Nginx</code> 配置 <code>Ruoyi-Vue</code> 框架</h2><blockquote><p>具体步骤如下：</p><ol><li><code>server1</code> ：上传静态资源。</li><li><code>server1</code> ：创建 <code>nginx</code> 配置文件，并使其生效。</li><li><code>server2</code> ：修改 <code>ruoyi-admin.jar</code> 中的数据库和 <code>Redis</code> 连接信息，并使其生效。</li><li><code>server1</code> ：通过 <code>crul</code> 命令是否可以访问该端口。</li><li>客户端访问</li></ol></blockquote><h3 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h3><ol><li><p><code>server1</code> ：上传静态资源。</p><ul><li><p>文件路径：<code>/home/ruoyi</code></p><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305120104382.png" alt="image-20230512010402361"></p></li></ul></li><li><p><code>server1</code> ：创建 <code>nginx</code> 配置文件，并使其生效。</p><div class="tabs" id="server1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#server1-1">【第一步：创建nginx配置文件 8003.conf】</button></li><li class="tab"><button type="button" data-href="#server1-2">【第二步：刷新 nginx 配置文件】</button></li><li class="tab"><button type="button" data-href="#server1-3">【第三步：开放防火墙端口，刷新配置】</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="server1-1"><ul><li><p><code>nginx</code> 配置文件路径 <code>/etc/nginx/cond.d</code></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 虚拟主机server块</span></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line"> <span class="comment"># 监听端口</span></span><br><span class="line">     <span class="attribute">listen</span>       <span class="number">8003</span>;</span><br><span class="line">     <span class="comment"># 匹配请求中的host值</span></span><br><span class="line">     <span class="attribute">server_name</span>  localhost;</span><br><span class="line">     <span class="attribute">charset</span> utf-<span class="number">8</span>;</span><br><span class="line"></span><br><span class="line"> <span class="comment"># 监听请求静态资源路径</span></span><br><span class="line">     <span class="section">location</span> / &#123;</span><br><span class="line">       <span class="attribute">root</span>   /home/ruoyi;</span><br><span class="line">   <span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.html;</span><br><span class="line">       <span class="attribute">index</span>  index.html index.htm;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment"># 监听请求静态资源路径</span></span><br><span class="line">     <span class="section">location</span> /prod-api/ &#123;</span><br><span class="line">        <span class="comment">#nginx的主机地址</span></span><br><span class="line">        <span class="attribute">proxy_set_header</span> Host <span class="variable">$http_host</span>;</span><br><span class="line"></span><br><span class="line">     <span class="comment">#用户端真实的IP，即客户端IP</span></span><br><span class="line">         <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">         <span class="attribute">proxy_set_header</span> REMOTE-HOST <span class="variable">$remote_addr</span>;</span><br><span class="line">         <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">         </span><br><span class="line">         <span class="comment"># 配置代理服务器, 这里 如果是本机就直接使用 http://localhost:port，如果不是就是用目标服务器的 ip + 端口。</span></span><br><span class="line">         <span class="attribute">proxy_pass</span> http://localhost:8080/;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="attribute">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /50x.html;</span><br><span class="line">     <span class="section">location</span> = /50x.html &#123;</span><br><span class="line">         <span class="attribute">root</span>   html;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="server1-2"><ul><li><p>刷新 <code>nginx</code> 配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos conf.d]<span class="comment"># /usr/sbin/nginx -t </span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@VM-0-9-centos conf.d]<span class="comment"># /usr/sbin/nginx -s reload</span></span><br><span class="line">[root@VM-0-9-centos conf.d]<span class="comment"># </span></span><br></pre></td></tr></table></figure></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="server1-3"><ul><li><p><code>server1</code> ：开放防火墙端口，刷新配置。</p><div class="note warning simple"><p>如果为 阿里云 或者 腾讯云 需要配置安全组规则。例如：<a href="https://developer.aliyun.com/article/767328">阿里云-配置安全组规则</a></p></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos images]<span class="comment"># firewall-cmd --zone=public --add-port=8003/tcp --permanent # 开放8003端口</span></span><br><span class="line">success</span><br><span class="line">[root@VM-0-9-centos images]<span class="comment"># firewall-cmd --reload # 刷新防火墙配置</span></span><br><span class="line">success</span><br><span class="line">[root@VM-0-9-centos images]<span class="comment"># </span></span><br></pre></td></tr></table></figure></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></li><li><p><code>server2</code> ：修改 <code>ruoyi-admin.jar</code> 中的连接信息，并使其生效。</p><div class="tabs" id="server2"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#server2-1">【第一步：修改jar包配置信息】</button></li><li class="tab"><button type="button" data-href="#server2-2">【第二步：创建数据库信息】</button></li><li class="tab"><button type="button" data-href="#server2-3">【第三步：启动项目】</button></li><li class="tab"><button type="button" data-href="#server2-4">【第四步：开放端口】</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="server2-1"><ul><li><p>通过压缩工具打开<code>jar</code>包，可以通过 <code>360压缩</code> 或者 <code>7z</code> 打开</p><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305111635689.png" alt="image-20230511163533665"></p></li><li><p>修改 <code>BOOT-INF\classes</code> 文件下 <code>application-druid.yml</code> 文件中的 数据库连接信息</p><blockquote><p>关于Linux下的MySQL安装可以参考我的博客 《<a href="http://example.com/2023/05/09/Linux/Linux-Shell-MySQL/">Linux-Shell-MySQL</a>》</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 数据源配置</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">    <span class="attr">datasource:</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">        <span class="attr">driverClassName:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">        <span class="attr">druid:</span></span><br><span class="line">            <span class="comment"># 主库数据源</span></span><br><span class="line">            <span class="attr">master:</span></span><br><span class="line">                <span class="attr">url:</span> <span class="string">jdbc:mysql://server:3306/ry?useUnicode=true&amp;characterEncoding=utf8&amp;zeroDateTimeBehavior=convertToNull&amp;useSSL=true&amp;serverTimezone=GMT%2B8</span></span><br><span class="line">                <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">                <span class="attr">password:</span> <span class="string">P@ssw0rd</span></span><br><span class="line"><span class="string">......</span></span><br></pre></td></tr></table></figure></li><li><p>修改 <code>BOOT-INF\classes</code> 文件下 <code>application.yml</code> 文件中的 <code>Redis</code> 连接信息</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># redis 配置</span></span><br><span class="line"><span class="attr">redis:</span></span><br><span class="line">  <span class="comment"># 地址</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">server</span></span><br><span class="line">  <span class="comment"># 端口，默认为6379</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">6379</span></span><br><span class="line">  <span class="comment"># 数据库索引</span></span><br><span class="line">  <span class="attr">database:</span> <span class="number">0</span></span><br><span class="line">  <span class="comment"># 密码</span></span><br><span class="line">  <span class="attr">password:</span> </span><br><span class="line">  <span class="comment"># 连接超时时间</span></span><br><span class="line">  <span class="attr">timeout:</span> <span class="string">10s</span></span><br><span class="line">  <span class="attr">lettuce:</span></span><br><span class="line">    <span class="attr">pool:</span></span><br><span class="line">      <span class="comment"># 连接池中的最小空闲连接</span></span><br><span class="line">      <span class="attr">min-idle:</span> <span class="number">0</span></span><br><span class="line">      <span class="comment"># 连接池中的最大空闲连接</span></span><br><span class="line">      <span class="attr">max-idle:</span> <span class="number">8</span></span><br><span class="line">      <span class="comment"># 连接池的最大数据库连接数</span></span><br><span class="line">      <span class="attr">max-active:</span> <span class="number">8</span></span><br><span class="line">      <span class="comment"># #连接池最大阻塞等待时间（使用负值表示没有限制）</span></span><br><span class="line">      <span class="attr">max-wait:</span> <span class="string">-1ms</span></span><br></pre></td></tr></table></figure></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="server2-2"><ul><li><p>创建 <code>ry</code> 数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 创建 ruoyi 数据库 jdbc:mysql:<span class="operator">/</span><span class="operator">/</span>server:<span class="number">3306</span><span class="operator">/</span>ry</span><br><span class="line"><span class="keyword">CREATE</span> DATABASE `ry` <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="string">&#x27;utf8mb4&#x27;</span> <span class="keyword">COLLATE</span> <span class="string">&#x27;utf8mb4_unicode_ci&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>将百度网盘中的 <code>ry_20230223.sql</code> 文件导入 <code>ry</code> 数据库中</p><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305120108851.png" alt="image-20230512010835821"></p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="server2-3"><ul><li><p>上传至 <code>/home/ruoyi</code> 盘符</p><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305120110359.png" alt="image-20230512011020342"></p></li><li><p>启动项目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-24-4-centos ruoyi]<span class="comment"># java -jar ruoyi-admin.jar &amp;</span></span><br><span class="line">[1] 6556</span><br></pre></td></tr></table></figure></li><li><p>查看日志</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-24-4-centos ruoyi]<span class="comment"># tail -f nohup.out </span></span><br><span class="line">..............</span><br><span class="line">00:21:26.908 [main] INFO  c.r.RuoYiApplication - [logStarted,61] - Started RuoYiApplication <span class="keyword">in</span> 28.295 seconds (JVM running <span class="keyword">for</span> 29.96)</span><br><span class="line">(♥◠‿◠)ﾉﾞ  若依启动成功   ლ(´ڡ`ლ)ﾞ  </span><br><span class="line"> .-------.       ____     __        </span><br><span class="line"> |  _ _   \      \   \   /  /    </span><br><span class="line"> | ( <span class="string">&#x27; )  |       \  _. /  &#x27;</span>       </span><br><span class="line"> |(_ o _) /        _( )_ .<span class="string">&#x27;         </span></span><br><span class="line"><span class="string"> | (_,_).&#x27;</span> __  ___(_ o _)<span class="string">&#x27;          </span></span><br><span class="line"><span class="string"> |  |\ \  |  ||   |(_,_)&#x27;</span>         </span><br><span class="line"> |  | \ `<span class="string">&#x27;   /|   `-&#x27;</span>  /           </span><br><span class="line"> |  |  \    /  \      /           </span><br><span class="line"> <span class="string">&#x27;&#x27;</span>-<span class="string">&#x27;   `&#x27;</span>-<span class="string">&#x27;    `-..-&#x27;</span>  </span><br></pre></td></tr></table></figure></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="server2-4"><ul><li><div class="note warning simple"><p>如果为 阿里云 或者 腾讯云 需要配置安全组规则。例如：<a href="https://developer.aliyun.com/article/767328">阿里云-配置安全组规则</a></p></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-24-4-centos ruoyi]<span class="comment"># firewall-cmd --zone=public --add-port=8080/tcp --permanent # 开放8080端口</span></span><br><span class="line">success</span><br><span class="line">[root@VM-24-4-centos ruoyi]<span class="comment"># firewall-cmd --reload # 刷新防火墙配置</span></span><br><span class="line">success</span><br><span class="line">[root@VM-24-4-centos ruoyi]<span class="comment"># </span></span><br></pre></td></tr></table></figure></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></li><li><p><code>server1</code> ：通过 <code>crul</code> 命令是否可以访问该端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos home]<span class="comment"># curl http://server2:8080/</span></span><br><span class="line">欢迎使用RuoYi后台管理框架，当前版本：v3.8.5，请通过前端地址访问。</span><br></pre></td></tr></table></figure></li><li><p>客户端进行访问</p><ul><li>访问地址：<a href="http://server1:8003">http://server1:8003</a></li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305120112387.png" alt="image-20230512011246341"></p></li></ol><h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><blockquote><p><a href="https://blog.csdn.net/weixin_46270732/article/details/116937218">什么是NGINX的动静分离；什么是负载均衡</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Web服务器 </category>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx-代理转发（四）</title>
      <link href="/2023/05/11/Nginx/Nginx-%E4%BB%A3%E7%90%86%E8%BD%AC%E5%8F%91%EF%BC%88%E5%9B%9B%EF%BC%89/"/>
      <url>/2023/05/11/Nginx/Nginx-%E4%BB%A3%E7%90%86%E8%BD%AC%E5%8F%91%EF%BC%88%E5%9B%9B%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>在 《<a href="https://wickson.top/2023/05/11/Nginx/Nginx-%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%EF%BC%88%E4%B8%89%EF%BC%89/">Nginx-反向代理（三）</a>》博文中在 nginx 的配置文件中出现了一下参数 <strong><code>proxy_pass</code></strong> 以及 如何 <strong><code>设置代理请求headers</code></strong>。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 监听请求静态资源路径</span></span><br><span class="line">  <span class="section">location</span> / &#123;</span><br><span class="line">    <span class="comment"># 配置代理服务器, 这里 如果是本机就直接使用 http://localhost:port，如果不是就是用目标服务器的 ip + 端口。</span></span><br><span class="line">    <span class="attribute">proxy_pass</span> http://server2:port;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></blockquote><h2 id="proxy-pass"><a href="#proxy-pass" class="headerlink" title="proxy_pass"></a>proxy_pass</h2><blockquote><ul><li>proxy_pass: <strong>用于配制代理服务器，<code>proxy_pass</code> 区别于 <code>root</code> 和 <code>alias</code> ，是将请求反向代理到指定的url，后面博文会讲解他们的区别</strong></li></ul></blockquote><ul><li>语法</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxy_pass &lt;URL&gt;</span><br></pre></td></tr></table></figure><ul><li>示例</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">proxy_pass http://127.0.0.1:8081;</span><br><span class="line">proxy_pass http://127.0.0.1/proxy</span><br></pre></td></tr></table></figure><ul><li>注意事项：<strong>nginx 配置 proxy_pass 中 url 末尾 带/ 与 不带/ 的区别</strong></li></ul><div class="tabs" id="proxy_pass"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#proxy_pass-1">【 带/ 】</button></li><li class="tab"><button type="button" data-href="#proxy_pass-2">【 不带/ 】</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="proxy_pass-1"><div class="note success simple"><p><strong>带 / : 会将原uri去除location匹配表达式后的内容拼接在proxy_pass中url之后</strong></p></div><p><strong>用户请求 URI</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bbs/abc/test.html</span><br></pre></td></tr></table></figure><p><strong>proxy_pass 配置</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 匹配路径，后缀不带/</span></span><br><span class="line"><span class="section">location</span> /bbs &#123;</span><br><span class="line">   <span class="comment"># 带 / : 会将原uri去除location匹配表达式后的内容拼接在proxy_pass中url之后</span></span><br><span class="line">   <span class="attribute">proxy_pass</span> http://127.0.0.1:8080/;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 匹配路径，后缀带/</span></span><br><span class="line"><span class="section">location</span> /bbs/ &#123;</span><br><span class="line">   <span class="comment"># 带 / : 会将原uri去除location匹配表达式后的内容拼接在proxy_pass中url之后</span></span><br><span class="line">   <span class="attribute">proxy_pass</span> http://127.0.0.1:8080/;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>【 location /bbs 】</p><ul><li><p>计算规则：<a href="http://127.0.0.1:8080/">http://127.0.0.1:8080/</a> + （/bbs/abc/test.html - /bbs）</p></li><li><p>最终结果：<a href="http://127.0.0.1:8080//abc/test.html">http://127.0.0.1:8080//abc/test.html</a></p></li></ul><p>【 location /bbs/ 】</p><ul><li><p>计算规则：<a href="http://127.0.0.1:8080/">http://127.0.0.1:8080/</a> + （/bbs/abc/test.html - /bbs/）</p></li><li><p>最终结果：<a href="http://127.0.0.1:8080/abc/test.html">http://127.0.0.1:8080/abc/test.html</a></p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="proxy_pass-2"><div class="note success simple"><p><strong>不带 / : location匹配到的部分属于请求部分，匹配到 /bbs/ 时会将整个请求部分追加到proxy_pass上</strong></p></div><p><strong>用户请求 URI</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bbs/abc/test.html</span><br></pre></td></tr></table></figure><p><strong>proxy_pass 配置</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 匹配路径，后缀不带/</span></span><br><span class="line"><span class="section">location</span> /bbs &#123;</span><br><span class="line">   <span class="comment"># 不带 / : location匹配到的部分属于请求部分，匹配到 /bbs/ 时会将整个请求部分追加到proxy_pass上</span></span><br><span class="line">   <span class="attribute">proxy_pass</span> http://127.0.0.1:8080;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 匹配路径，后缀带/</span></span><br><span class="line"><span class="section">location</span> /bbs/ &#123;</span><br><span class="line">   <span class="comment"># 不带 / : location匹配到的部分属于请求部分，匹配到 /bbs/ 时会将整个请求部分追加到proxy_pass上</span></span><br><span class="line">   <span class="attribute">proxy_pass</span> http://127.0.0.1:8080;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>【 location /bbs 】</p><ul><li><p>计算规则：<a href="http://127.0.0.1:8080">http://127.0.0.1:8080</a> + （/bbs/abc/test.html）</p></li><li><p>最终结果：<a href="http://127.0.0.1:8080/bbs/abc/test.html">http://127.0.0.1:8080/bbs/abc/test.html</a></p></li></ul><p>【 location /bbs/ 】</p><ul><li><p>计算规则：<a href="http://127.0.0.1:8080">http://127.0.0.1:8080</a> + （/bbs/abc/test.html）</p></li><li><p>最终结果：<a href="http://127.0.0.1:8080/bbs/abc/test.html">http://127.0.0.1:8080/bbs/abc/test.html</a></p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="设置代理请求-headers"><a href="#设置代理请求-headers" class="headerlink" title="设置代理请求 headers"></a>设置代理请求 <code>headers</code></h2><blockquote><p>headers：指的是Nginx服务器发送给<strong>客户端的 HTTP 响应头部信息</strong>。</p><p>在HTTP响应中，头部信息包含关于响应的元数据，如响应的内容类型、响应的日期和时间、服务器的类型和版本、以及其他有关响应和请求的信息。</p></blockquote><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><div class="note orange simple"><p>问题位置：系统监控 -&gt; 在线用户 - 主机地址</p><p>问题描述：其中主机字段应该是获取的当前登录用户的真实 ip 地址，而不是主机服务器的ip。</p></div><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305112036519.png" alt="image-20230511203608477"></p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><ol><li><p>在 <code>nginx</code> 配置文件（8002.conf）中新增如下如下内容</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 虚拟主机server块</span></span><br><span class="line">server&#123;</span><br><span class="line">  </span><br><span class="line">    <span class="comment"># 监听端口</span></span><br><span class="line">    <span class="attribute">listen</span> <span class="number">8002</span>;</span><br><span class="line">    <span class="comment"># 匹配请求中的host值</span></span><br><span class="line">    <span class="attribute">server_name</span> ruoyi.localhost;</span><br><span class="line">      </span><br><span class="line">    <span class="comment"># 监听请求静态资源路径</span></span><br><span class="line">    <span class="section">location</span> / &#123;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">#nginx的主机地址</span></span><br><span class="line">        <span class="attribute">proxy_set_header</span> Host <span class="variable">$http_host</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">#用户端真实的IP，即客户端IP</span></span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="comment"># 配置代理服务器</span></span><br><span class="line">        <span class="attribute">proxy_pass</span> http://192.168.206.120:8088;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><ol><li><p>常用变量值</p><p>| <strong>变量名称</strong> | <strong>变量解释</strong>                                         |<br>| —————— | —————————————————————————— |<br>| $host        | nginx主机IP，例如 192.168.206.120                    |<br>| $http_host   | nginx主机IP和端口，例如 192.168.206.120:8002         |<br>| $proxy_host  | proxy_pass里配置的主机名和端口，例如：localhost:8088 |<br>| $remote_addr | 用户的真实IP，即客户端IP                             |</p></li></ol><ol><li><p>然后刷新配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos home]<span class="comment"># /usr/sbin/nginx -s reload</span></span><br><span class="line">[root@VM-0-9-centos home]<span class="comment"># </span></span><br></pre></td></tr></table></figure></li></ol><ol><li><p>访问</p><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305112034508.png" alt="image-20230511203437468"></p></li></ol><h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><blockquote><ul><li><a href="https://www.jianshu.com/p/549972745909"><code>nginx</code> 配置 proxy_pass 时 <code>url</code> 末尾带“/”与不带“/”的区别如下</a></li><li><a href="https://juejin.cn/post/7083306471697416228"><code>nginx proxy_pass</code>路径后带/与不带/的区别</a></li><li><a href="https://www.bilibili.com/video/BV1rG4y1e7BQ/?p=1&amp;vd_source=8c87bde4b88d9c9613014acf272109fc"><code>nginx</code>一小时入门精讲课程(干货纯享版)</a></li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> Web服务器 </category>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx-反向代理（三）</title>
      <link href="/2023/05/11/Nginx/Nginx-%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%EF%BC%88%E4%B8%89%EF%BC%89/"/>
      <url>/2023/05/11/Nginx/Nginx-%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%EF%BC%88%E4%B8%89%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>本文 主要通过案例 <strong><code>Nginx</code> 配置 <code>Ruoyi</code> 框架</strong> ，学习反向代理。 </p><p><strong>准备工作</strong></p><ul><li>网盘链接: <a href="https://pan.baidu.com/s/1NmCR-vdAcZLouRRn9V1yTA">https://pan.baidu.com/s/1NmCR-vdAcZLouRRn9V1yTA</a> 密码: 1b60</li><li>官网文档：<a href="http://doc.ruoyi.vip/ruoyi">http://doc.ruoyi.vip/ruoyi</a></li><li>源码下载：<a href="https://codeload.github.com/yangzongzhuan/RuoYi/zip/refs/tags/v4.7.4">https://codeload.github.com/yangzongzhuan/RuoYi/zip/refs/tags/v4.7.4</a></li></ul></blockquote><h2 id="具体需求"><a href="#具体需求" class="headerlink" title="具体需求"></a><strong>具体需求</strong></h2><blockquote><p>本过程也可以在一台服务器中进行，但为了更好的理解反向代理，本人用到的是两台服务器 <code>server1</code> 和 <code>server2</code> 。</p><ul><li><code>server1</code> ：部署的是 <code>nginx</code> 服务</li><li><code>server2</code> ：部署的是后端 jar 服务</li></ul><p>实现流程如下：</p><ul><li>首先，当客户端通过 <a href="http://ip:port/path">http://ip:port/path</a> 进行访问。</li><li>然后，当请求达到服务器之后，通过 <code>Nginx</code> 代理 转发到真正的目标服务器上。</li><li>最后，返回请求信息。</li><li>具体流程如下图</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305111616675.png" alt="image-20230511161605653"></p></blockquote><h2 id="Nginx-配置-Ruoyi-框架"><a href="#Nginx-配置-Ruoyi-框架" class="headerlink" title="Nginx 配置 Ruoyi 框架"></a><code>Nginx</code> 配置 <code>Ruoyi</code> 框架</h2><blockquote><p>具体步骤如下：</p><ol><li><code>server1</code> ：创建 <code>nginx</code> 配置文件，并使其生效。</li><li><code>server2</code> ：修改 <code>ruoyi-admin.jar</code> 中的数据库连接信息，并使其生效。</li><li><code>server1</code> ：通过 <code>crul</code> 命令是否可以访问该端口。</li><li>客户端访问</li></ol></blockquote><h3 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h3><ol><li><p><code>server1</code> ：创建 <code>nginx</code> 配置文件，并使其生效。</p><div class="tabs" id="server1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#server1-1">【第一步：创建nginx配置文件 8002.conf】</button></li><li class="tab"><button type="button" data-href="#server1-2">【第二步：刷新 nginx 配置文件】</button></li><li class="tab"><button type="button" data-href="#server1-3">【第三步：开放防火墙端口，刷新配置】</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="server1-1"><ul><li><p><code>nginx</code> 配置文件路径 <code>/etc/nginx/cond.d</code></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 虚拟主机server块</span></span><br><span class="line">server&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># 监听端口</span></span><br><span class="line">  <span class="attribute">listen</span> <span class="number">8002</span>;</span><br><span class="line">  <span class="comment"># 匹配请求中的host值</span></span><br><span class="line">  <span class="attribute">server_name</span> ruoyi.localhost;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># 监听请求静态资源路径</span></span><br><span class="line">  <span class="section">location</span> / &#123;</span><br><span class="line">    <span class="comment"># 配置代理服务器, 这里 如果是本机就直接使用 http://localhost:port，如果不是就是用目标服务器的 ip + 端口。</span></span><br><span class="line">    <span class="attribute">proxy_pass</span> http://server2:port;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="server1-2"><ul><li><p>刷新 <code>nginx</code> 配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos conf.d]<span class="comment"># /usr/sbin/nginx -t </span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@VM-0-9-centos conf.d]<span class="comment"># /usr/sbin/nginx -s reload</span></span><br><span class="line">[root@VM-0-9-centos conf.d]<span class="comment"># </span></span><br></pre></td></tr></table></figure></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="server1-3"><ul><li><p><code>server1</code> ：开放防火墙端口，刷新配置。</p><div class="note warning simple"><p>如果为 阿里云 或者 腾讯云 需要配置安全组规则。例如：<a href="https://developer.aliyun.com/article/767328">阿里云-配置安全组规则</a></p></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos images]<span class="comment"># firewall-cmd --zone=public --add-port=8002/tcp --permanent # 开放8002端口</span></span><br><span class="line">success</span><br><span class="line">[root@VM-0-9-centos images]<span class="comment"># firewall-cmd --reload # 刷新防火墙配置</span></span><br><span class="line">success</span><br><span class="line">[root@VM-0-9-centos images]<span class="comment"># </span></span><br></pre></td></tr></table></figure></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></li><li><p><code>server2</code> ：修改 <code>ruoyi-admin.jar</code> 中的数据库连接信息，并使其生效。</p><div class="tabs" id="server2"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#server2-1">【第一步：修改jar包配置信息】</button></li><li class="tab"><button type="button" data-href="#server2-2">【第二步：创建数据库信息】</button></li><li class="tab"><button type="button" data-href="#server2-3">【第三步：启动项目】</button></li><li class="tab"><button type="button" data-href="#server2-4">【第四步：开放端口】</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="server2-1"><ul><li><p>通过压缩工具打开<code>jar</code>包，可以通过 <code>360压缩</code> 或者 <code>7z</code> 打开</p><p> <img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305111635689.png" alt="image-20230511163533665"></p></li><li><p>修改 <code>BOOT-INF\classes</code> 文件下 <code>application-druid.yml</code> 文件中的 数据库连接信息</p><blockquote><p>关于Linux下的MySQL安装可以参考我的博客 《<a href="http://example.com/2023/05/09/Linux/Linux-Shell-MySQL/">Linux-Shell-MySQL</a>》</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 数据源配置</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">    <span class="attr">datasource:</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">        <span class="attr">driverClassName:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">        <span class="attr">druid:</span></span><br><span class="line">            <span class="comment"># 主库数据源</span></span><br><span class="line">            <span class="attr">master:</span></span><br><span class="line">                <span class="attr">url:</span> <span class="string">jdbc:mysql://server:3306/ry?useUnicode=true&amp;characterEncoding=utf8&amp;zeroDateTimeBehavior=convertToNull&amp;useSSL=true&amp;serverTimezone=GMT%2B8</span></span><br><span class="line">                <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">                <span class="attr">password:</span> <span class="string">P@ssw0rd</span></span><br><span class="line"><span class="string">......</span></span><br></pre></td></tr></table></figure></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="server2-2"><ul><li><p>创建 <code>ry</code> 数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 创建 ruoyi 数据库 jdbc:mysql:<span class="operator">/</span><span class="operator">/</span>server:<span class="number">3306</span><span class="operator">/</span>ry</span><br><span class="line"><span class="keyword">CREATE</span> DATABASE `ry` <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="string">&#x27;utf8mb4&#x27;</span> <span class="keyword">COLLATE</span> <span class="string">&#x27;utf8mb4_unicode_ci&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>将百度网盘中的 <code>ry_20210924.sql</code> 文件导入 <code>ry</code> 数据库中</p><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305111648892.png" alt="image-20230511164821860"></p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="server2-3"><ul><li><p>上传至 <code>/home/ruoyi</code> 盘符</p><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305111700052.png" alt="image-20230511170026032"></p></li><li><p>启动项目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-rw-r--r-- 1 root root 75366452 May 11 16:58 ruoyi-admin.jar</span><br><span class="line">[root@VM-24-4-centos ruoyi]<span class="comment"># nohup java -jar ruoyi-admin.jar &amp;</span></span><br><span class="line">[1] 26695</span><br></pre></td></tr></table></figure></li><li><p>查看日志</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-24-4-centos ruoyi]<span class="comment"># tail -f nohup.out </span></span><br><span class="line">..............</span><br><span class="line">17:09:07.497 [main] INFO  c.r.RuoYiApplication - [logStarted,61] - Started RuoYiApplication <span class="keyword">in</span> 22.314 seconds (JVM running <span class="keyword">for</span> 23.97)</span><br><span class="line">(♥◠‿◠)ﾉﾞ  若依启动成功   ლ(´ڡ`ლ)ﾞ  </span><br><span class="line"> .-------.       ____     __        </span><br><span class="line"> |  _ _   \      \   \   /  /    </span><br><span class="line"> | ( <span class="string">&#x27; )  |       \  _. /  &#x27;</span>       </span><br><span class="line"> |(_ o _) /        _( )_ .<span class="string">&#x27;         </span></span><br><span class="line"><span class="string"> | (_,_).&#x27;</span> __  ___(_ o _)<span class="string">&#x27;          </span></span><br><span class="line"><span class="string"> |  |\ \  |  ||   |(_,_)&#x27;</span>         </span><br><span class="line"> |  | \ `<span class="string">&#x27;   /|   `-&#x27;</span>  /           </span><br><span class="line"> |  |  \    /  \      /           </span><br><span class="line"> <span class="string">&#x27;&#x27;</span>-<span class="string">&#x27;   `&#x27;</span>-<span class="string">&#x27;    `-..-&#x27;</span> </span><br></pre></td></tr></table></figure></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="server2-4"><ul><li><div class="note warning simple"><p>如果为 阿里云 或者 腾讯云 需要配置安全组规则。例如：<a href="https://developer.aliyun.com/article/767328">阿里云-配置安全组规则</a></p></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-24-4-centos ruoyi]<span class="comment"># firewall-cmd --zone=public --add-port=8088/tcp --permanent # 开放8088端口</span></span><br><span class="line">success</span><br><span class="line">[root@VM-24-4-centos ruoyi]<span class="comment"># firewall-cmd --reload # 刷新防火墙配置</span></span><br><span class="line">success</span><br><span class="line">[root@VM-24-4-centos ruoyi]<span class="comment"># </span></span><br></pre></td></tr></table></figure></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></li><li><p><code>server1</code> ：通过 <code>crul</code> 命令是否可以访问该端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos conf.d]<span class="comment"># curl http://server2:8088/</span></span><br><span class="line">[root@VM-0-9-centos conf.d]<span class="comment"># </span></span><br></pre></td></tr></table></figure></li><li><p>客户端进行访问</p><ul><li>访问地址：<a href="http://server1:8002">http://server1:8002</a></li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305111744050.png" alt="image-20230511174435926"></p></li></ol><h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><blockquote><ul><li><a href="https://www.bilibili.com/video/BV1rG4y1e7BQ/?p=1&amp;vd_source=8c87bde4b88d9c9613014acf272109fc"><code>nginx</code>一小时入门精讲课程(干货纯享版)</a></li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> Web服务器 </category>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx-静态资源（二）</title>
      <link href="/2023/05/10/Nginx/Nginx-%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2023/05/10/Nginx/Nginx-%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>本篇博文主要是通过 <code>Nginx</code> 服务器代理静态资源。主要有两个案例，其中一个是 <strong><code>Nginx</code> 配置静态资源</strong>，另一个是 <strong><code>Nginx</code> 配置静态网站</strong>。</p><p><strong>常见静态资源类型：</strong></p><ul><li>浏览器端渲染：HTML、<code>CSS</code>、<code>JS</code></li><li>图片：<code>JPEG</code>、<code>GIF</code>、<code>PNG</code></li><li>视频：<code>FLV</code>、<code>MPEG</code></li><li>文件：<code>TXT</code> 等任意下载文件</li></ul></blockquote><h2 id="Nginx-配置静态资源"><a href="#Nginx-配置静态资源" class="headerlink" title="Nginx 配置静态资源"></a><code>Nginx</code> 配置静态资源</h2><blockquote><p>具体步骤如下：</p><ol><li>上传图片到指定盘符；</li><li>创建 <code>nginx</code> 配置文件；</li><li>检测 <code>nginx</code> 配置文件，并刷新配置文件；</li><li>开放防火墙端口，并刷新配置；</li><li>进行访问；</li></ol></blockquote><h3 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h3><ol><li><p>上传图片到指定盘符</p><ul><li>上传路径：<code>/home/images</code> 盘符下</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305110006300.png" alt="image-20230511000644277"></p></li><li><p>创建 <code>nginx</code> 配置文件。</p><ul><li><p>配置文件路径：<code>/etc/nginx/conf</code></p></li><li><p>配置文件名称：<code>8000.conf</code> </p></li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 虚拟主机server块</span></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line"> </span><br><span class="line">     <span class="comment"># 端口</span></span><br><span class="line">     <span class="attribute">listen</span> <span class="number">8000</span>;</span><br><span class="line">     <span class="comment"># 匹配请求中的host值</span></span><br><span class="line">     <span class="attribute">server_name</span>    localhost;</span><br><span class="line"> </span><br><span class="line">     <span class="comment"># 监听请求静态资源 图片 路径</span></span><br><span class="line">     <span class="section">location</span> /images &#123;</span><br><span class="line">          <span class="comment"># 查找目录</span></span><br><span class="line">          <span class="attribute">root</span> /home;</span><br><span class="line">     &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>检测 <code>nginx</code> 配置文件，并刷新配置文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos images]<span class="comment"># /usr/sbin/nginx -t # 检测配置文件命令</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@VM-0-9-centos images]<span class="comment"># /usr/sbin/nginx -s reload # 刷新配置文件</span></span><br><span class="line">[root@VM-0-9-centos images]<span class="comment"># </span></span><br></pre></td></tr></table></figure></li><li><p>开放防火墙端口，并刷新配置。</p><div class="note warning simple"><p>如果为 阿里云 或者 腾讯云 需要配置安全组规则。例如：<a href="https://developer.aliyun.com/article/767328">阿里云-配置安全组规则</a></p></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos images]<span class="comment"># firewall-cmd --zone=public --add-port=8000/tcp --permanent # 开放8000端口</span></span><br><span class="line">success</span><br><span class="line">[root@VM-0-9-centos images]<span class="comment"># firewall-cmd --reload # 刷新防火墙配置</span></span><br><span class="line">success</span><br><span class="line">[root@VM-0-9-centos images]<span class="comment"># </span></span><br></pre></td></tr></table></figure></li><li><p>进行访问</p><ul><li>访问路径：<code>http:ip:8000/images/20230506231750.jpg</code></li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305110136357.png" alt="image-20230511013614304"></p></li></ol><h2 id="Nginx-配置静态网站"><a href="#Nginx-配置静态网站" class="headerlink" title="Nginx 配置静态网站"></a><code>Nginx</code> 配置静态网站</h2><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><blockquote><p><code>Nginx</code> 配置静态网站，<code>AdminLTE</code> 后台管理系统。</p><ul><li><code>AdminLTE</code> 官方网址：<a href="https://adminlte.io/">https://adminlte.io/</a></li><li>源码下载：<a href="https://codeload.github.com/ColorlibHQ/AdminLTE/tar.gz/refs/tags/v3.2.0">https://codeload.github.com/ColorlibHQ/AdminLTE/tar.gz/refs/tags/v3.2.0</a></li></ul></blockquote><h3 id="实现步骤-1"><a href="#实现步骤-1" class="headerlink" title="实现步骤"></a>实现步骤</h3><blockquote><p>具体步骤如下：</p><ol><li>上传静态资源到指定盘符；</li><li><code>nginx</code> 配置文件；</li><li>检测 <code>nginx</code> 配置文件，并刷新配置文件；</li><li>开放防火墙端口，并刷新配置；</li><li>进行访问；</li></ol></blockquote><ol><li><p><strong>上传静态资源到指定盘符</strong></p><ul><li>上传路径：<code>/home/images</code> 盘符下</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305110122048.png" alt="image-20230511012248028"></p></li><li><p><strong>创建 <code>Nginx</code> 配置文件</strong></p><ul><li>配置文件路径：<code>/etc/nginx/conf</code></li><li>配置文件名称：<code>8001.conf</code> </li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置虚拟主机的相关参数，可以有多个</span></span><br><span class="line">server&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 监听端口, 监听可以配置成IP 或 端口或IP+端口listen 127.0.0.1:8000;</span></span><br><span class="line">    <span class="attribute">listen</span> <span class="number">8001</span>;</span><br><span class="line">    <span class="comment"># 通过请求中的 host 值，找到对应的虚拟主机的配置</span></span><br><span class="line">    <span class="attribute">server_name</span> nginx-dev;</span><br><span class="line">     </span><br><span class="line">    <span class="comment"># 配置请求路由，location 总是从/目录开始匹配。</span></span><br><span class="line">    <span class="comment"># 例如：/static/css ==》 location /css &#123;   root /static;  &#125;</span></span><br><span class="line">    <span class="section">location</span> / &#123;</span><br><span class="line">        <span class="attribute">root</span> /home/static/AdminLTE-<span class="number">3</span>.<span class="number">2</span>.<span class="number">0</span>;</span><br><span class="line">        <span class="attribute">index</span> index.html index2.html index3.html;</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>检测 <code>nginx</code> 配置文件，并刷新配置文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos images]<span class="comment"># /usr/sbin/nginx -t # 检测配置文件命令</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@VM-0-9-centos images]<span class="comment"># /usr/sbin/nginx -s reload # 刷新配置文件</span></span><br><span class="line">[root@VM-0-9-centos images]<span class="comment"># </span></span><br></pre></td></tr></table></figure></li><li><p><strong>开放防火墙端口，并刷新配置</strong></p><div class="note warning simple"><p>如果为 阿里云 或者 腾讯云 需要配置安全组规则。例如：<a href="https://developer.aliyun.com/article/767328">阿里云-配置安全组规则</a></p></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos images]<span class="comment"># firewall-cmd --zone=public --add-port=8001/tcp --permanent # 开放8001端口</span></span><br><span class="line">success</span><br><span class="line">[root@VM-0-9-centos images]<span class="comment"># firewall-cmd --reload # 刷新防火墙配置</span></span><br><span class="line">success</span><br><span class="line">[root@VM-0-9-centos images]<span class="comment"># </span></span><br></pre></td></tr></table></figure></li><li><p><strong>进行访问</strong></p><ul><li>访问路径：<a href="http://ip:8001/index.html">http://ip:8001/index.html</a></li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305110133134.png" alt="image-20230511013353075"></p></li></ol><h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><blockquote><ul><li><a href="https://tsejx.github.io/devops-guidebook//server/nginx/static-resource-server">静态资源服务器</a></li><li><a href="https://www.bilibili.com/video/BV1rG4y1e7BQ/?p=1&amp;vd_source=8c87bde4b88d9c9613014acf272109fc"><code>nginx</code>一小时入门精讲课程(干货纯享版)</a></li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> Web服务器 </category>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx-基础知识（一）</title>
      <link href="/2023/05/10/Nginx/Nginx-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2023/05/10/Nginx/Nginx-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="Nginx-是什么？"><a href="#Nginx-是什么？" class="headerlink" title="Nginx 是什么？"></a><code>Nginx</code> 是什么？</h2><blockquote><p> <code>Nginx</code> 是一款轻量级的 Web 服务器 / 反向代理服务器，广泛用于负载均衡、反向代理和 HTTP 缓存等功能。</p></blockquote><h2 id="Nginx-解决了什么问题？"><a href="#Nginx-解决了什么问题？" class="headerlink" title="Nginx 解决了什么问题？"></a><code>Nginx</code> 解决了什么问题？</h2><ul><li>高并发连接数请求处理：<code>Nginx</code> 通过异步非阻塞的设计架构，能够高效地处理高并发连接数的请求。</li><li>负载均衡：<code>Nginx</code> 可以将客户端的请求均衡分发到后端的多台服务器上，从而提供负载均衡服务。</li><li>反向代理：<code>Nginx</code> 可以作为反向代理服务器，将客户端的请求转发到后端的服务器上，从而为客户端提供负载均衡、高可用性和安全性等功能。</li><li>HTTP 缓存：<code>Nginx</code> 可以将常用的静态文件缓存在内存中，从而提升网站的访问速度。</li><li><code>HTTPS</code>服务：<code>Nginx</code> 支持 <code>HTTPS</code>协议，可以为网站提供安全的加密传输服务。</li></ul><h2 id="Nginx-如何使用？"><a href="#Nginx-如何使用？" class="headerlink" title="Nginx 如何使用？"></a><code>Nginx</code> 如何使用？</h2><ul><li>在线安装参考（外网博文）：<a href="https://www.runoob.com/linux/`Nginx`-install-setup.html">在线安装 <code>Nginx</code></a></li><li>Docker安装参考（外网博文）：<a href="https://www.runoob.com/docker/docker-install-`Nginx`.html">Docker 安装 <code>Nginx</code></a></li></ul><h2 id="Nginx-相关目录"><a href="#Nginx-相关目录" class="headerlink" title="Nginx 相关目录"></a><code>Nginx</code> 相关目录</h2><ul><li><p><code>Nginx</code> 安装目录</p><ul><li>外网（在线安装）：<code>/usr/local/Nginx</code></li></ul></li><li><p><code>Nginx</code> 启动目录</p><ul><li>外网（在线安装）：<code>/usr/local/Nginx/sbin</code></li></ul></li><li><p><code>Nginx</code> 日志目录</p><ul><li>外网（在线安装）：<code>/usr/local/Nginx/logs</code></li></ul></li></ul><h2 id="Nginx-常用命令"><a href="#Nginx-常用命令" class="headerlink" title="Nginx 常用命令"></a><code>Nginx</code> 常用命令</h2><div class="table-container"><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td><code>Nginx</code> -t</td><td>执行配置文件检测</td></tr><tr><td><code>Nginx</code> -t -q</td><td>执行配置文件检测，且只输出错误信息</td></tr><tr><td><code>Nginx</code> -v</td><td>显示<code>Nginx</code>执行文件的版本信息</td></tr><tr><td><code>Nginx</code> -s stop</td><td>快速停止<code>Nginx</code></td></tr><tr><td><code>Nginx</code> -s reload</td><td>重新加载配置文件</td></tr><tr><td><code>Nginx</code> -c /etc/<code>Nginx</code>/<code>Nginx</code>.conf</td><td>指定 <code>Nginx</code>.conf 文件的位置</td></tr></tbody></table></div><h2 id="Nginx-代理"><a href="#Nginx-代理" class="headerlink" title="Nginx 代理"></a><code>Nginx</code> 代理</h2><h3 id="正向代理"><a href="#正向代理" class="headerlink" title="正向代理"></a>正向代理</h3><blockquote><p>正向代理：当我们站在客户端的角度想访问 Google， 正向代理服务器类似一个跳板机，代理访问外部资源。</p></blockquote><p>例如，下面这个例子，我们想访问 Google，但是存在相应的防火墙，无法访问。</p><ul><li><p>首先，先找一个能访问到 Google 的服务器。</p></li><li><p>然后，我们能够访问这台服务器，作为我们能够访问Google的桥梁。</p></li><li><p>最后，在让代理服务器将我们想要的数据返回给我们。</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305101524071.png" alt="image2023-1-3_19-20-3.png" /></p><h3 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h3><blockquote><p>反向代理（Reverse Proxy）实际运行方式是指以代理服务器来接受 <code>internet</code> 上的连接请求。</p><p>客户端是无感知代理的存在的，反向代理对外都是透明的，访问者者并不知道自己访问的是一个代理，因为客户端不需要任何配置就可以访问。</p><p>例如，我们访问 <code>taobao.com</code> 或者 <code>jd.com</code> 其实 都经过了 很多次代理然后才到的目标服务器。</p></blockquote><p>例子，我们部署的项目</p><ul><li><p>首先，我们通过客户端访问 106.12.78.90 时，会在浏览器得到我们想看到的内容。</p></li><li><p>然后，但项目部署在 10.10.20.200 这台服务器中，并暴露外网 106.12.78.90 暴露出去。</p></li><li><p>最后，在服务器 10.10.20.200 内部可能做了多次代理，才访问到我们的Web服务器（10.10.20.189）中。</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305101532396.png" alt="image2023-1-3_19-27-24.png"  /></p><h3 id="正向代理、方向代理区别"><a href="#正向代理、方向代理区别" class="headerlink" title="正向代理、方向代理区别"></a>正向代理、方向代理区别</h3><blockquote><p>来自知乎：<a href="https://www.zhihu.com/question/24723688">https://www.zhihu.com/question/24723688</a></p></blockquote><ul><li><p>正向代理中，proxy和client同属一个LAN，对server透明；</p></li><li><p>反向代理中，proxy和server同属一个LAN，对client透明。</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305101537454.png" alt="image2023-1-3_19-40-39.png"  /></p><h2 id="Nginx-负载均衡"><a href="#Nginx-负载均衡" class="headerlink" title="Nginx 负载均衡"></a><code>Nginx</code> 负载均衡</h2><blockquote><p>负载均衡，通过反向代理服务器来优化网站的负载，一台服务器不行就搞多台。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305101527469.png" alt="image2023-1-3_19-36-41.png"  /></p><h2 id="Nginx-配置文件"><a href="#Nginx-配置文件" class="headerlink" title="Nginx 配置文件"></a><code>Nginx</code> 配置文件</h2><blockquote><p><code>nginx.conf</code> 配置文件分为如下三个板块：</p><ul><li>全局配置</li><li>I/O 事件配置</li><li><code>http</code> 配置</li></ul></blockquote><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">worker_processes</span> <span class="number">1</span>; <span class="comment"># 只启动一个工作进程</span></span><br><span class="line"> </span><br><span class="line"><span class="section">events</span> &#123;</span><br><span class="line">    <span class="attribute">worker_connections</span> <span class="number">1024</span>; <span class="comment"># 每个工作进程的最大连接为1024</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="attribute">include</span> mime.types; <span class="comment"># 引入MIME类型映射表文件</span></span><br><span class="line">    <span class="attribute">default_type</span> application/octet-stream; <span class="comment"># 全局默认映射类型为application/octet-stream</span></span><br><span class="line"> </span><br><span class="line">    <span class="attribute">sendfile</span> <span class="literal">on</span>; <span class="comment"># 启用零复制机制</span></span><br><span class="line">    <span class="attribute">keepalive_timeout</span> <span class="number">65</span>; <span class="comment"># 保持连接超时时间为65s</span></span><br><span class="line">     </span><br><span class="line">    <span class="section">server</span> &#123; <span class="comment"># 虚拟主机配置</span></span><br><span class="line">        <span class="attribute">listen</span> <span class="number">80</span>; <span class="comment"># 监听80端口的网络连接请求</span></span><br><span class="line">        <span class="attribute">server_name</span> localhost; <span class="comment"># 虚拟主机名为localhost</span></span><br><span class="line"> </span><br><span class="line">        <span class="section">location</span> / &#123; <span class="comment"># 匹配路径</span></span><br><span class="line">            <span class="attribute">root</span> html; <span class="comment"># 文件根目录</span></span><br><span class="line">            <span class="attribute">index</span> index.html index.htm; <span class="comment"># 默认页名称</span></span><br><span class="line">        &#125;</span><br><span class="line">         </span><br><span class="line">        <span class="attribute">error_page</span> <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span> /50x.html; <span class="comment"># 报错编码对应页面</span></span><br><span class="line">        <span class="section">location</span> = /50x.html &#123;</span><br><span class="line">            <span class="attribute">root</span> html;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 引入其他 nginx 配置文件</span></span><br><span class="line">    <span class="attribute">include</span> /etc/nginx/conf.d/<span class="regexp">*.conf</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><blockquote><ul><li><a href="https://www.cnblogs.com/anker/p/6056540.html">正向代理与反向代理</a></li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> Web服务器 </category>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux-Shell-MySQL</title>
      <link href="/2023/05/09/Linux/Linux-Shell-MySQL/"/>
      <url>/2023/05/09/Linux/Linux-Shell-MySQL/</url>
      
        <content type="html"><![CDATA[<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><blockquote><p>现在 <code>MySQL</code> 虽说可以通过 <code>Docker</code> 一键安装，但是还是有很多公司的项目依旧在使用传统的方式进行安装。</p><p>如下方式可以通过脚本一键安装 <code>MySQL 5.7.35</code></p><p>准备环境：</p><ul><li>操作系统：CentOS 7.6 64位</li><li>实例配置：1核 1GB 5Mbps</li><li>MySQL：<code>mysql 5.7.35</code></li></ul><p>准备脚本（网盘自取）：</p><ul><li>链接：<a href="https://pan.baidu.com/s/1vXElBOA_zM1dlwxUT-wi7Q">https://pan.baidu.com/s/1vXElBOA_zM1dlwxUT-wi7Q</a> </li><li>提取码：kh9m </li></ul></blockquote><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><blockquote><ol><li>将脚本上传至 <code>/tmp</code> 目录下</li><li>给脚本添加权限添加权限</li><li>执行脚本</li><li>开放防火墙端口，并刷新配置</li><li>配置 <code>MySQL</code> </li><li>测试链接</li></ol></blockquote><ol><li><p>将脚本上传至 <code>/tmp</code> 目录下</p><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305111335799.png" alt="image-20230511133516733"></p></li><li><p>给脚本添加权限添加权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-24-4-centos tmp]<span class="comment"># chmod +x mysqlinstall_auto.sh </span></span><br></pre></td></tr></table></figure></li><li><p>执行脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-24-4-centos tmp]<span class="comment"># ./mysqlinstall_auto.sh </span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line">MySQL自动部署脚本执行</span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line">发现MySQL-server安装文件 mysql-community-server-5.7.35-1.el7.x86_64.rpm</span><br><span class="line">发现MySQL-client安装文件 mysql-community-client-5.7.35-1.el7.x86_64.rpm</span><br><span class="line">--------------------------------------------------------------------</span><br><span class="line">正在安装MySQL...</span><br><span class="line">正在卸载MariaDB</span><br><span class="line">已卸载MariaDB</span><br><span class="line">正在安装MySQL-server...</span><br><span class="line">warning: mysql-community-server-5.7.35-1.el7.x86_64.rpm: Header V3 DSA/SHA256 Signature, key ID 5072e1f5: NOKEY</span><br><span class="line"><span class="comment">################################# [100%]</span></span><br><span class="line">Updating / installing...</span><br><span class="line"><span class="comment">################################# [100%]</span></span><br><span class="line">server安装完成</span><br><span class="line">正在安装MySQL-client...</span><br><span class="line">warning: mysql-community-client-5.7.35-1.el7.x86_64.rpm: Header V3 DSA/SHA256 Signature, key ID 5072e1f5: NOKEY</span><br><span class="line"><span class="comment">################################# [100%]</span></span><br><span class="line">Updating / installing...</span><br><span class="line"><span class="comment">################################# [100%]</span></span><br><span class="line">client安装完成</span><br><span class="line">--------------------------------------------------------------------</span><br><span class="line">正在启动MySQL...</span><br><span class="line">启动成功</span><br><span class="line">--------------------------------------------------------------------</span><br><span class="line">正在获取mysql初始密码</span><br><span class="line">mysql初始密码: )tLp(LCD&lt;6*S</span><br><span class="line">-------------------------------------------------</span><br><span class="line">部署脚本执行完成</span><br></pre></td></tr></table></figure></li><li><p>开放防火墙端口，并刷新配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-24-4-centos tmp]<span class="comment"># firewall-cmd --zone=public --add-port=3306/tcp --permanent # 开放3306端口</span></span><br><span class="line">success</span><br><span class="line">[root@VM-24-4-centos tmp]<span class="comment"># firewall-cmd --reload # 刷新防火墙配置</span></span><br><span class="line">success</span><br><span class="line">[root@VM-24-4-centos tmp]<span class="comment"># </span></span><br></pre></td></tr></table></figure></li><li><p>配置 <code>MySQL</code> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-24-4-centos tmp]<span class="comment"># mysql -u root -p </span></span><br><span class="line">Enter password: </span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection <span class="built_in">id</span> is 3</span><br><span class="line">Server version: 5.7.35</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2021, Oracle and/or its affiliates.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> or <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">&#x27;\c&#x27;</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 首次操作要求重置密码,必须大小写特殊字符组成, 我设置的密码为 P@ssw0rd</span></span><br><span class="line">mysql&gt; ALTER USER <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class="string">&#x27;P@ssw0rd&#x27;</span>; </span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 授权远程访问 % 表示所有主机都可以访问</span></span><br><span class="line">mysql&gt; grant all privileges on *.* to <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified by <span class="string">&#x27;P@ssw0rd&#x27;</span> with grant option; </span><br><span class="line">Query OK, 0 rows affected, 1 warning (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; flush privileges; <span class="comment"># 刷新权限信息</span></span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="built_in">exit</span></span><br><span class="line">Bye</span><br><span class="line">[root@VM-24-4-centos tmp]<span class="comment"># </span></span><br></pre></td></tr></table></figure></li><li><p>测试链接</p><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305111401493.png" alt="image-20230511140119459"></p></li></ol><h2 id="脚本解析"><a href="#脚本解析" class="headerlink" title="脚本解析"></a>脚本解析</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定安装文件夹</span></span><br><span class="line">package_dir=<span class="string">&quot;/tmp&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;#################################################&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;MySQL自动部署脚本执行&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;#################################################&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> <span class="string">&quot;<span class="variable">$&#123;package_dir&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找MySQL-server和MySQL-client的安装包</span></span><br><span class="line">server=$(find -maxdepth 1 -name <span class="string">&#x27;*mysql*&#x27;</span> | grep server | awk -F <span class="string">&quot;/&quot;</span> <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class="line">client=$(find -maxdepth 1 -name <span class="string">&#x27;*mysql*&#x27;</span> | grep client | awk -F <span class="string">&quot;/&quot;</span> <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查MySQL-server安装包是否存在，不存在则退出</span></span><br><span class="line"><span class="keyword">if</span> [[ -z <span class="string">&quot;<span class="variable">$&#123;server&#125;</span>&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;未找到MySQL-server安装文件&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;发现MySQL-server安装文件 <span class="variable">$&#123;server&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查MySQL-client安装包是否存在，不存在则退出</span></span><br><span class="line"><span class="keyword">if</span> [[ -z <span class="string">&quot;<span class="variable">$&#123;client&#125;</span>&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;未找到MySQL-client安装文件&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;发现MySQL-client安装文件 <span class="variable">$&#123;client&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装MySQL</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">install_mysql</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;--------------------------------------------------------------------&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;正在安装MySQL...&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 检查系统自带数据库MariaDB是否存在，如果存在则卸载</span></span><br><span class="line">    mariadb=$(rpm -qa | grep mariadb)</span><br><span class="line">    <span class="keyword">if</span> [[ -n <span class="string">&quot;<span class="variable">$&#123;mariadb&#125;</span>&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;正在卸载MariaDB&quot;</span></span><br><span class="line">        rpm -e <span class="string">&quot;<span class="variable">$&#123;mariadb&#125;</span>&quot;</span> --nodeps</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;已卸载MariaDB&quot;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;未找到MariaDB软件包&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 检查服务器上是否已安装MySQL，如果已经安装则退出</span></span><br><span class="line">    ismysql=$(rpm -qa | grep mysql)</span><br><span class="line">    <span class="keyword">if</span> [[ -n <span class="string">&quot;<span class="variable">$&#123;ismysql&#125;</span>&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;mysql已存在，请确认&quot;</span></span><br><span class="line">        <span class="built_in">exit</span> 0</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="comment"># 安装MySQL-server和MySQL-client</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;正在安装MySQL-server...&quot;</span></span><br><span class="line">        rpm -ih <span class="string">&quot;<span class="variable">$&#123;server&#125;</span>&quot;</span> --force --nodeps</span><br><span class="line">        <span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;server安装完成&quot;</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;server安装失败，请检查报错信息！&quot;</span></span><br><span class="line">            <span class="built_in">exit</span> 1</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;正在安装MySQL-client...&quot;</span></span><br><span class="line">        rpm -ih <span class="string">&quot;<span class="variable">$&#123;client&#125;</span>&quot;</span> --force --nodeps</span><br><span class="line">        <span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;client安装完成&quot;</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;client安装失败，请检查报错信息！&quot;</span></span><br><span class="line">            <span class="built_in">exit</span> 1</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动MySQL</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">startup</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;--------------------------------------------------------------------&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;正在启动MySQL...&quot;</span></span><br><span class="line">    systemctl restart mysqld</span><br><span class="line">    <span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line">        <span class="keyword">if</span> netstat -ntulp | grep -q 3306</span><br><span class="line">        <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;启动成功&quot;</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;启动失败，请查看日志！&quot;</span></span><br><span class="line">            <span class="built_in">exit</span> 1</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;启动失败，请查看日志！&quot;</span></span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取MySQL的初始密码</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">get_password</span></span>() &#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;--------------------------------------------------------------------&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;正在获取mysql初始密码&quot;</span></span><br><span class="line">init_password=$(grep <span class="string">&#x27;temporary password&#x27;</span> /var/log/mysqld.log | awk <span class="string">&#x27;&#123;print $NF&#125;&#x27;</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;mysql初始密码: <span class="variable">$init_password</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">install_mysql</span><br><span class="line">startup</span><br><span class="line">get_password</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;-------------------------------------------------&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;部署脚本执行完成&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux-Shell</title>
      <link href="/2023/05/09/Linux/Linux-Shell/"/>
      <url>/2023/05/09/Linux/Linux-Shell/</url>
      
        <content type="html"><![CDATA[<h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><blockquote><p>变量是 Shell 脚本编程中最基本的概念之一，用于存储数据。Shell 中的变量不需要事先声明，只需要在变量名前加上 <code>$</code> 符号即可引用该变量。</p></blockquote><ul><li>命令语法</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义变量</span></span><br><span class="line">变量名 = 值</span><br><span class="line"><span class="comment"># 调用变量</span></span><br><span class="line">$变量名</span><br></pre></td></tr></table></figure><ul><li>示例</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name=<span class="string">&quot;John&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;My name is <span class="variable">$name</span>.&quot;</span></span><br></pre></td></tr></table></figure><h3 id="常用判断"><a href="#常用判断" class="headerlink" title="常用判断"></a>常用判断</h3><blockquote><p>在 Shell 脚本编程中，常常需要根据某些条件进行判断。</p></blockquote><h4 id="if-语句"><a href="#if-语句" class="headerlink" title="if 语句"></a>if 语句</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># if 语句判断变量 num 是否大于 10，如果成立则输出 &quot;The number is greater than 10.&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$num</span> -gt 10 ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;The number is greater than 10.&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h4 id="case-语句"><a href="#case-语句" class="headerlink" title="case 语句"></a>case 语句</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="variable">$variable</span> <span class="keyword">in</span></span><br><span class="line">  value1)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Variable is value1.&quot;</span></span><br><span class="line">    ;;</span><br><span class="line">  value2)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Variable is value2.&quot;</span></span><br><span class="line">    ;;</span><br><span class="line">  *)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Variable is neither value1 nor value2.&quot;</span></span><br><span class="line">    ;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure><h3 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h3><h4 id="for-循环语句"><a href="#for-循环语句" class="headerlink" title="for 循环语句"></a>for 循环语句</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..5&#125;; <span class="keyword">do</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h4 id="while-语句"><a href="#while-语句" class="headerlink" title="while 语句"></a>while 语句</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> [ <span class="variable">$num</span> -le 10 ]; <span class="keyword">do</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$num</span></span><br><span class="line">  num=$((num+<span class="number">1</span>))</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="传参"><a href="#传参" class="headerlink" title="传参"></a>传参</h3><blockquote><p>在 Shell 脚本中，可以通过命令行参数来传递参数值。</p></blockquote><ul><li>示例</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;The first parameter is: <span class="variable">$1</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;The second parameter is: <span class="variable">$2</span>&quot;</span></span><br></pre></td></tr></table></figure><p>在上述代码中，使用 <code>$1</code> 和 <code>$2</code> 来引用第一个和第二个参数。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./script.sh foo bar</span><br></pre></td></tr></table></figure><p>输出结果</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">The first parameter is: foo</span><br><span class="line">The second parameter is: bar</span><br></pre></td></tr></table></figure><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><blockquote><p>函数来封装重复使用的代码.</p></blockquote><ul><li>示例</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">greeting</span></span>() &#123;</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Hello, <span class="variable">$1</span>!&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">greeting <span class="string">&quot;John&quot;</span></span><br></pre></td></tr></table></figure><ul><li>调用脚本 <code>./script.sh</code></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># ./script.sh </span></span><br><span class="line">Hello, John!</span><br></pre></td></tr></table></figure><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><blockquote><p>在 Shell 脚本中，可以使用数组来存储一组数据。</p></blockquote><ul><li>示例</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">fruits=(<span class="string">&quot;apple&quot;</span> <span class="string">&quot;banana&quot;</span> <span class="string">&quot;orange&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;fruits[0]&#125;</span>  <span class="comment"># 输出 &quot;apple&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;fruits[1]&#125;</span>  <span class="comment"># 输出 &quot;banana&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;fruits[2]&#125;</span>  <span class="comment"># 输出 &quot;orange&quot;</span></span><br></pre></td></tr></table></figure><ul><li>调用</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># ./script.sh </span></span><br><span class="line">apple</span><br><span class="line">banana</span><br><span class="line">orange</span><br></pre></td></tr></table></figure><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><blockquote><p>以下是一个综合使用变量、常用判断、流程控制、传参、函数、数组的 Shell 脚本示例</p></blockquote><ul><li>示例</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">name=<span class="string">&quot;John&quot;</span></span><br><span class="line">age=20</span><br><span class="line">fruits=(<span class="string">&quot;apple&quot;</span> <span class="string">&quot;banana&quot;</span> <span class="string">&quot;orange&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$age</span> -ge 18 ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$name</span> is an adult.&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$name</span> is not an adult.&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> fruit <span class="keyword">in</span> <span class="variable">$&#123;fruits[@]&#125;</span>; <span class="keyword">do</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;I like <span class="variable">$fruit</span>.&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">greeting</span></span>() &#123;</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Hello, <span class="variable">$1</span>!&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">greeting <span class="variable">$name</span></span><br></pre></td></tr></table></figure><ul><li>调用脚本</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># ./script.sh </span></span><br><span class="line">John is an adult.</span><br><span class="line">I like apple.</span><br><span class="line">I like banana.</span><br><span class="line">I like orange.</span><br><span class="line">Hello, John!</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux-网络监测</title>
      <link href="/2023/05/09/Linux/Linux-%E7%BD%91%E7%BB%9C%E7%9B%91%E6%B5%8B/"/>
      <url>/2023/05/09/Linux/Linux-%E7%BD%91%E7%BB%9C%E7%9B%91%E6%B5%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="curl"><a href="#curl" class="headerlink" title="curl"></a>curl</h2><blockquote><p>curl：该命令可视为不带参数的GET请求。</p></blockquote><ul><li>命令格式</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl 服务地址</span><br></pre></td></tr></table></figure><ul><li>操作示例</li></ul><div class="tabs" id="curl"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#curl-1"><i class="fas fa-check"></i>【正常示例】</button></li><li class="tab"><button type="button" data-href="#curl-2"><i class="fas fa-xmark"></i>【失败示例】</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="curl-1"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># curl http://localhost:80</span></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;<span class="built_in">head</span>&gt;</span><br><span class="line">&lt;title&gt;Welcome to nginx!&lt;/title&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">    body &#123;</span><br><span class="line">        width: 35em;</span><br><span class="line">        margin: 0 auto;</span><br><span class="line">        font-family: Tahoma, Verdana, Arial, sans-serif;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;Welcome to nginx!&lt;/h1&gt;</span><br><span class="line">&lt;p&gt;If you see this page, the nginx web server is successfully installed and</span><br><span class="line">working. Further configuration is required.&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;For online documentation and support please refer to</span><br><span class="line">&lt;a href=<span class="string">&quot;http://nginx.org/&quot;</span>&gt;nginx.org&lt;/a&gt;.&lt;br/&gt;</span><br><span class="line">Commercial support is available at</span><br><span class="line">&lt;a href=<span class="string">&quot;http://nginx.com/&quot;</span>&gt;nginx.com&lt;/a&gt;.&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;&lt;em&gt;Thank you <span class="keyword">for</span> using nginx.&lt;/em&gt;&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># </span></span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="curl-2"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># curl http://localhost:8080</span></span><br><span class="line">curl: (7) Failed connect to localhost:8080; Connection refused</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="netstat"><a href="#netstat" class="headerlink" title="netstat"></a><code>netstat</code></h2><blockquote><p><code>netstat</code> ：监听端口状态</p></blockquote><ul><li>命令格式</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat 参数 | grep 端口号</span><br></pre></td></tr></table></figure><ul><li>参数说明</li></ul><div class="note orange simple"><p><strong>-a</strong>：显示所有socket</p><p><strong>-l</strong>：显示所有处于监听中的端口</p><p><strong>-n</strong>：显示本地的<code>IP</code>地址</p><p><strong>-p</strong>：显示<code>pid</code>及进程名称</p><p><strong>-t</strong>：只显示<code>tcp</code>端口</p><p><strong>-u</strong>：只显示<code>udp</code>端口</p></div><ul><li>操作示例</li></ul><div class="tabs" id="netstat"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#netstat-1">【监听tcp端口】</button></li><li class="tab"><button type="button" data-href="#netstat-2">【查询包含80的端口】</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="netstat-1"><p><code>netstat -ltnp</code>：查询所有处于监听状态的tcp端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># netstat -ltnp</span></span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    </span><br><span class="line">tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      3781/nginx: master  </span><br><span class="line">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      1457/sshd           </span><br><span class="line">tcp        0      0 0.0.0.0:8888            0.0.0.0:*               LISTEN      1455/python         </span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="netstat-2"><p><code>netstat -anp | grep 80</code>：查询所有处于监听状态的tcp端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># netstat -anp | grep 80</span></span><br><span class="line">tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      3781/nginx: master  </span><br><span class="line">tcp        0      0 10.0.0.9:42842          169.254.0.55:8080       TIME_WAIT   -                   </span><br><span class="line">tcp        0      0 10.0.0.9:80             170.64.161.204:38658    TIME_WAIT   -                   </span><br><span class="line">tcp        0      0 10.0.0.9:35380          169.254.0.55:5574       ESTABLISHED 5133/YDService      </span><br><span class="line">tcp        0      0 10.0.0.9:80             170.64.161.204:38694    TIME_WAIT   -                   </span><br><span class="line">tcp        0      0 10.0.0.9:80             170.64.161.204:38660    TIME_WAIT   -                   </span><br><span class="line">udp6       0      0 fe80::5054:ff:fead::123 :::*                                657/ntpd            </span><br><span class="line">unix  2      [ ACC ]     STREAM     LISTENING     8005     1/systemd            /run/systemd/journal/stdout</span><br><span class="line">unix  5      [ ]         DGRAM                    8008     1/systemd            /run/systemd/journal/socket</span><br><span class="line">unix  12     [ ]         DGRAM                    8010     1/systemd            /dev/log</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="telnet"><a href="#telnet" class="headerlink" title="telnet"></a>telnet</h2><blockquote><p>telnet：用来探测指定 <code>ip</code> 是否开放指定端口。</p><p>在 Linux 环境下 <code>Telnet</code> 是需要安装的。 安装命令：<code>yum install telnet</code></p></blockquote><ul><li>命令格式</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet IP 端口</span><br></pre></td></tr></table></figure><ul><li>操作示例</li></ul><div class="tabs" id="curl"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#curl-1"><i class="fas fa-check"></i>【正常示例】</button></li><li class="tab"><button type="button" data-href="#curl-2"><i class="fas fa-xmark"></i>【失败示例】</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="curl-1"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># telnet 127.0.0.1 80</span></span><br><span class="line">Trying 127.0.0.1...</span><br><span class="line">Connected to 127.0.0.1.</span><br><span class="line">Escape character is <span class="string">&#x27;^]&#x27;</span>.</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="curl-2"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># telnet 127.0.0.1 8080</span></span><br><span class="line">Trying 127.0.0.1...</span><br><span class="line">telnet: connect to address 127.0.0.1: Connection refused</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux-基础命令</title>
      <link href="/2023/05/05/Linux/Linux-%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/"/>
      <url>/2023/05/05/Linux/Linux-%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="Linux-目录操作"><a href="#Linux-目录操作" class="headerlink" title="Linux - 目录操作"></a>Linux - 目录操作</h2><h3 id="cd"><a href="#cd" class="headerlink" title="cd"></a>cd</h3><blockquote><p>cd：进入对应目录，类似 windows 打开文件夹</p></blockquote><ul><li>命令语法</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> 【<span class="built_in">dir</span>】</span><br></pre></td></tr></table></figure><ul><li>操作示例</li></ul><div class="tabs" id="cd"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#cd-1">【cd ~】</button></li><li class="tab"><button type="button" data-href="#cd-2">【cd ..】</button></li><li class="tab"><button type="button" data-href="#cd-3">【cd -】</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="cd-1"><p><strong>cd ~ ：回到当前登录账号的home目录</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos ~]<span class="comment"># cd /usr/local/</span></span><br><span class="line">[root@VM-0-9-centos <span class="built_in">local</span>]<span class="comment"># cd ~</span></span><br><span class="line">[root@VM-0-9-centos ~]<span class="comment"># pwd</span></span><br><span class="line">/root</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="cd-2"><p><strong>cd .. || cd ./.. ：进到当前目录的父级目录</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos /]<span class="comment"># cd /usr/local/</span></span><br><span class="line">[root@VM-0-9-centos <span class="built_in">local</span>]<span class="comment"># cd ./..</span></span><br><span class="line">[root@VM-0-9-centos usr]<span class="comment"># pwd</span></span><br><span class="line">/usr</span><br><span class="line">[root@VM-0-9-centos usr]<span class="comment"># cd /usr/local/</span></span><br><span class="line">[root@VM-0-9-centos <span class="built_in">local</span>]<span class="comment"># cd ..</span></span><br><span class="line">[root@VM-0-9-centos usr]<span class="comment"># pwd</span></span><br><span class="line">/usr</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="cd-3"><p><strong>cd - ：跳转到之前所在目录</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos home]<span class="comment"># cd /usr/local/</span></span><br><span class="line">[root@VM-0-9-centos <span class="built_in">local</span>]<span class="comment"># pwd</span></span><br><span class="line">/usr/local</span><br><span class="line">[root@VM-0-9-centos <span class="built_in">local</span>]<span class="comment"># cd -</span></span><br><span class="line">/home</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="cp"><a href="#cp" class="headerlink" title="cp"></a>cp</h3><blockquote><p>cp：文件拷贝</p></blockquote><ul><li>命令语法</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> 参数 源文件 目标位置</span><br></pre></td></tr></table></figure><ul><li>参数说明</li></ul><div class="note orange simple"><p><strong>-r/R</strong>：递归，使用于目录复制</p><p><strong>-n</strong>：不覆盖，不加该参数默认覆盖</p></div><ul><li>操作示例</li></ul><div class="tabs" id="cp"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#cp-1">【cp 源文件 目标位置】</button></li><li class="tab"><button type="button" data-href="#cp-2">【cp -r 源文件 目标位置】</button></li><li class="tab"><button type="button" data-href="#cp-3">【cp -n 源文件 目标位置】</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="cp-1"><p>【cp 源文件 目标位置】：覆盖复制当前目录下bbb文件至/tmp目录下，命名为aaa文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos <span class="built_in">local</span>]<span class="comment"># touch bbb.md</span></span><br><span class="line">[root@VM-0-9-centos <span class="built_in">local</span>]<span class="comment"># ll</span></span><br><span class="line">...</span><br><span class="line">-rw-r--r--   1 root root    0 May  9 12:01 bbb.md</span><br><span class="line">...</span><br><span class="line">[root@VM-0-9-centos <span class="built_in">local</span>]<span class="comment"># cp bbb.md /tmp/aaa</span></span><br><span class="line">[root@VM-0-9-centos <span class="built_in">local</span>]<span class="comment"># cd /tmp/</span></span><br><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># ll</span></span><br><span class="line">...</span><br><span class="line">-rw-r--r-- 1 root root    0 May  9 12:01 aaa</span><br><span class="line">...</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="cp-2"><p>【cp -r 源文件 目标位置】：覆盖复制ccc目录至/tmp目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos <span class="built_in">local</span>]<span class="comment"># pwd</span></span><br><span class="line">/usr/local</span><br><span class="line">[root@VM-0-9-centos <span class="built_in">local</span>]<span class="comment"># mkdir ccc</span></span><br><span class="line">[root@VM-0-9-centos <span class="built_in">local</span>]<span class="comment"># cp -r ccc/ /tmp/</span></span><br><span class="line">[root@VM-0-9-centos <span class="built_in">local</span>]<span class="comment"># cd /tmp/</span></span><br><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># ll</span></span><br><span class="line">drwxr-xr-x 2 root root 4096 May  9 13:32 ccc</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="cp-3"><p>【cp -n 源文件 目标位置】：复制bbb文件至/tmp目录下，并跳过重名文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos <span class="built_in">local</span>]<span class="comment"># touch bbb.md</span></span><br><span class="line">[root@VM-0-9-centos <span class="built_in">local</span>]<span class="comment"># cp -n bbb.md /tmp/</span></span><br><span class="line">[root@VM-0-9-centos <span class="built_in">local</span>]<span class="comment"># cd /tmp/</span></span><br><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># ll</span></span><br><span class="line">-rw-r--r-- 1 root root    0 May  9 13:36 bbb.md</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="find"><a href="#find" class="headerlink" title="find"></a>find</h3><blockquote><p>find：查找文件</p></blockquote><ul><li>命令语法</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find 查找目录 参数</span><br></pre></td></tr></table></figure><ul><li>参数说明</li></ul><div class="note orange simple"><p><strong>-name</strong>：名称匹配</p><p><strong>-mindepth</strong>：目录深度最小限制</p><p><strong>-maxdepth</strong>：目录深度最大限制</p><p><strong>-type</strong>：文件类型匹配（<strong>f</strong> 普通文件 <strong>l</strong> 符号连接 <strong>d</strong> 目录）</p></div><ul><li>操作示例</li></ul><div class="tabs" id="find"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#find-1">【find 路径 -mindepth -maxdepth】</button></li><li class="tab"><button type="button" data-href="#find-2">【find 路径 -type f -name filename】</button></li><li class="tab"><button type="button" data-href="#find-3">【find 路径 -name *.jpg】</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="find-1"><p>find 路径 -mindepth -maxdepth：查找目录下目录深度2层与3层的文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos home]<span class="comment"># find /home -mindepth 2 -maxdepth 3</span></span><br><span class="line">/home/www/.bashrc</span><br><span class="line">/home/www/.bash_logout</span><br><span class="line">/home/www/.bash_profile</span><br><span class="line">...</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="find-2"><p>find 路径 -type f -name filename：查找/home目录下名称为aaa的普通文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos home]<span class="comment"># find /home -type f -name aaa</span></span><br><span class="line">[root@VM-0-9-centos home]<span class="comment"># touch aaa</span></span><br><span class="line">[root@VM-0-9-centos home]<span class="comment"># find /home -type f -name aaa</span></span><br><span class="line">/home/aaa</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="find-3"><p>find 路径 -name *.jpg：查找/home目录下后缀为.jpg的文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos home]<span class="comment"># find /home -name *.jpg</span></span><br><span class="line">[root@VM-0-9-centos home]<span class="comment"># touch aa.jpg</span></span><br><span class="line">[root@VM-0-9-centos home]<span class="comment"># find /home -name *.jpg</span></span><br><span class="line">/home/aa.jpg</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="ls"><a href="#ls" class="headerlink" title="ls"></a>ls</h3><blockquote><p>ls：显示当前目录下的信息</p></blockquote><ul><li>命令语法</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span></span><br></pre></td></tr></table></figure><ul><li>参数说明</li></ul><div class="note orange simple"><p><strong>-a</strong> ：显示所有文件，包括隐藏文件</p><p><strong>-l</strong> ：显示文件属性，文件大小以字节显示</p><p><strong>-h</strong> ：按K\M\G的形式显示文件大小信息</p><p><strong>-S</strong> ：按文件大小排序</p></div><ul><li>操作示例</li></ul><div class="tabs" id="ls"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#ls-1">【ls】</button></li><li class="tab"><button type="button" data-href="#ls-2">【ls -a】</button></li><li class="tab"><button type="button" data-href="#ls-3">【ls -l】</button></li><li class="tab"><button type="button" data-href="#ls-4">【ls -al】</button></li><li class="tab"><button type="button" data-href="#ls-5">【ls -lh】</button></li><li class="tab"><button type="button" data-href="#ls-6">【ls -lhS】</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="ls-1"><p>ls：显示当前目录下的信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos home]<span class="comment"># ls # 显示当前目录下的信息</span></span><br><span class="line">aaa  aa.jpg  lighthouse  www</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="ls-2"><p>ls -a：显示所有文件，包括隐藏文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos home]<span class="comment"># ls -a # 显示所有文件，包括隐藏文件</span></span><br><span class="line">.  ..  aaa  aa.jpg  lighthouse  www</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="ls-3"><p>ls -l：显示文件属性，文件大小以字节显示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos home]<span class="comment"># ls -l # 显示文件属性，文件大小以字节显示</span></span><br><span class="line">total 8</span><br><span class="line">-rw-r--r-- 1 root       root          0 May  9 13:44 aaa</span><br><span class="line">-rw-r--r-- 1 root       root          0 May  9 13:46 aa.jpg</span><br><span class="line">drwx------ 5 lighthouse lighthouse 4096 Oct 12  2022 lighthouse</span><br><span class="line">drwx------ 2 www        www        4096 Aug 11  2022 www</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="ls-4"><p>ls -al：显示所有文件，包括隐藏文件，文件属性，文件大小</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos home]<span class="comment"># ls -al # 显示所有文件，包括隐藏文件，文件属性，文件大小</span></span><br><span class="line">total 16</span><br><span class="line">drwxr-xr-x.  4 root       root       4096 May  9 13:46 .</span><br><span class="line">dr-xr-xr-x. 21 root       root       4096 May  9 13:50 ..</span><br><span class="line">-rw-r--r--   1 root       root          0 May  9 13:44 aaa</span><br><span class="line">-rw-r--r--   1 root       root          0 May  9 13:46 aa.jpg</span><br><span class="line">drwx------   5 lighthouse lighthouse 4096 Oct 12  2022 lighthouse</span><br><span class="line">drwx------   2 www        www        4096 Aug 11  2022 www</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="ls-5"><p>ls -lh（按K\M\G的形式显示文件大小信息）：显示文件属性，文件大小以K显示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos home]<span class="comment"># ls -lh # 显示文件属性，文件大小以K显示</span></span><br><span class="line">total 8.0K</span><br><span class="line">-rw-r--r-- 1 root       root          0 May  9 13:44 aaa</span><br><span class="line">-rw-r--r-- 1 root       root          0 May  9 13:46 aa.jpg</span><br><span class="line">drwx------ 5 lighthouse lighthouse 4.0K Oct 12  2022 lighthouse</span><br><span class="line">drwx------ 2 www        www        4.0K Aug 11  2022 www</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="ls-6"><p>ls -lhS：显示文件属性，文件大小以K显示，按文件大小排序</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos home]<span class="comment"># ls -lhS  # 显示文件属性，文件大小以K显示，按文件大小排序</span></span><br><span class="line">total 8.0K</span><br><span class="line">drwx------ 5 lighthouse lighthouse 4.0K Oct 12  2022 lighthouse</span><br><span class="line">drwx------ 2 www        www        4.0K Aug 11  2022 www</span><br><span class="line">-rw-r--r-- 1 root       root          0 May  9 13:44 aaa</span><br><span class="line">-rw-r--r-- 1 root       root          0 May  9 13:46 aa.jpg</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="mkdir"><a href="#mkdir" class="headerlink" title="mkdir"></a>mkdir</h3><blockquote><p>创建文件目录</p></blockquote><ul><li>命令语法</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> 参数 文件名</span><br></pre></td></tr></table></figure><ul><li>参数说明</li></ul><div class="note orange simple"><p><strong>-p</strong> ：嵌套关系目录创建;</p></div><ul><li>操作示例</li></ul><div class="tabs" id="mkdir"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#mkdir-1">【mkdir dir】</button></li><li class="tab"><button type="button" data-href="#mkdir-2">【mkdir -p dir】</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="mkdir-1"><p><strong>mkdir dir</strong>：创建空白目录；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos home]<span class="comment"># ls</span></span><br><span class="line">lighthouse  www</span><br><span class="line">[root@VM-0-9-centos home]<span class="comment"># mkdir v1</span></span><br><span class="line">[root@VM-0-9-centos home]<span class="comment"># ls</span></span><br><span class="line">lighthouse  v1  www</span><br><span class="line">[root@VM-0-9-centos home]<span class="comment"># mkdir v2 v3 v4</span></span><br><span class="line">[root@VM-0-9-centos home]<span class="comment"># ls</span></span><br><span class="line">lighthouse  v1  v2  v3  v4  www</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="mkdir-2"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos home]<span class="comment"># rm -rf v1 v2 v3 v4</span></span><br><span class="line">[root@VM-0-9-centos home]<span class="comment"># mkdir -p v1/v2/v3</span></span><br><span class="line">[root@VM-0-9-centos home]<span class="comment"># ls</span></span><br><span class="line">lighthouse  v1  www</span><br><span class="line">[root@VM-0-9-centos home]<span class="comment"># find v1 -mindepth 2 -maxdepth 3</span></span><br><span class="line">v1/v2/v3</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="mv"><a href="#mv" class="headerlink" title="mv"></a>mv</h3><blockquote><p>mv：移动文件，可以操作目录和文件。</p></blockquote><ul><li>命令格式</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> 源路径 目标路径</span><br></pre></td></tr></table></figure><ul><li>操作示例</li></ul><div class="tabs" id="mv"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#mv-1">【mv file 目标路径】</button></li><li class="tab"><button type="button" data-href="#mv-2">【mv dir 目标路径】</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="mv-1"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos home]<span class="comment"># touch ccc</span></span><br><span class="line">[root@VM-0-9-centos home]<span class="comment"># mv ccc /tmp/aaa</span></span><br><span class="line">[root@VM-0-9-centos home]<span class="comment"># cd /tmp/</span></span><br><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># ls</span></span><br><span class="line">aaa</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="mv-2"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos <span class="built_in">local</span>]<span class="comment"># mkdir bbb</span></span><br><span class="line">[root@VM-0-9-centos <span class="built_in">local</span>]<span class="comment"># mv bbb/ /tmp/</span></span><br><span class="line">[root@VM-0-9-centos <span class="built_in">local</span>]<span class="comment"># cd /tmp/</span></span><br><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># ls</span></span><br><span class="line">bbb</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="pwd"><a href="#pwd" class="headerlink" title="pwd"></a>pwd</h3><blockquote><p>显示当前工作目录</p></blockquote><ul><li>命令格式</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">pwd</span></span><br></pre></td></tr></table></figure><ul><li>操作示例</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># pwd</span></span><br><span class="line">/tmp</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="rm"><a href="#rm" class="headerlink" title="rm"></a>rm</h3><blockquote><p>rm：删除目录或文件</p></blockquote><ul><li>命令格式</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> 参数 路径</span><br></pre></td></tr></table></figure><ul><li>参数说明</li></ul><div class="note orange simple"><p><strong>-r</strong>：递归，用于目录</p><p><strong>-f</strong>：强制删除，不显示任何信息（会使前边的参数 i 失效）</p><p><strong>-i</strong>：进行任何操作前需确认，只能操作文件（会使前边的参数 f 失效）</p></div><ul><li>操作示例</li></ul><div class="tabs" id="rm"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#rm-1">【rm -ir 路径】</button></li><li class="tab"><button type="button" data-href="#rm-2">【rm -rf 路径】</button></li><li class="tab"><button type="button" data-href="#rm-3">【rm -i 文件】</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="rm-1"><p>rm -ir 路径：删除目录下所有文件，并在每一步执行操作前进行确认</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># rm -ir bbb/</span></span><br><span class="line"><span class="built_in">rm</span>: remove directory ‘bbb/’? y</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="rm-2"><p>rm -rf 路径：强制删除目录下所有文件，中间不会产生任何提示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># rm -rf ccc/</span></span><br><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># </span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="rm-3"><p>rm -i 路径：删除test1文件，在删除前进行确认</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># touch ccc.md</span></span><br><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># rm -i ccc.md </span></span><br><span class="line"><span class="built_in">rm</span>: remove regular empty file ‘ccc.md’? y</span><br><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># </span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="Linux-文件编辑"><a href="#Linux-文件编辑" class="headerlink" title="Linux - 文件编辑"></a>Linux - 文件编辑</h2><blockquote><p>vi：自带文本编辑器</p></blockquote><ul><li>命令格式</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi filename</span><br></pre></td></tr></table></figure><ul><li>操作示例</li></ul><div class="tabs" id="linux---vi"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#linux---vi-1">【插入模式（insert mode）】</button></li><li class="tab"><button type="button" data-href="#linux---vi-2">【命令模式（command mode）】</button></li><li class="tab"><button type="button" data-href="#linux---vi-3">【底行模式（last line mode）】</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="linux---vi-1"><ul><li><p>第一步：进入文件编辑器后，按 <strong>i</strong> 进入插入模式</p></li><li><p>第二步：插入模式下，文本编辑按常规模式进行操作</p></li><li><p>第三步：按 <strong>ESC</strong> 退出插入模式</p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="linux---vi-2"><ul><li><p>移动光标</p><ul><li><p><strong>ctrl + b</strong>  屏幕向后移动一页</p></li><li><p><strong>ctrl + f</strong>  屏幕向前移动一页</p></li><li><p><strong>ctrl + u</strong>  屏幕向后移动半页</p></li><li><p><strong>ctrl + d</strong>  屏幕向前移动半页</p></li><li><p><strong>$</strong>  光标移动到行尾</p></li><li><p><strong>^</strong>  光标移动到行首</p></li></ul></li><li><p>删除操作</p><ul><li><strong>x</strong>  删除光标后一位字符</li><li><strong>#x</strong>  删除光标后#位字符</li><li><strong>dd</strong>  删除光标所在行</li></ul></li><li><p>撤回操作</p><ul><li><strong>u</strong>  撤回上一步操作</li></ul></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="linux---vi-3"><ul><li><p>命令模式下，按 <strong>：</strong> 进入底行模式</p></li><li><p>字符查找</p><ul><li><strong>/keywords</strong>  命令模式下按 <strong>/</strong> ，接着输入查找关键字后回车进行查找，接着按 <strong>n</strong> 转到下一个查找结果</li></ul></li><li><p>保存文件</p><ul><li><p><strong>:w filename</strong>  以 <strong>filename</strong> 为文件名另存为</p></li><li><p><strong>:wq</strong>  保存并退出</p></li></ul></li><li><p>退出编辑</p><ul><li><strong>:q!</strong>  不存盘强制退出</li></ul></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="Linux-文件查看"><a href="#Linux-文件查看" class="headerlink" title="Linux - 文件查看"></a>Linux - 文件查看</h2><h3 id="cat"><a href="#cat" class="headerlink" title="cat"></a>cat</h3><ul><li>命令格式</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> filename <span class="comment"># 查看文件</span></span><br><span class="line"><span class="built_in">cat</span> -n filename <span class="comment"># 查看文件内容并附带行号</span></span><br></pre></td></tr></table></figure><ul><li>操作示例</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># touch Readme.md</span></span><br><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># vi Readme.md </span></span><br><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># cat Readme.md </span></span><br><span class="line">this is Readme</span><br><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># cat -n Readme.md </span></span><br><span class="line">     1this is Readme</span><br></pre></td></tr></table></figure><h3 id="less"><a href="#less" class="headerlink" title="less"></a>less</h3><ul><li>命令格式</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">less filename</span><br></pre></td></tr></table></figure><ul><li>参数说明</li></ul><div class="note orange simple"><p><strong>Space</strong> 或 <strong>PageUp</strong>：向前一屏</p><p><strong>B</strong> 或 <strong>PageDown</strong>：向后一屏</p><p><strong>Enter</strong> ：向后一行</p><p><strong>K</strong> ：向前一行</p></div><h3 id="tail"><a href="#tail" class="headerlink" title="tail"></a>tail</h3><ul><li>命令格式</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">tail</span> 参数 filename</span><br></pre></td></tr></table></figure><ul><li>参数说明</li></ul><div class="note orange simple"><p><strong>-n</strong> ：指定显示文件的最后多少行。</p><p><strong>-f</strong> ：动态显示，默认显示文件末尾10行，并且一直保持显示状态。</p></div>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/05/05/Hello%20World/"/>
      <url>/2023/05/05/Hello%20World/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
