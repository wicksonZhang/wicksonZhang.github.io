<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>01-JVM-基础概念</title>
      <link href="/posts/87251719.html"/>
      <url>/posts/87251719.html</url>
      
        <content type="html"><![CDATA[<h2 id="内容大纲"><span class="post-title-index">1. </span><a href="#内容大纲" class="headerlink" title="内容大纲"></a>内容大纲</h2><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202402272223859.png" alt="JVM 基础概念"></p><h2 id="JVM-解决了什么问题"><span class="post-title-index">2. </span><a href="#JVM-解决了什么问题" class="headerlink" title="JVM 解决了什么问题"></a>JVM 解决了什么问题</h2><p>JVM（Java Virtual Machine）解决的核心问题之一就是跨平台性，只需要写一份代码即可运行在多个操作系统上。</p><p>如下图所示，首先我们将编写好的 <code>.java</code> 文件通过 <code>javac</code> 编译为 <code>.class</code> 字节码文件，然后通过 <code>JVM</code> 解释为操作系统能够识别的机器码语言。</p><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202402272054209.png" alt="image-20240227205401151"></p><h2 id="JVM-是什么"><span class="post-title-index">3. </span><a href="#JVM-是什么" class="headerlink" title="JVM 是什么"></a>JVM 是什么</h2><p><code>JVM（Java Virtual Machine）</code>：全称为 <code>Java虚拟机</code>，JVM主要的作用就是将 <code>Java</code> 程序编译成的 <code>字节码文件</code> 解释或编译为操作系统能够识别的 <code>机器码指令</code>。</p><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202402272109284.png" alt="image-20240227210933236"></p><h2 id="JVM-核心功能"><span class="post-title-index">4. </span><a href="#JVM-核心功能" class="headerlink" title="JVM 核心功能"></a>JVM 核心功能</h2><ol><li><p><strong>字节码执行</strong>：JVM负责解释或编译Java程序编译生成的字节码，并将其转换为本地机器码执行。</p></li><li><p><strong>内存管理</strong>：JVM负责管理Java程序的内存分配和释放。</p><ul><li><strong>C内存管理示例</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 使用malloc动态分配内存</span></span><br><span class="line">    <span class="type">int</span> *ptr = (<span class="type">int</span> *)malloc(sizeof(<span class="type">int</span>));</span><br><span class="line">    <span class="keyword">if</span> (ptr == NULL) &#123;</span><br><span class="line">        printf(<span class="string">&quot;内存分配失败\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    *ptr = <span class="number">5</span>;</span><br><span class="line">    printf(<span class="string">&quot;指针所指向的值为: %d\n&quot;</span>, *ptr);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 释放动态分配的内存</span></span><br><span class="line">    free(ptr);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>Java内存管理示例：</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MemoryManagementExample</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 使用Java的自动内存管理机制</span></span><br><span class="line">        <span class="type">Integer</span> <span class="variable">number</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Integer</span>(<span class="number">5</span>);</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">&quot;对象的值为: &quot;</span> + number);</span><br><span class="line">        <span class="comment">// Java的垃圾回收器会自动回收不再使用的对象所占用的内存</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>即时编译</strong>：JVM中包含<strong>即时编译器（Just-In-Time Compiler，JIT Compiler）</strong>，它能够将字节码动态编译成本地机器码，以提高程序的执行效率。</p><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202402272128171.png" alt="image-20240227212826118"></p></li></ol><h2 id="JVM-的组成"><span class="post-title-index">5. </span><a href="#JVM-的组成" class="headerlink" title="JVM 的组成"></a>JVM 的组成</h2><p>Java虚拟机（JVM）是一个复杂的系统，由多个组件组成，主要包括以下几个部分：</p><ol><li><strong>类加载器子系统（Class Loader Subsystem）</strong><ul><li>核心功能：负责加载Class文件，将其转换为JVM内部表示的对象，并加载到内存中。</li><li>组成部分：<strong>启动类加载器（Bootstrap Class Loader）</strong>、<strong>扩展类加载器（Extension Class Loader）</strong>和 <strong>应用程序类加载器（Application Class Loader）</strong></li></ul></li><li><strong>运行时数据区（Runtime Data Area）</strong><ul><li>核心功能：JVM内存管理的主要区域。</li><li>组成部分：<strong>方法区（Method Area）</strong>、<strong>堆（Heap）</strong>、<strong>虚拟机栈（Java Virtual Machine Stacks）</strong>、<strong>本地方法栈（Native Method Stack）</strong></li><li><strong>方法区（Method Area）</strong>：存储类的结构信息、静态变量、常量、方法字节码等数据。</li><li><strong>堆（Heap）</strong>：存储所有对象实例以及数组对象。</li><li><strong>虚拟机栈（Java Virtual Machine Stacks）</strong>：存储线程的方法调用栈、局部变量等信息。</li><li><strong>本地方法栈（Native Method Stack）</strong>：与虚拟机栈类似，但是用于执行本地方法。</li></ul></li><li><strong>执行引擎（Execution Engine）</strong><ul><li>核心功能：负责执行JVM加载的字节码。</li><li>组成部分：<strong>解释器（Interpreter）</strong>和 <strong>即时编译器（Just-In-Time Compiler，JIT Compiler）</strong>。</li><li><strong>解释器（Interpreter）</strong>：逐条解释字节码并执行。</li><li><strong>即时编译器（Just-In-Time Compiler，JIT Compiler）</strong>：将字节码编译成本地机器码以提高执行效率。</li></ul></li><li><strong>本地方法接口（Native Interface）</strong><ul><li>核心功能：允许Java应用程序调用本地方法（Native Method），即使用C或C++等编程语言编写的方法。</li></ul></li></ol><p>具体 JVM 组成如下图所示</p><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202402272144167.png" alt="image-20240227214459099"></p><h2 id="JDK、JRE、JVM-有什么区别"><span class="post-title-index">6. </span><a href="#JDK、JRE、JVM-有什么区别" class="headerlink" title="JDK、JRE、JVM 有什么区别"></a>JDK、JRE、JVM 有什么区别</h2><p><strong>JDK（Java Development Kit）</strong></p><ul><li><code>JDK</code> 包含了完整的 <code>Java</code> 运行环境（<code>JRE</code>）</li><li><code>JDK</code> 是 <code>Java</code> 开发工具包，提供了用于开发 <code>Java</code> 应用程序的工具和资源，包括编译器（<code>javac</code>）、运行时库（<code>Java</code>标准库）、调试器（<code>jdb</code>）、文档生成工具（<code>javadoc</code>）等。</li></ul><p><strong>JRE（Java Runtime Environment）</strong></p><ul><li><code>JRE</code> 是 <code>Java</code> 运行时环境，包含了 <code>Java</code> 程序运行所需的核心类库、<code>Java</code> 虚拟机（<code>JVM</code>）和其他运行时所需的支持文件。</li></ul><p><strong>JVM（Java Virtual Machine）</strong></p><ul><li><code>JVM</code> 是 <code>Java</code> 虚拟机，是 <code>Java</code> 程序的运行环境，负责解释和执行 <code>Java</code> 程序编译生成的字节码。</li><li><code>JVM</code> 提供了内存管理、线程管理、安全检查、即时编译等功能，使得 <code>Java</code> 程序能够在不同的操作系统和硬件平台上运行，实现了 <code>Java</code> 的跨平台性。</li></ul><p><code>JDK</code> 包含了 <code>JRE</code> 以及用于开发 <code>Java</code> 应用程序的工具，而JRE包含了 <code>JVM</code> 以及运行 <code>Java</code> 程序所需的核心类库。</p><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202402272151189.png" alt="jdl, jre, jvm" style="zoom:70%;float:left"></p><h2 id="参考博文"><span class="post-title-index">7. </span><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><ul><li><a href="https://www.bilibili.com/video/BV1r94y1b7eS/?spm_id_from=333.337.search-card.all.click">黑马程序员 JVM 虚拟机入门到实战</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> JVM </category>
          
          <category> 基础概念 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JVM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>01-动态数组</title>
      <link href="/posts/97be0b4e.html"/>
      <url>/posts/97be0b4e.html</url>
      
        <content type="html"><![CDATA[<h2 id="内容大纲"><span class="post-title-index">1. </span><a href="#内容大纲" class="headerlink" title="内容大纲"></a>内容大纲</h2><blockquote><p>本章节的代码：<a href="https://github.com/wicksonZhang/data-structure/tree/main/1-ArrayList">https://github.com/wicksonZhang/data-structure/tree/main/1-ArrayList</a></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202311092109212.png" alt="动态数组" style="zoom:100%;float:left"></p><h2 id="基础知识"><span class="post-title-index">2. </span><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><h3 id="什么是动态数组？"><span class="post-title-index">2.1. </span><a href="#什么是动态数组？" class="headerlink" title="什么是动态数组？"></a>什么是动态数组？</h3><p>动态数组是一种数据结构，在程序运行过程中动态添加或删除数组的容量，使数组的容量可以动态的发生改变。</p><h3 id="动态数组优缺点"><span class="post-title-index">2.2. </span><a href="#动态数组优缺点" class="headerlink" title="动态数组优缺点"></a>动态数组优缺点</h3><p><strong>优点</strong></p><ol><li><strong>容量动态改变</strong>：动态数组可以在需要时自动增加或减少容量，以适应数据的大小。</li><li><strong>随机访问速度</strong>：由于数据在内存中是连续存储的，因此可以以常量时间访问任何元素，使其具有快速的随机访问速度。</li><li><strong>连续内存</strong>：动态数组的元素在内存中是连续存储的，这可以提高缓存的命中率，提高性能。</li></ol><p><strong>缺点</strong></p><ol><li>不适合频繁的插入和删除</li></ol><h3 id="应用场景"><span class="post-title-index">2.3. </span><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h3><p>动态数组在许多应用场景中都有广泛的应用，包括但不限于：</p><ol><li>购物车：用于存储购物车中的商品列表，容量可以根据添加商品的数量动态调整。</li><li>待办清单：用于存储待办任务列表，随着添加或完成任务的变化，清单的大小可以动态变化。</li></ol><h2 id="接口设计"><span class="post-title-index">3. </span><a href="#接口设计" class="headerlink" title="接口设计"></a>接口设计</h2><blockquote><p>我们主要是模仿 <code>java</code> 中的 <code>java.util.ArrayList</code> 集合进行设计</p></blockquote><ul><li><code>List&lt;E&gt;.java</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">List</span>&lt;E&gt; &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> <span class="title function_">size</span><span class="params">()</span>;<span class="comment">// 元素数量</span></span><br><span class="line">    </span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">isEmpty</span><span class="params">()</span>; <span class="comment">// 数组是否为空</span></span><br><span class="line"></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">contains</span><span class="params">(E element)</span>; <span class="comment">// 是否包含某个元素</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">add</span><span class="params">(E element)</span>; <span class="comment">// 添加元素</span></span><br><span class="line"></span><br><span class="line">    E <span class="title function_">get</span><span class="params">(<span class="type">int</span> index)</span>; <span class="comment">// 获取指定位置元素</span></span><br><span class="line"></span><br><span class="line">    E <span class="title function_">set</span><span class="params">(<span class="type">int</span> index, E element)</span>; <span class="comment">// 设置指定位置元素</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> index, E element)</span>; <span class="comment">// 将元素添加到指定位置</span></span><br><span class="line"></span><br><span class="line">    E <span class="title function_">remove</span><span class="params">(<span class="type">int</span> index)</span>; <span class="comment">// 删除指定位置元素</span></span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="title function_">indexOf</span><span class="params">(E element)</span>; <span class="comment">// 获取元素索引</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">clear</span><span class="params">()</span>; <span class="comment">// 清除所有元素</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>ArrayList.java</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 动态数组</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayList</span>&lt;E&gt; <span class="keyword">implements</span> <span class="title class_">List</span>&lt;E&gt; &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="代码实现"><span class="post-title-index">4. </span><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><h3 id="默认初始容量"><span class="post-title-index">4.1. </span><a href="#默认初始容量" class="headerlink" title="默认初始容量"></a>默认初始容量</h3><blockquote><p>主要包括成员变量、构造器</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 动态数组</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayList</span>&lt;E&gt; <span class="keyword">implements</span> <span class="title class_">List</span>&lt;E&gt; &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 动态数组的大小</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> size;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 数组容量</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> E[] elements;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 默认初始容量</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">DEFAULT_CAPACITY</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 默认初始容量为10</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ArrayList</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>(DEFAULT_CAPACITY);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始容量</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> initialCapacity 初始容量</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@SuppressWarnings(&quot;unchecked&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ArrayList</span><span class="params">(<span class="type">int</span> initialCapacity)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (initialCapacity &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;Illegal Capacity: &quot;</span> + initialCapacity);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (initialCapacity == <span class="number">0</span>) &#123;</span><br><span class="line">            elements = (E[]) <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;&#125;;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            elements = (E[]) <span class="keyword">new</span> <span class="title class_">Object</span>[initialCapacity];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="元素数量"><span class="post-title-index">4.2. </span><a href="#元素数量" class="headerlink" title="元素数量"></a>元素数量</h3><blockquote><p>这里元素的数量就是指的当前 <code>size</code> 大小</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 元素数量</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">size</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> size;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数组是否为空"><span class="post-title-index">4.3. </span><a href="#数组是否为空" class="headerlink" title="数组是否为空"></a>数组是否为空</h3><blockquote><p>数组是否为空指的是当前 <code>size</code> 是否为 0</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 数组是否为空</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isEmpty</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> size == <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="获取指定位置元素"><span class="post-title-index">4.4. </span><a href="#获取指定位置元素" class="headerlink" title="获取指定位置元素"></a>获取指定位置元素</h3><blockquote><p>注意：获取指定位置的元素时，需要保证 <code>index</code> 不能小于0 或者 大于 <code>size</code></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取指定位置元素</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> index 元素下标</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> E</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> E <span class="title function_">get</span><span class="params">(<span class="type">int</span> index)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (index &gt;= size || index &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IndexOutOfBoundsException</span>(<span class="string">&quot;Index: &quot;</span> + index + <span class="string">&quot;, Size: &quot;</span> + size);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> elements[index];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="设置指定位置元素"><span class="post-title-index">4.5. </span><a href="#设置指定位置元素" class="headerlink" title="设置指定位置元素"></a>设置指定位置元素</h3><blockquote><p>注意：由于我们是需要返回原来指定位置的元素，所以需要将之前索引位置的元素取出来，然后在进行赋值。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 设置指定位置元素</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> index 索引</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> element     元素</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> E</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> E <span class="title function_">set</span><span class="params">(<span class="type">int</span> index, E element)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (index &gt;= size || index &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IndexOutOfBoundsException</span>(<span class="string">&quot;Index: &quot;</span> + index + <span class="string">&quot;, Size: &quot;</span> + size);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">E</span> <span class="variable">oldElement</span> <span class="operator">=</span> elements[index];</span><br><span class="line">    elements[index] =  element;</span><br><span class="line">    <span class="keyword">return</span> oldElement;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="获取元素索引"><span class="post-title-index">4.6. </span><a href="#获取元素索引" class="headerlink" title="获取元素索引"></a>获取元素索引</h3><blockquote><p>注意：需要对元素进行判断，当元素分别为 <code>null</code> 或者不为 <code>null</code> 的情况</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取元素索引</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> e 元素</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">indexOf</span><span class="params">(E e)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (e == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (element[i] == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (element[i].equals(e)) &#123;</span><br><span class="line">                <span class="keyword">return</span> i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数组是否包含某个元素"><span class="post-title-index">4.7. </span><a href="#数组是否包含某个元素" class="headerlink" title="数组是否包含某个元素"></a>数组是否包含某个元素</h3><blockquote><p>判断数组是否包含某个元素是基于 <code>indexOf(Element e)</code> 进行开发的，如果找不到元素则返回 -1 ，所以我们只要判断结果大于0，就说明找到元素了。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 数组是否包含某个元素</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> e 元素</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">contains</span><span class="params">(E e)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> indexOf(e) &gt;= <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="清除所有元素"><span class="post-title-index">4.8. </span><a href="#清除所有元素" class="headerlink" title="清除所有元素"></a>清除所有元素</h3><blockquote><p>如果直接让 size = 0，已经明确了外部获取不到任何值。但让数组内的元素置为 <code>null</code> 可以更好的让 <code>GC</code> 进行回收</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 清除所有元素</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">clear</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 让数组中的元素为 null，等待 GC 回收</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">        element[i] = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    size = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="添加元素"><span class="post-title-index">4.9. </span><a href="#添加元素" class="headerlink" title="添加元素"></a>添加元素</h3><h4 id="添加元素到指定位置"><span class="post-title-index">4.9.1. </span><a href="#添加元素到指定位置" class="headerlink" title="添加元素到指定位置"></a>添加元素到指定位置</h4><blockquote><p>需求：我们需要将新元素添加数组中 <code>index=2</code> 的位置。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202311012146231.gif" alt="动画" style="zoom:67%;float:left;"></p><p><strong>实现步骤</strong></p><ul><li>index：指的是元素下标。</li><li>size：指的是当前数组中存在元素个数。</li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">步骤</th><th style="text-align:center">index</th><th style="text-align:center">size</th><th>操作</th><th>代码</th></tr></thead><tbody><tr><td style="text-align:center">Step-1</td><td style="text-align:center">4</td><td style="text-align:center">5</td><td>将倒数第一位元素向后移动一位</td><td><code>elements[index + 1] = elements[index]</code></td></tr><tr><td style="text-align:center">Step-2</td><td style="text-align:center">3</td><td style="text-align:center">5</td><td>将倒数第二位元素向后移动一位</td><td><code>elements[index + 1] = elements[index]</code></td></tr><tr><td style="text-align:center">Step-3</td><td style="text-align:center">2</td><td style="text-align:center">5</td><td>将倒数第三位元素向后移动一位</td><td><code>elements[index + 1] = elements[index]</code></td></tr></tbody></table></div><p><strong>具体代码</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 添加到指定位置</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> index   索引</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> element 元素</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> index, E element)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (index &gt; size || index &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IndexOutOfBoundsException</span>(<span class="string">&quot;Index: &quot;</span> + index + <span class="string">&quot;, Size: &quot;</span> + size);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> size - <span class="number">1</span>; i &gt;= index; i--) &#123;</span><br><span class="line">        elements[i + <span class="number">1</span>] = elements[i];</span><br><span class="line">    &#125;</span><br><span class="line">    elements[index] = element;</span><br><span class="line">    size++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="添加元素到首尾部"><span class="post-title-index">4.9.2. </span><a href="#添加元素到首尾部" class="headerlink" title="添加元素到首尾部"></a>添加元素到首尾部</h4><blockquote><p>需求：我们需要将新的元素添加数组到首尾部。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202311012154926.png" alt="img" style="zoom:100%;float:left"></p><p><strong>实现步骤</strong></p><ul><li>Step-1：当 <code>size = 0</code> ，我们需要在 <code>index = 0</code> 的位置插入元素，需要将 <code>elements[size] = element</code>，然后 <code>size++</code>。</li><li>Step-2：当 <code>size = 5</code> ，我们需要在 <code>index = 5</code> 的位置插入元素，需要将 <code>elements[size] = element</code>，然后 <code>size++</code>。</li><li>Step-3：其实本质上 我们还是相当于在操作 <code>add(int index, Object element)</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 添加元素到首尾部</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> element 元素</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">(E element)</span> &#123;</span><br><span class="line">    elements[size++] = element;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="删除元素"><span class="post-title-index">4.10. </span><a href="#删除元素" class="headerlink" title="删除元素"></a>删除元素</h3><blockquote><p>需求：我们需要删除 <code>index = 3</code> 的元素</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202311020009415.gif" alt="动画" style="zoom:67%;float:left"></p><p><strong>实现步骤</strong></p><ul><li>index：指的是元素下标。</li><li>size：指的是当前数组中存在元素个数。</li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">步骤</th><th style="text-align:center">index</th><th style="text-align:center">size</th><th>操作</th><th>代码</th></tr></thead><tbody><tr><td style="text-align:center">Step-1</td><td style="text-align:center">4</td><td style="text-align:center">6</td><td>将倒数第三位元素向前移动一位</td><td><code>elements[index - 1] = elements[index]</code></td></tr><tr><td style="text-align:center">Step-2</td><td style="text-align:center">5</td><td style="text-align:center">6</td><td>将倒数第二位元素向前移动一位</td><td><code>elements[index - 1] = elements[index]</code></td></tr><tr><td style="text-align:center">Step-3</td><td style="text-align:center">6</td><td style="text-align:center">6</td><td>将倒数第一位元素向前移动一位</td><td><code>elements[index - 1] = elements[index]</code></td></tr></tbody></table></div><p><strong>具体代码</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 删除元素</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> index 索引</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> E</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> E <span class="title function_">remove</span><span class="params">(<span class="type">int</span> index)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (index &gt;= size || index &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IndexOutOfBoundsException</span>(<span class="string">&quot;Index: &quot;</span> + index + <span class="string">&quot;, Size: &quot;</span> + size);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">E</span> <span class="variable">oldElement</span> <span class="operator">=</span> elements[index];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> index + <span class="number">1</span>; i &lt;= size; i++) &#123;</span><br><span class="line">        elements[i - <span class="number">1</span>] = elements[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 将空出来的元素置为 null ，等待 GC 回收</span></span><br><span class="line">    elements[--size] = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">return</span> oldElement;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="打印数组"><span class="post-title-index">4.11. </span><a href="#打印数组" class="headerlink" title="打印数组"></a>打印数组</h3><blockquote><p>需求：我们需要根据数组的内容打印数组信息</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">printf</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">builder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        builder.append(<span class="string">&quot;ArrayList&#123; size = &quot;</span>)</span><br><span class="line">                .append(size)</span><br><span class="line">                .append(<span class="string">&quot; , elements = [ &quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">            builder.append(elements[i]);</span><br><span class="line">            <span class="keyword">if</span> (i != (size - <span class="number">1</span>)) &#123;</span><br><span class="line">                builder.append(<span class="string">&quot; , &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        builder.append(<span class="string">&quot; ] &#125;&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> builder.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数组扩容"><span class="post-title-index">4.12. </span><a href="#数组扩容" class="headerlink" title="数组扩容"></a>数组扩容</h3><blockquote><p>需求：由于我们默认的数组容量大小是 10 ，如果超过了 10 就需要进行扩容。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202311022255303.gif" alt="img"></p><p><strong>实现步骤</strong></p><ul><li>Step-1：首先，新增元素时，我们判断当前容量是否需要扩容。</li><li>Step-2：然后，根据当前容量大小，重新申请一块新的内存空间用来存放数组。</li><li>Step-3：然后，将原来的数组元素拷贝到新数组中。</li><li>Step-4：最后，再将老数组的地址指向新的数组。</li></ul><p><strong>具体代码</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 添加到指定位置</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> index   索引</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> element 元素</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> index, E element)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (index &gt; size || index &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IndexOutOfBoundsException</span>(<span class="string">&quot;Index: &quot;</span> + index + <span class="string">&quot;, Size: &quot;</span> + size);</span><br><span class="line">    &#125;</span><br><span class="line">    ensureCapacity(size + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> size - <span class="number">1</span>; i &gt;= index; i--) &#123;</span><br><span class="line">        elements[i + <span class="number">1</span>] = elements[i];</span><br><span class="line">    &#125;</span><br><span class="line">    elements[index] = element;</span><br><span class="line">    size++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 数组扩容</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> capacity 当前容量</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SuppressWarnings(&quot;unchecked&quot;)</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">ensureCapacity</span><span class="params">(<span class="type">int</span> capacity)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (capacity - elements.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">newCapacity</span> <span class="operator">=</span> capacity + (capacity &gt;&gt; <span class="number">1</span>);</span><br><span class="line">        E[] newElement = (E[]) <span class="keyword">new</span> <span class="title class_">Object</span>[newCapacity];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">            newElement[i] = elements[i];</span><br><span class="line">        &#125;</span><br><span class="line">        elements = newElement;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="单元测试"><span class="post-title-index">5. </span><a href="#单元测试" class="headerlink" title="单元测试"></a>单元测试</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayListTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ArrayList&lt;Integer&gt; arrayList;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@BeforeEach</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUp</span><span class="params">()</span> &#123;</span><br><span class="line">        arrayList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testInitialCapacity</span><span class="params">()</span> &#123;</span><br><span class="line">        assertEquals(<span class="number">0</span>, arrayList.size());</span><br><span class="line">        assertTrue(arrayList.isEmpty());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testAddAndSize</span><span class="params">()</span> &#123;</span><br><span class="line">        arrayList.add(<span class="number">5</span>);</span><br><span class="line">        arrayList.add(<span class="number">10</span>);</span><br><span class="line">        arrayList.add(<span class="number">15</span>);</span><br><span class="line"></span><br><span class="line">        assertEquals(<span class="number">3</span>, arrayList.size());</span><br><span class="line">        assertFalse(arrayList.isEmpty());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGet</span><span class="params">()</span> &#123;</span><br><span class="line">        arrayList.add(<span class="number">7</span>);</span><br><span class="line">        arrayList.add(<span class="number">14</span>);</span><br><span class="line"></span><br><span class="line">        assertEquals(<span class="number">7</span>, arrayList.get(<span class="number">0</span>));</span><br><span class="line">        assertEquals(<span class="number">14</span>, arrayList.get(<span class="number">1</span>));</span><br><span class="line">        assertThrows(IndexOutOfBoundsException.class, () -&gt; arrayList.get(<span class="number">2</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSet</span><span class="params">()</span> &#123;</span><br><span class="line">        arrayList.add(<span class="number">20</span>);</span><br><span class="line">        arrayList.add(<span class="number">30</span>);</span><br><span class="line"></span><br><span class="line">        assertEquals(<span class="number">20</span>, arrayList.set(<span class="number">0</span>, <span class="number">25</span>));</span><br><span class="line">        assertEquals(<span class="number">25</span>, arrayList.get(<span class="number">0</span>));</span><br><span class="line">        assertThrows(IndexOutOfBoundsException.class, () -&gt; arrayList.set(<span class="number">2</span>, <span class="number">40</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testAddAtIndex</span><span class="params">()</span> &#123;</span><br><span class="line">        arrayList.add(<span class="number">100</span>);</span><br><span class="line">        arrayList.add(<span class="number">200</span>);</span><br><span class="line">        arrayList.add(<span class="number">1</span>, <span class="number">150</span>);</span><br><span class="line"></span><br><span class="line">        assertEquals(<span class="number">3</span>, arrayList.size());</span><br><span class="line">        assertEquals(<span class="number">150</span>, arrayList.get(<span class="number">1</span>));</span><br><span class="line">        assertThrows(IndexOutOfBoundsException.class, () -&gt; arrayList.add(<span class="number">5</span>, <span class="number">500</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testRemove</span><span class="params">()</span> &#123;</span><br><span class="line">        arrayList.add(<span class="number">1</span>);</span><br><span class="line">        arrayList.add(<span class="number">2</span>);</span><br><span class="line">        arrayList.add(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">        assertEquals(<span class="number">2</span>, arrayList.remove(<span class="number">1</span>));</span><br><span class="line">        assertEquals(<span class="number">2</span>, arrayList.size());</span><br><span class="line">        assertEquals(<span class="number">3</span>, arrayList.get(<span class="number">1</span>));</span><br><span class="line">        assertThrows(IndexOutOfBoundsException.class, () -&gt; arrayList.remove(<span class="number">5</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testIndexOf</span><span class="params">()</span> &#123;</span><br><span class="line">        arrayList.add(<span class="number">11</span>);</span><br><span class="line">        arrayList.add(<span class="number">22</span>);</span><br><span class="line">        arrayList.add(<span class="number">33</span>);</span><br><span class="line"></span><br><span class="line">        assertEquals(<span class="number">1</span>, arrayList.indexOf(<span class="number">22</span>));</span><br><span class="line">        assertEquals(-<span class="number">1</span>, arrayList.indexOf(<span class="number">44</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testClear</span><span class="params">()</span> &#123;</span><br><span class="line">        arrayList.add(<span class="number">8</span>);</span><br><span class="line">        arrayList.add(<span class="number">16</span>);</span><br><span class="line"></span><br><span class="line">        assertFalse(arrayList.isEmpty());</span><br><span class="line">        arrayList.clear();</span><br><span class="line">        assertTrue(arrayList.isEmpty());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><span class="post-title-index">6. </span><a href="#总结" class="headerlink" title="总结"></a>总结</h2><blockquote><p>总体来说，动态数组这个数据结构不算过于复杂。但在 新增元素、删除元素、动态扩容 这几个部分还是需要主要一下的。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202311092126386.png" alt="image-20231109212650317" style="zoom:60%;float:left"></p><h2 id="参考博文"><span class="post-title-index">7. </span><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><ul><li><a href="https://ke.qq.com/course/385223#term_id=100509723">恋上数据结构与算法(第一季)-MJ大神精选</a></li><li><a href="https://www.cnblogs.com/dev-liu/p/15150356.html">算法入门 - 动态数组的实现（Java版本）</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
          <category> 动态数组 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringSecurity-基础知识（一）</title>
      <link href="/posts/9cdfda66.html"/>
      <url>/posts/9cdfda66.html</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><span class="post-title-index">1. </span><a href="#背景" class="headerlink" title="背景"></a>背景</h2><blockquote><p>由于最近工作中使用到了 <code>SpringSecurity</code> 框架对用户进行认证和授权，但自己这部分对于自己来说属于黑盒，所以借此机会记录一下 <code>SpringSecurity</code> 的基本用法，以及在后面会针对 <code>SpringSecurity</code> 进行对平台的认证和源码分析。</p></blockquote><h2 id="背景大纲"><span class="post-title-index">2. </span><a href="#背景大纲" class="headerlink" title="背景大纲"></a>背景大纲</h2><ul><li>基本概念</li><li>快速入门</li><li>生命周期</li><li>认证</li><li>授权</li><li><code>SpringSecurity</code> 配置类</li><li><code>SpringSecurity</code> 处理器</li><li>需求</li></ul>]]></content>
      
      
      <categories>
          
          <category> 开源框架 </category>
          
          <category> SpringSecurity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringSecurity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis-源码解析（二）</title>
      <link href="/posts/b1132c7d.html"/>
      <url>/posts/b1132c7d.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><span class="post-title-index">1. </span><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>我们讲解的方式为由浅入深，一定要对框架有一个大概的认识才慢慢去了解其中的具体细节。</p></blockquote><p>本章节讲解的内容主要分为如下四个板块：</p><ul><li><code>Mybatis</code> 架构解析</li><li><code>Mybatis</code> 生命周期</li><li><code>Mybatis</code> 源码分析</li><li><code>Mybatis</code> 设计模式</li></ul><hr><h2 id="Mybatis-架构解析"><span class="post-title-index">2. </span><a href="#Mybatis-架构解析" class="headerlink" title="Mybatis 架构解析"></a><code>Mybatis</code> 架构解析</h2><p>我们一般把 <code>Mybatis</code> 的功能架构分为三层：</p><ul><li><strong><code>API</code> 接口层</strong>：提供给外部使用的接口 <code>API</code>，开发人员通过这些本地 <code>API</code> 来操纵数据库。接口层一接收到调用请求就会调用数据处理层来完成具体的数据处理。</li><li><strong>数据处理层</strong>：它主要的目的是根据调用的请求完成一次数据库操作，负责具体的 <strong><code>SQL</code> 查找</strong>、<strong><code>SQL</code> 解析</strong>、<strong><code>SQL</code> 执行</strong>和执行<strong>结果映射处理</strong>等。</li><li><strong>基础支撑层</strong>：为上层的数据处理层提供最基础的支撑，负责最基础的功能支撑，包括连接管理、事务管理、配置加载和缓存处理，这些都是共用的东西，将他们抽取出来作为最基础的组件。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308242254295.png" alt="在这里插入图片描述" style="zoom:90%;float:left;"></p><p><strong>代码示例</strong></p><ul><li>从配置文件（通常是XML文件）得到 <code>SessionFactory</code> ; </li><li>从 <code>SessionFactory</code> 得到 <code>SqlSession</code>；</li><li>通过 <code>SqlSession</code> 进行 <code>CRUD</code> 和事务的操作；</li><li>执行完相关操作之后关闭 <code>Session</code>。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">// 从 XML 中构建 SqlSessionFactory</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">resource</span> <span class="operator">=</span> <span class="string">&quot;mybatis-config.xml&quot;</span>;</span><br><span class="line">    <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 将XML配置文件构建为Configuration配置</span></span><br><span class="line">        inputStream = Resources.getResourceAsStream(resource);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 通过加载配置文件流构建一个SqlSessionFactory DefaultSqlSessionFactor</span></span><br><span class="line">    sqlSessionFactory = <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(inputStream);</span><br><span class="line">    <span class="comment">// 数据源 执行器 DefaultSqlSession</span></span><br><span class="line">    <span class="keyword">try</span> (<span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> sqlSessionFactory.openSession()) &#123;</span><br><span class="line">        <span class="type">EmployeeMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> session.getMapper(EmployeeMapper.class);</span><br><span class="line">        List&lt;Employee&gt; employees = mapper.listByEmployee();</span><br><span class="line">        employees.forEach(System.out::println);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="Mybatis-生命周期"><span class="post-title-index">3. </span><a href="#Mybatis-生命周期" class="headerlink" title="Mybatis 生命周期"></a><code>Mybatis</code> 生命周期</h2><p><code>Mybatis</code> 生命周期大概分为如下几步：</p><ol><li><p><strong><code>Configuration</code></strong> 实例化阶段</p><ul><li>当应用启动时，<code>MyBatis</code> 会读取配置文件（如 <code>mybatis-config.xml</code>）并创建一个 <code>Configuration</code> 对象。这个对象包含了 <code>MyBatis</code> 的全局配置信息，包括数据库连接信息、对象映射配置、插件等。</li></ul></li><li><p><strong><code>SqlSessionFactory</code> </strong>的创建</p><ul><li>在 <code>Configuration</code> 对象被创建后，<code>MyBatis</code> 会基于配置信息构建一个 <code>SqlSessionFactory</code> 对象。<code>SqlSessionFactory</code> 是一个线程安全的工厂类，用于创建 <code>SqlSession</code> 实例。</li></ul></li><li><p><strong><code>SqlSession</code> </strong>的生命周期</p><ul><li><code>SqlSession</code> 是 <code>MyBatis</code> 中用于执行 <code>SQL</code> 语句的核心对象。它的生命周期是短暂的，每次需要与数据库进行交互时，都会创建一个新的 <code>SqlSession</code> 对象。在完成操作后，需要显式地关闭 <code>SqlSession</code>，释放相关资源。</li></ul></li><li><p><strong>Mapper</strong> 接口的代理对象</p><ul><li>在 <code>MyBatis</code> 中，可以使用 Mapper 接口来定义 <code>SQL</code> 映射操作。<code>MyBatis</code> 会为每个 <code>Mapper</code> 接口创建一个代理对象，该代理对象通过 <code>SqlSession</code> 来执行具体的 <code>SQL</code> 操作。</li></ul></li><li><p><strong>执行 <code>SQL</code> 操作</strong></p><ul><li>通过 <code>SqlSession</code> 或 Mapper 接口的代理对象，可以执行各种 <code>SQL</code> 操作，包括查询、插入、更新、删除等。</li></ul></li><li><p><strong>事务管理</strong></p><ul><li>在需要进行事务操作时，可以通过配置来启用 <code>MyBatis</code> 的事务管理。</li></ul></li><li><p><strong>插件拦截器</strong></p><ul><li><code>MyBatis</code> 允许通过插件来扩展其功能。插件可以拦截 <code>MyBatis</code> 的核心组件，如 <code>Executor</code>、<code>StatementHandler</code>、<code>ParameterHandler</code>、<code>ResultSetHandler</code> 等，在其执行过程中添加自定义逻辑。</li></ul></li><li><p><strong>资源释放</strong></p><ul><li>在应用关闭时，需要显式地关闭 <code>SqlSessionFactory</code>，释放相关的数据库连接和资源，以避免内存泄漏。</li></ul></li></ol><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308251111886.png" alt="MyBatis主要组件生命周期"></p><hr><h2 id="Mybatis-源码分析"><span class="post-title-index">4. </span><a href="#Mybatis-源码分析" class="headerlink" title="Mybatis 源码分析"></a><code>Mybatis</code> 源码分析</h2><blockquote><p>我们采用的 <code>Mybatis 3.4.3</code> 进行分析，这样我们就可以在源码的基础上添加注释信息。该部分的源码分析主要是围绕着全局配置文件进行的分析。</p><p>参考博文：</p><p><a href="https://www.cnblogs.com/mokingone/p/9108999.html">mybatis 源码导入IDEA - 未亦末 - 博客园 (cnblogs.com)</a></p><p><a href="https://www.cnblogs.com/RunningSnails/p/17169489.html">https://www.cnblogs.com/RunningSnails/p/17169489.html</a></p></blockquote><h3 id="源码编译"><span class="post-title-index">4.1. </span><a href="#源码编译" class="headerlink" title="源码编译"></a>源码编译</h3><blockquote><p>如果需要编译源码需要下载两个部分的源码</p></blockquote><ul><li>将源码下载下来之后将【<code>mybatis-parent-31</code>】进行编译</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn clean install</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308251227085.png" alt="image-20230825122725045" style="zoom:100%;float:left"></p><ul><li>然后编译【<code>mybatis-3-mybatis-3.5.4</code>】</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mvn clean</span><br><span class="line"></span><br><span class="line">mvn install -Dmaven.test.skip=<span class="literal">true</span></span><br></pre></td></tr></table></figure><p><strong>可能会遇到的问题</strong></p><ol><li><p>由于本人从<code>git</code> 下载的 <code>zip</code> 版本，编译的时候出现如下错误</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">failure occured while calling class com.mycila.maven.plugin.license.git.CopyrightRangeProvider</span><br></pre></td></tr></table></figure><ul><li>解决方案</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure></li><li><p>然后出现如下错误</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ERROR] Failed to execute goal org.apache.maven.plugins:maven-pdf-plugin:1.4:pdf (pdf) on project mybatis: Error during document generation: Error parsing D:\idea-project\mybatis-3.5.3\mybatis-3-mybatis-3.5.4\target\pdf\site.tmp\xdoc\getting-started.xml: Error parsing the model: only whitespace content allowed before start tag and not \ufeff (position: COMMENT seen ...rning permissions and\n       limitations under the License.\n\n--&gt;\n\ufeff... @18:2)</span><br></pre></td></tr></table></figure><ul><li>解决方案，将 <code>mybatis-3-mybatis-3.5.4</code> 中的 <code>pom.xml</code> 如下注释</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--      &lt;plugin&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;artifactId&gt;maven-pdf-plugin&lt;/artifactId&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--      &lt;/plugin&gt;--&gt;</span></span><br></pre></td></tr></table></figure></li></ol><p><strong>编译成功</strong></p><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308251352591.png" alt="image-20230825135203547"></p><h3 id="引入依赖"><span class="post-title-index">4.2. </span><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h3><blockquote><p>我们在《<a href="http://localhost:4000/posts/7a56d0fb.html">Mybatis-基础知识（一）</a>》基础上进行开发，则需要重新引入本地编译好的 <code>Mybatis 3.5.4</code> 版本</p></blockquote><ul><li>修改 <code>mybatis 3.5.4</code> 的版本号</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.4-xsls<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在需要引用的项目中添加引用</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308251614446.png" alt="image-20230825161438391"></p><ul><li>如果报错 <code>java.lang.NoClassDefFoundError: ognl/PropertyAccessor</code> , 则添加如下依赖</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ognl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ognl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="源码分析"><span class="post-title-index">4.3. </span><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h3><h4 id="Mybatis-启动流程"><span class="post-title-index">4.3.1. </span><a href="#Mybatis-启动流程" class="headerlink" title="Mybatis 启动流程"></a><code>Mybatis</code> 启动流程</h4><ul><li>代码示例</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">SqlSessionFactory sqlSessionFactory;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Before</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">// 从 XML 中构建 SqlSessionFactory</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">resource</span> <span class="operator">=</span> <span class="string">&quot;mybatis-config.xml&quot;</span>;</span><br><span class="line">    <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        inputStream = Resources.getResourceAsStream(resource);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    sqlSessionFactory = <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(inputStream);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>UML</code> 时序图</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202309071511946.png" alt="image-20230907151134759" style="zoom:100%;"></p><ul><li><code>gif</code> 源码追踪</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202309071520451.gif" alt="动画"></p>]]></content>
      
      
      <categories>
          
          <category> 开源框架 </category>
          
          <category> Mybatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis-基础知识（一）</title>
      <link href="/posts/7a56d0fb.html"/>
      <url>/posts/7a56d0fb.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><span class="post-title-index">1. </span><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p><code>Mybatis</code> 的基础知识以及相关用法因为在工作工作过程中天天都在使用，本来不打算写的。但在看 <code>Mybatis</code> 的源码过程中发现很多地方都对 <code>XML</code> 在解析，还是觉得有必要记录一下 <code>Mybatis</code> 的基本概念。</p></blockquote><hr><h2 id="Mybatis-基本概念"><span class="post-title-index">2. </span><a href="#Mybatis-基本概念" class="headerlink" title="Mybatis 基本概念"></a><code>Mybatis</code> 基本概念</h2><blockquote><p><code>Mybatis</code> : <a href="https://mybatis.org/mybatis-3/zh/index.html">官网地址</a></p><p><code>Mybatis</code> 是一款优秀的 持久层框架/半自动 的 <code>ORM</code> 框架，半自动的原因是因为 移植性不行，例如 <code>Oracle</code> 转 <code>MySQL</code> 就会存在大量关键字不可用。</p></blockquote><p><strong>优点</strong></p><ul><li>与 <code>JDBC</code> 相比，减少了50%的代码量。（加载驱动、获取数据库链接、设置参数和获取结果集等）</li><li>上手简单，学习成本很低。</li><li>实现了代码与 <code>SQL</code> 的解耦（提供XML标签，支持编写动态<code>SQL</code>）</li></ul><p><strong>缺点</strong></p><ul><li><p><code>SQL</code> 语句编写工作量大，熟练度要高（针对传统的金融业务，有时可能一个简单的业务也要关联七八张表）</p></li><li><p>数据库移植性比较差，如果需要切换数据库的话，<code>SQL</code> 语句会有很大的差异</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;_databaseId==&#x27;postgresql&#x27;&quot;</span>&gt;</span></span><br><span class="line">    to_char(creation_time, &#x27;yyyy-MM-dd&#x27;) creation_time,</span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;_databaseId==&#x27;oracle&#x27;&quot;</span>&gt;</span></span><br><span class="line">    to_char(creation_time, &#x27;yyyy-MM-dd&#x27;) creation_time,</span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;_databaseId==&#x27;mysql&#x27;&quot;</span>&gt;</span></span><br><span class="line">    date_format(creation_time, &#x27;%Y-%m-%d&#x27;) creation_time,</span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="Mybatis-快速入门"><span class="post-title-index">3. </span><a href="#Mybatis-快速入门" class="headerlink" title="Mybatis 快速入门"></a><code>Mybatis</code> 快速入门</h2><blockquote><p>总体来说上手成本还是挺低的，比较简单。后面我们一般会集成到 <code>Spring</code> 中，不会像如下这样操作。</p></blockquote><p><strong>目录结构如下</strong></p><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308181218673.png" alt="image-20230818121811649" style="float:left"></p><p><strong>具体步骤如下</strong></p><ul><li>导入依赖</li><li>创建数据表</li><li>创建实体对象</li><li>创建Mapper接口</li><li>编写配置文件</li><li>编写测试类</li></ul><h3 id="导入依赖"><span class="post-title-index">3.1. </span><a href="#导入依赖" class="headerlink" title="导入依赖"></a>导入依赖</h3><ul><li><code>pom.xml</code></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.47<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="创建数据表"><span class="post-title-index">3.2. </span><a href="#创建数据表" class="headerlink" title="创建数据表"></a>创建数据表</h3><ul><li><code>emp.sql</code></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 建表语句</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `emp` (</span><br><span class="line">  `id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `username` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">COLLATE</span> utf8mb4_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">4</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8mb4_unicode_ci;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 新增语句</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp ( id, username )</span><br><span class="line"><span class="keyword">VALUES</span> ( <span class="number">1</span>, <span class="string">&#x27;Tom&#x27;</span> ), ( <span class="number">2</span>, <span class="string">&#x27;Jack&#x27;</span> ), ( <span class="number">3</span>, <span class="string">&#x27;Tony&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="创建实体对象"><span class="post-title-index">3.3. </span><a href="#创建实体对象" class="headerlink" title="创建实体对象"></a>创建实体对象</h3><ul><li><code>employee.java</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Employee</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 省略 Setter/Getter</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建Mapper接口"><span class="post-title-index">3.4. </span><a href="#创建Mapper接口" class="headerlink" title="创建Mapper接口"></a>创建Mapper接口</h3><ul><li><code>EmployeeMapper.java</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">EmployeeMapper</span> &#123;</span><br><span class="line">    <span class="comment">// 查询所有 Employee 信息</span></span><br><span class="line">    List&lt;Employee&gt; <span class="title function_">listByEmployee</span><span class="params">()</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 根据id查询</span></span><br><span class="line">    Employee <span class="title function_">selectEmployee</span><span class="params">(Integer id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 插入</span></span><br><span class="line">    Integer <span class="title function_">insertEmployee</span><span class="params">(Employee emp)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 更新</span></span><br><span class="line">    Integer <span class="title function_">updateEmployee</span><span class="params">(Employee emp)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 删除</span></span><br><span class="line">    Integer <span class="title function_">deleteEmployee</span><span class="params">(Integer id)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="编写配置文件"><span class="post-title-index">3.5. </span><a href="#编写配置文件" class="headerlink" title="编写配置文件"></a>编写配置文件</h3><ul><li><code>mybatis-config.xml</code></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 数据库环境配置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 开发环境配置 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span> <span class="comment">&lt;!-- 使用 JDBC 事务管理 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span> <span class="comment">&lt;!-- 使用连接池的数据源 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span> <span class="comment">&lt;!-- 数据库驱动类 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/mybatis&quot;</span>/&gt;</span> <span class="comment">&lt;!-- 数据库 URL --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span> <span class="comment">&lt;!-- 数据库用户名 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span> <span class="comment">&lt;!-- 数据库密码 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 映射器配置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;EmployeeMapper.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>EmployeeMapper.xml</code></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span> <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.wickson.mapper.EmployeeMapper&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 根据id查询Employee --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectEmployee&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.wickson.entity.Employee&quot;</span>&gt;</span></span><br><span class="line">        select * from emp where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 查询所有 Employee 信息 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;listByEmployee&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.wickson.entity.Employee&quot;</span>&gt;</span></span><br><span class="line">        SELECT * FROM emp</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 插入 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insertEmployee&quot;</span>&gt;</span></span><br><span class="line">        INSERT INTO emp ( `username`) VALUES (#&#123;username&#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 更新 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateEmployee&quot;</span>&gt;</span></span><br><span class="line">        UPDATE emp SET username = #&#123;username&#125; WHERE id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 删除 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteEmployee&quot;</span>&gt;</span></span><br><span class="line">        DELETE FROM emp WHERE id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="编写测试类"><span class="post-title-index">3.6. </span><a href="#编写测试类" class="headerlink" title="编写测试类"></a>编写测试类</h3><ul><li><code>EmployeeMapperTest.java</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EmployeeMapperTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    SqlSessionFactory sqlSessionFactory;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">// 从 XML 中构建 SqlSessionFactory</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">resource</span> <span class="operator">=</span> <span class="string">&quot;mybatis-config.xml&quot;</span>;</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            inputStream = Resources.getResourceAsStream(resource);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        sqlSessionFactory = <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(inputStream);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@After</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">listByEmployee</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 使用 JDK8 新特性 自动关流</span></span><br><span class="line">        <span class="keyword">try</span> (<span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> sqlSessionFactory.openSession()) &#123;</span><br><span class="line">            <span class="comment">// 使用映射器命名空间执行查询操作</span></span><br><span class="line">            List&lt;Employee&gt; employees = session.selectList(<span class="string">&quot;com.wickson.mapper.EmployeeMapper.listByEmployee&quot;</span>);</span><br><span class="line">            employees.forEach(System.out::println);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">selectEmployee</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> (<span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> sqlSessionFactory.openSession()) &#123;</span><br><span class="line">            <span class="comment">// 使用映射器接口方法执行查询操作</span></span><br><span class="line">            <span class="type">EmployeeMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> session.getMapper(EmployeeMapper.class);</span><br><span class="line">            <span class="type">Employee</span> <span class="variable">employee</span> <span class="operator">=</span> mapper.selectEmployee(<span class="number">1</span>);</span><br><span class="line">            <span class="comment">// Employee&#123;id=1, username=&#x27;Tom&#x27;&#125;</span></span><br><span class="line">            System.out.println(employee);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">insertEmployee</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> (<span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> sqlSessionFactory.openSession()) &#123;</span><br><span class="line">            <span class="comment">// 使用映射器接口方法执行查询操作</span></span><br><span class="line">            <span class="type">EmployeeMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> session.getMapper(EmployeeMapper.class);</span><br><span class="line">            <span class="type">Employee</span> <span class="variable">employee</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Employee</span>();</span><br><span class="line">            employee.setUsername(<span class="string">&quot;Jerry&quot;</span>);</span><br><span class="line">            <span class="type">Integer</span> <span class="variable">rows</span> <span class="operator">=</span> mapper.insertEmployee(employee);</span><br><span class="line">            <span class="comment">// 提交事务</span></span><br><span class="line">            session.commit();</span><br><span class="line">            <span class="comment">// Affected rows = 1</span></span><br><span class="line">            System.out.println(<span class="string">&quot;Affected rows = &quot;</span> + rows);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateEmployee</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> (<span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> sqlSessionFactory.openSession()) &#123;</span><br><span class="line">            <span class="comment">// 使用映射器接口方法执行查询操作</span></span><br><span class="line">            <span class="type">EmployeeMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> session.getMapper(EmployeeMapper.class);</span><br><span class="line">            <span class="type">Employee</span> <span class="variable">employee</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Employee</span>();</span><br><span class="line">            employee.setId(<span class="number">5</span>);</span><br><span class="line">            employee.setUsername(<span class="string">&quot;Jerry1&quot;</span>);</span><br><span class="line">            <span class="type">Integer</span> <span class="variable">rows</span> <span class="operator">=</span> mapper.updateEmployee(employee);</span><br><span class="line">            <span class="comment">// 提交事务</span></span><br><span class="line">            session.commit();</span><br><span class="line">            <span class="comment">// Affected rows = 1</span></span><br><span class="line">            System.out.println(<span class="string">&quot;Affected rows = &quot;</span> + rows);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteEmployee</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> (<span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> sqlSessionFactory.openSession()) &#123;</span><br><span class="line">            <span class="comment">// 使用映射器接口方法执行查询操作</span></span><br><span class="line">            <span class="type">EmployeeMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> session.getMapper(EmployeeMapper.class);</span><br><span class="line">            <span class="type">Integer</span> <span class="variable">rows</span> <span class="operator">=</span> mapper.deleteEmployee(<span class="number">5</span>);</span><br><span class="line">            <span class="comment">// 提交事务</span></span><br><span class="line">            session.commit();</span><br><span class="line">            <span class="comment">// Affected rows = 1</span></span><br><span class="line">            System.out.println(<span class="string">&quot;Affected rows = &quot;</span> + rows);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="Mybatis-配置文件"><span class="post-title-index">4. </span><a href="#Mybatis-配置文件" class="headerlink" title="Mybatis 配置文件"></a><code>Mybatis</code> 配置文件</h2><blockquote><p><code>Mybatis</code> 的配置文件分为两大类，第一个是 全局配置文件，第二个是 <code>SQL</code> 映射文件。</p><p>这部分的文件在源码分析时全部都会进行加载</p></blockquote><h3 id="全局配置文件"><span class="post-title-index">4.1. </span><a href="#全局配置文件" class="headerlink" title="全局配置文件"></a>全局配置文件</h3><blockquote><p>如下是 <code>Mybatis</code> 的全局配置文件信息，后面的源码信息会加载如下配置信息</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 导入数据库属性配置文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">&quot;db.properties&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- MyBatis全局设置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 配置下划线自动映射为驼峰命名法 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;mapUnderscoreToCamelCase&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 类型别名 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 扫描指定包下的类，作为类型别名 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.wickson.bean&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 数据库环境配置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 开发环境 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 使用JDBC事务管理 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 使用连接池数据源 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 数据库连接信息从外部属性文件获取 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;driverClassname&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;url&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;username&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;password&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 数据库厂商标识配置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">databaseIdProvider</span> <span class="attr">type</span>=<span class="string">&quot;DB_VENDOR&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 针对不同数据库的标识 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;MySQL&quot;</span> <span class="attr">value</span>=<span class="string">&quot;mysql&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;SQL Server&quot;</span> <span class="attr">value</span>=<span class="string">&quot;sqlserver&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;Oracle&quot;</span> <span class="attr">value</span>=<span class="string">&quot;orcl&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">databaseIdProvider</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 映射器配置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 单个映射器文件的引入 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;EmployeeMapper.xml&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 扫描指定包下的映射器接口 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.wickson.mapper&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="SQL-映射文件"><span class="post-title-index">4.2. </span><a href="#SQL-映射文件" class="headerlink" title="SQL 映射文件"></a><code>SQL</code> 映射文件</h3><p><code>SQL</code> 映射文件只有很少的几个顶级元素（按照应被定义的顺序列出）：</p><ul><li><code>cache</code> – 该命名空间的缓存配置。</li><li><code>cache-ref</code> – 引用其它命名空间的缓存配置。</li><li><code>resultMap</code> – 描述如何从数据库结果集中加载对象，是最复杂也是最强大的元素。</li><li><code>sql</code> – 可被其它语句引用的可重用语句块。</li><li><code>insert</code> – 映射插入语句。</li><li><code>update</code> – 映射更新语句。</li><li><code>delete</code> – 映射删除语句。</li><li><code>select</code> – 映射查询语句。</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;cn.tulingxueyuan.dao.EmployeeMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- MyBatis SQL映射文件 --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 缓存设置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cache</span> <span class="attr">type</span>=<span class="string">&quot;org.mybatis.caches.ehcache.EhcacheCache&quot;</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 引用外部缓存 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cache-ref</span> <span class="attr">namespace</span>=<span class="string">&quot;com.wickson.mapper.DepartmentMapper&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 结果映射 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;employeeResultMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;com.wickson.entity.Employee&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 配置映射关系，这里以id为例 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;emp_id&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;empName&quot;</span> <span class="attr">column</span>=<span class="string">&quot;emp_name&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;email&quot;</span> <span class="attr">column</span>=<span class="string">&quot;emp_email&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- SQL片段定义 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">&quot;baseColumnList&quot;</span>&gt;</span></span><br><span class="line">        emp_id, emp_last_name, emp_email</span><br><span class="line">    <span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 插入操作</span></span><br><span class="line"><span class="comment"> useGeneratedKeys: 仅适用于 insert 和 update, 取出由数据库内部生成的主键，默认值：false。</span></span><br><span class="line"><span class="comment">keyProperty: 指定能够唯一识别对象的属性，MyBatis 会使用 getGeneratedKeys 的返回值或 insert 语句的 selectKey 子元素设置它的值</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insertEmployee&quot;</span> <span class="attr">useGeneratedKeys</span>=<span class="string">&quot;true&quot;</span> <span class="attr">keyProperty</span>=<span class="string">&quot;id&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 插入SQL语句 --&gt;</span></span><br><span class="line">        INSERT INTO employees($&#123;baseColumnList&#125;)</span><br><span class="line">        VALUES(#&#123;id&#125;, #&#123;lastName&#125;, #&#123;email&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 更新操作 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateEmployee&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.wickson.entity.Employee&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 更新SQL语句 --&gt;</span></span><br><span class="line">        UPDATE employees</span><br><span class="line">        SET emp_last_name = #&#123;lastName&#125;, emp_email = #&#123;email&#125;</span><br><span class="line">        WHERE emp_id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 删除操作 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteEmployee&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 删除SQL语句 --&gt;</span></span><br><span class="line">        DELETE FROM employees WHERE emp_id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 查询操作 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getEmployeeById&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;employeeResultMap&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 查询SQL语句 --&gt;</span></span><br><span class="line">        SELECT $&#123;baseColumnList&#125;</span><br><span class="line">        FROM employees</span><br><span class="line">        WHERE emp_id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="Mybatis-动态-SQL"><span class="post-title-index">5. </span><a href="#Mybatis-动态-SQL" class="headerlink" title="Mybatis 动态 SQL"></a><code>Mybatis</code> 动态 <code>SQL</code></h2><h3 id="if"><span class="post-title-index">5.1. </span><a href="#if" class="headerlink" title="if"></a><code>if</code></h3><blockquote><p>根据条件生成 <code>SQL</code> 片段</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findActiveBlogWithTitleLike&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Blog&quot;</span>&gt;</span></span><br><span class="line">    SELECT * FROM BLOG WHERE state = ‘ACTIVE’ </span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;title != null&quot;</span>&gt;</span></span><br><span class="line">      AND title like #&#123;title&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="choose-when-otherwise"><span class="post-title-index">5.2. </span><a href="#choose-when-otherwise" class="headerlink" title="choose / when / otherwise"></a><code>choose / when / otherwise</code></h3><blockquote><p>类似于Java中的switch语句，根据条件选择不同的分支。</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findActiveBlogLike&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Blog&quot;</span>&gt;</span></span><br><span class="line">    SELECT * FROM BLOG WHERE state = ‘ACTIVE’</span><br><span class="line">    <span class="tag">&lt;<span class="name">choose</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">&quot;title != null&quot;</span>&gt;</span></span><br><span class="line">        AND title like #&#123;title&#125;</span><br><span class="line">      <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">&quot;author != null and author.name != null&quot;</span>&gt;</span></span><br><span class="line">        AND author_name like #&#123;author.name&#125;</span><br><span class="line">      <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">otherwise</span>&gt;</span></span><br><span class="line">        AND featured = 1</span><br><span class="line">      <span class="tag">&lt;/<span class="name">otherwise</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">choose</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="foreach"><span class="post-title-index">5.3. </span><a href="#foreach" class="headerlink" title="foreach"></a><code>foreach</code></h3><blockquote><p>用于循环遍历集合，生成对应的 <code>SQL</code> 片段</p><ol><li>如果传入的是单参数且参数类型是一个 <code>List</code> 的时候，<code>collection</code> 属性值为 <code>list</code></li><li>如果传入的是单参数且参数类型是一个array数组的时候，<code>collection</code> 的属性值为 <code>array</code></li><li>如果传入的参数是多个的时候，我们就需要把它们封装成一个Map了，当然单参数也可以封装成map，实际上如果你在传入参数的时候，在 <code>MyBatis</code> 里面也是会把它封装成一个 <code>Map</code> 的，map的key就是参数名，所以这个时候collection属性值就是传入的List或array对象在自己封装的map里面的key</li></ol></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectPostIn&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Blog&quot;</span>&gt;</span></span><br><span class="line">    SELECT * FROM BLOG </span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment"> item     表示集合中每一个元素进行迭代时的别名，随便起的变量名；</span></span><br><span class="line"><span class="comment">        index    指定一个名字，用于表示在迭代过程中，每次迭代到的位置，不常用；</span></span><br><span class="line"><span class="comment">        open     表示该语句以什么开始，常用“(”；</span></span><br><span class="line"><span class="comment">        separator 表示在每次进行迭代之间以什么符号作为分隔符，常用“,”；</span></span><br><span class="line"><span class="comment">        close    表示以什么结束，常用“)”。</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">item</span>=<span class="string">&quot;item&quot;</span> <span class="attr">index</span>=<span class="string">&quot;index&quot;</span> <span class="attr">collection</span>=<span class="string">&quot;list&quot;</span> <span class="attr">open</span>=<span class="string">&quot;ID in (&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span> <span class="attr">close</span>=<span class="string">&quot;)&quot;</span> <span class="attr">nullable</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">            #&#123;item&#125;</span><br><span class="line">      <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="set"><span class="post-title-index">5.4. </span><a href="#set" class="headerlink" title="set"></a><code>set</code></h3><blockquote><p>可以用在动态更新的时候</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateAuthorIfNecessary&quot;</span>&gt;</span></span><br><span class="line">  update Author</span><br><span class="line">    <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;username != null&quot;</span>&gt;</span></span><br><span class="line">          username=#&#123;username&#125;,</span><br><span class="line">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;password != null&quot;</span>&gt;</span></span><br><span class="line">          password=#&#123;password&#125;,</span><br><span class="line">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;email != null&quot;</span>&gt;</span></span><br><span class="line">          email=#&#123;email&#125;,</span><br><span class="line">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;bio != null&quot;</span>&gt;</span></span><br><span class="line">          bio=#&#123;bio&#125;</span><br><span class="line">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">  where id=#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="where"><span class="post-title-index">5.5. </span><a href="#where" class="headerlink" title="where"></a><code>where</code></h3><blockquote><p>可以用在所有的查询条件都是动态的情况</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findActiveBlogLike&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Blog&quot;</span>&gt;</span></span><br><span class="line">    SELECT * FROM BLOG</span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;state != null&quot;</span>&gt;</span></span><br><span class="line">           state = #&#123;state&#125;</span><br><span class="line">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;title != null&quot;</span>&gt;</span></span><br><span class="line">          AND title like #&#123;title&#125;</span><br><span class="line">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;author != null and author.name != null&quot;</span>&gt;</span></span><br><span class="line">          AND author_name like #&#123;author.name&#125;</span><br><span class="line">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="bind"><span class="post-title-index">5.6. </span><a href="#bind" class="headerlink" title="bind"></a><code>bind</code></h3><blockquote><p>用于将表达式绑定为一个变量，以便在后续的 <code>SQL</code> 语句中使用。</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;param.filter != null and param.filter!=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bind</span> <span class="attr">name</span>=<span class="string">&quot;filterLike&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&#x27;%&#x27; + param.filter + &#x27;%&#x27;&quot;</span>/&gt;</span></span><br><span class="line">    and ( name like #&#123;filterLike,jdbcType=VARCHAR&#125; )</span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="Mybatis-缓存"><span class="post-title-index">6. </span><a href="#Mybatis-缓存" class="headerlink" title="Mybatis 缓存"></a><code>Mybatis</code> 缓存</h2><blockquote><p><code>Mybatis</code> 缓存一般分为两种：</p><p>一级缓存：线程级别的缓存，是本地缓存，<code>sqlSession</code> 级别的缓存</p><p>二级缓存：全局范围的缓存，不止局限于当前会话</p></blockquote><p><code>MyBatis</code> 的二级缓存在某些场景下可以提高系统性能，但在大多数情况下不推荐使用，<strong>可能导致数据不一致性、内存占用过高、缓存同步问题和对复杂查询结果的管理困难</strong>。 </p><h3 id="一级缓存"><span class="post-title-index">6.1. </span><a href="#一级缓存" class="headerlink" title="一级缓存"></a>一级缓存</h3><blockquote><p>基于 <code>PerpetualCach</code>e 的 <code>HashMap</code> 本地缓存，其存储作用域为 <code>SqlSession</code>，各个 <code>SqlSession</code> 之间的缓存相互隔离，当 Session flush 或 close 之后，该 <code>SqlSession</code> 中的所有 Cache 就将清空，<code>MyBatis</code> 默认打开一级缓存。</p></blockquote><ul><li>图解</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308232154508.png" alt="image-20230823215447415"></p><ul><li>使用</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">cache</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">try</span> (<span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> sqlSessionFactory.openSession()) &#123;</span><br><span class="line">        <span class="type">EmployeeMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> session.getMapper(EmployeeMapper.class);</span><br><span class="line">        List&lt;Employee&gt; employees = mapper.listByEmployee();</span><br><span class="line">        employees.forEach(System.out::println);</span><br><span class="line">        System.out.println(<span class="string">&quot; ------------ 默认开启一级缓存 ------------ &quot;</span>);</span><br><span class="line">        <span class="comment">// 使用映射器命名空间执行查询操作</span></span><br><span class="line">        List&lt;Employee&gt; employeeList = session.selectList(<span class="string">&quot;com.wickson.mapper.EmployeeMapper.listByEmployee&quot;</span>);</span><br><span class="line">        employeeList.forEach(System.out::println);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>结果（连续调用两次，但只执行了一次 <code>SQL</code> ）</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">22:06:38.651 [main] DEBUG com.wickson.mapper.EmployeeMapper.listByEmployee - ==&gt;  Preparing: SELECT * FROM emp </span><br><span class="line">22:06:38.668 [main] DEBUG com.wickson.mapper.EmployeeMapper.listByEmployee - ==&gt; Parameters: </span><br><span class="line">22:06:38.677 [main] DEBUG com.wickson.mapper.EmployeeMapper.listByEmployee - &lt;==      Total: 3</span><br><span class="line">Employee&#123;id=1, username=&#x27;Tom&#x27;&#125;</span><br><span class="line">Employee&#123;id=2, username=&#x27;Jack&#x27;&#125;</span><br><span class="line">Employee&#123;id=3, username=&#x27;Tony&#x27;&#125;</span><br><span class="line"> ------------ 默认开启一级缓存 ------------ </span><br><span class="line">Employee&#123;id=1, username=&#x27;Tom&#x27;&#125;</span><br><span class="line">Employee&#123;id=2, username=&#x27;Jack&#x27;&#125;</span><br><span class="line">Employee&#123;id=3, username=&#x27;Tony&#x27;&#125;</span><br></pre></td></tr></table></figure><p><strong>失效情况</strong></p><ol><li>不同的 <code>SqlSession</code> 会使一级缓存失效。</li><li>同一个 <code>SqlSession</code>，但是查询语句不一样。</li><li>同一个 <code>SqlSession</code>，查询语句一样，期间执行增删改操作。</li><li>同一个 <code>SqlSession</code>，查询语句一样，执行手动清除缓存。</li></ol><h3 id="二级缓存"><span class="post-title-index">6.2. </span><a href="#二级缓存" class="headerlink" title="二级缓存"></a>二级缓存</h3><blockquote><p>二级缓存与一级缓存其机制相同，默认也是采用 <code>PerpetualCache</code>，<code>HashMap</code> 存储，不同之处在于其存储作用域为 <code>Mapper(Namespace)</code>，可以在多个<code>SqlSession</code> 之间共享，并且可自定义存储源，如 <code>Ehcache</code>。默认不打开二级缓存，要开启二级缓存，使用二级缓存属性类需要实现 <code>Serializable</code> 序列化接口(可用来保存对象的状态),可在它的映射文件中配置。</p></blockquote><ul><li>图解（缓存查询的顺序是先查询二级缓存再查询一级缓存）</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308232220949.png" alt="Mybatis二级缓存示意图"></p><ul><li><p>使用</p><ul><li>在全局配置（<code>mybatis-config.xml</code>）文件开启 二级缓存</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 开启全局配置文件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Mybatis 二级缓存 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;cacheEnabled&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>需要在使用二级缓存的映射文件出使用标签标注</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">cache</span>/&gt;</span></span><br></pre></td></tr></table></figure><ul><li>实体类必须要实现 <code>Serializable</code> 接口</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Employee</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span>  &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 省略 setter/getter</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>测试</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EmployeeMapperTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    SqlSessionFactory sqlSessionFactory;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">// 从 XML 中构建 SqlSessionFactory</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">resource</span> <span class="operator">=</span> <span class="string">&quot;mybatis-config.xml&quot;</span>;</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            inputStream = Resources.getResourceAsStream(resource);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        sqlSessionFactory = <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(inputStream);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">cache</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> (<span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> sqlSessionFactory.openSession()) &#123;</span><br><span class="line">            <span class="type">EmployeeMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> session.getMapper(EmployeeMapper.class);</span><br><span class="line">            List&lt;Employee&gt; employees = mapper.listByEmployee();</span><br><span class="line">            employees.forEach(System.out::println);</span><br><span class="line">            System.out.println(<span class="string">&quot; ------------ 开启二级缓存 ------------ &quot;</span>);</span><br><span class="line">            <span class="comment">// 使用映射器命名空间执行查询操作</span></span><br><span class="line">            List&lt;Employee&gt; employeeList = session.selectList(<span class="string">&quot;com.wickson.mapper.EmployeeMapper.listByEmployee&quot;</span>);</span><br><span class="line">            employeeList.forEach(System.out::println);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@After</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">listByEmployee</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 使用 JDK8 新特性 自动关流</span></span><br><span class="line">        <span class="keyword">try</span> (<span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> sqlSessionFactory.openSession()) &#123;</span><br><span class="line">            <span class="comment">// 使用映射器命名空间执行查询操作</span></span><br><span class="line">            List&lt;Employee&gt; employees = session.selectList(<span class="string">&quot;com.wickson.mapper.EmployeeMapper.listByEmployee&quot;</span>);</span><br><span class="line">            employees.forEach(System.out::println);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">22:29:12.611 [main] DEBUG com.wickson.mapper.EmployeeMapper.listByEmployee - ==&gt;  Preparing: SELECT * FROM emp </span><br><span class="line">22:29:12.626 [main] DEBUG com.wickson.mapper.EmployeeMapper.listByEmployee - ==&gt; Parameters: </span><br><span class="line">22:29:12.635 [main] DEBUG com.wickson.mapper.EmployeeMapper.listByEmployee - &lt;==      Total: 3</span><br><span class="line">Employee&#123;id=1, username=&#x27;Tom&#x27;&#125;</span><br><span class="line">Employee&#123;id=2, username=&#x27;Jack&#x27;&#125;</span><br><span class="line">Employee&#123;id=3, username=&#x27;Tony&#x27;&#125;</span><br><span class="line"> ------------ 开启二级缓存 ------------ </span><br><span class="line">22:29:12.635 [main] DEBUG com.wickson.mapper.EmployeeMapper - Cache Hit Ratio [com.wickson.mapper.EmployeeMapper]: 0.0</span><br><span class="line">Employee&#123;id=1, username=&#x27;Tom&#x27;&#125;</span><br><span class="line">Employee&#123;id=2, username=&#x27;Jack&#x27;&#125;</span><br><span class="line">Employee&#123;id=3, username=&#x27;Tony&#x27;&#125;</span><br><span class="line">22:29:12.642 [main] DEBUG com.wickson.mapper.EmployeeMapper - Cache Hit Ratio [com.wickson.mapper.EmployeeMapper]: 0.3333333333333333</span><br><span class="line">Employee&#123;id=1, username=&#x27;Tom&#x27;&#125;</span><br><span class="line">Employee&#123;id=2, username=&#x27;Jack&#x27;&#125;</span><br><span class="line">Employee&#123;id=3, username=&#x27;Tony&#x27;&#125;</span><br></pre></td></tr></table></figure></li></ul><p><strong>失效</strong></p><ol><li><p>同一个命名空间进行了增删改的操作，会导致二级缓存失效，但是如果不想失效：可以将 <code>SQL</code> 的 <code>flushCache</code> 这是为 <code>false</code> ,但是要慎重设置，因为会造成数据脏读问题，除非你能保证查询的数据永远不会执行增删改</p></li><li><p>让查询不缓存数据到二级缓存中 <code>useCache=&quot;false&quot;</code></p></li><li><p>如果希望其他 <code>mapper</code> 映射文件的命名空间执行了增删改清空另外的命名空间就可以设置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">cache-ref</span> <span class="attr">namespace</span>=<span class="string">&quot;com.wickson.mapper.DeptMapper&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 开源框架 </category>
          
          <category> Mybatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue-综合案例（八）</title>
      <link href="/posts/6853cb04.html"/>
      <url>/posts/6853cb04.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><span class="post-title-index">1. </span><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>我们本章节的内容主要是基于开源框架 <a href="http://www.ruoyi.vip/">Ruoyi-Vue</a> 进行的改造，改造的模块为<strong>字典管理</strong>。</p><p>本章节的内容会把 前面八篇文章的所有知识点全部融合进来，如下代码可能会存在一些冗余。但是可以将所学的只是串起来</p></blockquote><h2 id="准备工作"><span class="post-title-index">2. </span><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><blockquote><p>项目地址：<a href="https://gitee.com/y_project/RuoYi-Vue">https://gitee.com/y_project/RuoYi-Vue</a></p><p>部署文档：<a href="http://doc.ruoyi.vip/ruoyi-vue/document/hjbs.html#%E9%83%A8%E7%BD%B2%E7%B3%BB%E7%BB%9F">http://doc.ruoyi.vip/ruoyi-vue/document/hjbs.html#%E9%83%A8%E7%BD%B2%E7%B3%BB%E7%BB%9F</a></p><p>项目代码：<a href="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308142321915.zip">https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308142321915.zip</a></p></blockquote><h2 id="改造目标"><span class="post-title-index">3. </span><a href="#改造目标" class="headerlink" title="改造目标"></a>改造目标</h2><blockquote><p>主要改造的是前端页面信息</p></blockquote><ul><li>界面信息</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308141357288.png" alt="image-20230814135701182"></p><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308141357454.png" alt="image-20230814135727420"></p><h3 id="老项目结构"><span class="post-title-index">3.1. </span><a href="#老项目结构" class="headerlink" title="老项目结构"></a>老项目结构</h3><ul><li><p>项目结构</p><blockquote><p>两个界面都是通过一个 <code>Vue</code> 页面就解决了，但这只是针对简单的页面信息可以这样构建。</p><p>但这样也带了如下坏处</p><ul><li><strong>可读性差：</strong> 一个页面包含大量的代码，包括多个不同的功能点，使得代码量巨大。这会导致代码的可读性变差，阅读和理解代码会变得困难。</li><li><strong>维护困难：</strong> 当一个组件包含太多的功能时，任何更改都可能影响到其他部分的功能，增加了维护的复杂性。如果有多人合作开发，更难协调工作。</li><li><strong>复用性差：</strong> 功能点紧密耦合在一个组件中，难以将某个功能独立出来，进行重复使用。</li><li><strong>测试困难：</strong> 难以进行有效的单元测试，因为需要同时考虑多个不同的功能点，增加了测试的复杂性。</li><li><strong>性能下降：</strong> 当页面中包含过多的功能点和状态时，可能会影响页面的性能，导致加载速度变慢，渲染变得缓慢。</li><li><strong>可维护性下降：</strong> 当代码组织不好时，新成员很难快速理解代码结构和逻辑，降低了项目的可维护性。</li><li><strong>逻辑混乱：</strong> 当很多功能混合在一个页面中时，不同功能的逻辑可能会相互干扰，导致代码混乱和错误。</li></ul></blockquote></li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308141359207.png" alt="image-20230814135932180" style="float:left"></p><h3 id="新项目结构"><span class="post-title-index">3.2. </span><a href="#新项目结构" class="headerlink" title="新项目结构"></a>新项目结构</h3><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308142318373.png" alt="image-20230814231850355" style="float:left"></p><h2 id="具体实现"><span class="post-title-index">4. </span><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h2><blockquote><p>我们将一个表单拆分为四大块</p><ul><li>高级查询</li><li>监听按钮</li><li>表单数据</li><li>新增编辑</li></ul></blockquote><h3 id="高级查询"><span class="post-title-index">4.1. </span><a href="#高级查询" class="headerlink" title="高级查询"></a>高级查询</h3><ul><li><code>dictQuery.vue</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-form</span> <span class="attr">:model</span>=<span class="string">&quot;queryParams&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;queryForm&quot;</span> <span class="attr">size</span>=<span class="string">&quot;small&quot;</span> <span class="attr">v-show</span>=<span class="string">&quot;showSearch&quot;</span> <span class="attr">label-width</span>=<span class="string">&quot;68px&quot;</span> <span class="attr">:inline</span>=<span class="string">&quot;true&quot;</span> &gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;字典名称&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;dictName&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span></span></span><br><span class="line"><span class="tag">          <span class="attr">v-model</span>=<span class="string">&quot;queryParams.dictName&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">placeholder</span>=<span class="string">&quot;请输入字典名称&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">clearable</span></span></span><br><span class="line"><span class="tag">          <span class="attr">style</span>=<span class="string">&quot;width: 240px&quot;</span></span></span><br><span class="line"><span class="tag">          @<span class="attr">keyup.enter.native</span>=<span class="string">&quot;handleQuery&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;字典类型&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;dictType&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span></span></span><br><span class="line"><span class="tag">          <span class="attr">v-model</span>=<span class="string">&quot;queryParams.dictType&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">placeholder</span>=<span class="string">&quot;请输入字典类型&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">clearable</span></span></span><br><span class="line"><span class="tag">          <span class="attr">style</span>=<span class="string">&quot;width: 240px&quot;</span></span></span><br><span class="line"><span class="tag">          @<span class="attr">keyup.enter.native</span>=<span class="string">&quot;handleQuery&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;状态&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;status&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-select</span> <span class="attr">v-model</span>=<span class="string">&quot;queryParams.status&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;字典状态&quot;</span> <span class="attr">clearable</span> <span class="attr">style</span>=<span class="string">&quot;width: 240px&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-option</span> <span class="attr">v-for</span>=<span class="string">&quot;dict in dict.type.sys_normal_disable&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">:key</span>=<span class="string">&quot;dict.value&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">:label</span>=<span class="string">&quot;dict.label&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">:value</span>=<span class="string">&quot;dict.value&quot;</span></span></span><br><span class="line"><span class="tag">          /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;创建时间&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-date-picker</span></span></span><br><span class="line"><span class="tag">          <span class="attr">v-model</span>=<span class="string">&quot;dateRange&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">style</span>=<span class="string">&quot;width: 240px&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">value-format</span>=<span class="string">&quot;yyyy-MM-dd&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">type</span>=<span class="string">&quot;daterange&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">range-separator</span>=<span class="string">&quot;-&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">start-placeholder</span>=<span class="string">&quot;开始日期&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">end-placeholder</span>=<span class="string">&quot;结束日期&quot;</span></span></span><br><span class="line"><span class="tag">        &gt;</span><span class="tag">&lt;/<span class="name">el-date-picker</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-search&quot;</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;handleQuery&quot;</span>&gt;</span>搜索<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-refresh&quot;</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;resetQuery&quot;</span>&gt;</span>重置<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; <span class="title class_">EventBus</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@/utils/eventBus&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">name</span>: <span class="string">&#x27;dictQuery&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">dicts</span>: [<span class="string">&#x27;sys_normal_disable&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">queryParams</span>: &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 日期范围</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">dateRange</span>: [],</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">showSearch</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">created</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">EventBus</span>.$on(<span class="string">&#x27;dictToolbarSearch&#x27;</span>, <span class="function"><span class="params">obj</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">showSearch</span> = obj.<span class="property">showSearch</span></span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  methods : &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">/**</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     * 搜索按钮</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     */</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">handleQuery</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">let</span> queryForm = &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">queryParams</span>: <span class="variable language_">this</span>.<span class="property">queryParams</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">dateRange</span>: <span class="variable language_">this</span>.<span class="property">dateRange</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.$emit(<span class="string">&#x27;onQuery&#x27;</span>, queryForm)</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">/**</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     * 重置按钮</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     */</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">resetQuery</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">queryParams</span> = &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">dateRange</span> = []</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="监听按钮"><span class="post-title-index">4.2. </span><a href="#监听按钮" class="headerlink" title="监听按钮"></a>监听按钮</h3><ul><li><code>dictToolbar.vue</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-row</span> <span class="attr">:gutter</span>=<span class="string">&quot;10&quot;</span> <span class="attr">class</span>=<span class="string">&quot;mb8&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;1.5&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">plain</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-plus&quot;</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;handleAdd&quot;</span> <span class="attr">v-hasPermi</span>=<span class="string">&quot;[&#x27;system:dict:add&#x27;]&quot;</span>&gt;</span>新增<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;1.5&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span> <span class="attr">plain</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-edit&quot;</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> <span class="attr">:disabled</span>=<span class="string">&quot;single&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;handleUpdate&quot;</span> <span class="attr">v-hasPermi</span>=<span class="string">&quot;[&#x27;system:dict:edit&#x27;]&quot;</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;1.5&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span> <span class="attr">plain</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-delete&quot;</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> <span class="attr">:disabled</span>=<span class="string">&quot;multiple&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;handleDelete&quot;</span> <span class="attr">v-hasPermi</span>=<span class="string">&quot;[&#x27;system:dict:remove&#x27;]&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;1.5&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;warning&quot;</span> <span class="attr">plain</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-download&quot;</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;handleExport&quot;</span> <span class="attr">v-hasPermi</span>=<span class="string">&quot;[&#x27;system:dict:export&#x27;]&quot;</span>&gt;</span>导出<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;1.5&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span> <span class="attr">plain</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-refresh&quot;</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;handleRefreshCache&quot;</span> <span class="attr">v-hasPermi</span>=<span class="string">&quot;[&#x27;system:dict:remove&#x27;]&quot;</span>&gt;</span>刷新缓存<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; <span class="title class_">EventBus</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@/utils/eventBus&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; getType, delType, refreshCache &#125; <span class="keyword">from</span> <span class="string">&quot;@/api/system/dict/type&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">name</span>: <span class="string">&#x27;dictToolbar&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">props</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 选中数组</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">ids</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">type</span>: <span class="title class_">Array</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">require</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 非单个禁用</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">single</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">type</span>: <span class="title class_">Boolean</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">require</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 非多个禁用</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">multiple</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">type</span>: <span class="title class_">Boolean</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">require</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 表单参数</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">queryParams</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">type</span>: <span class="title class_">Object</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 显示搜索条件</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">showSearch</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  methods : &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">/** </span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     * 新增按钮操作 </span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     */</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">handleAdd</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;handleAdd()&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">      <span class="title class_">EventBus</span>.$emit(<span class="string">&#x27;dictToolbarObj&#x27;</span>, &#123;<span class="attr">open</span>: <span class="literal">true</span>, <span class="attr">form</span>: &#123;&#125;, <span class="attr">title</span>: <span class="string">&quot;新增字典类型&quot;</span>&#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">/** </span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     * 修改按钮操作 </span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     */</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">handleUpdate</span>(<span class="params">row</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> dictId = row.<span class="property">dictId</span> || <span class="variable language_">this</span>.<span class="property">ids</span></span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">getType</span>(dictId).<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span>(response.<span class="property">data</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="title class_">EventBus</span>.$emit(<span class="string">&#x27;dictToolbarObj&#x27;</span>, &#123;<span class="attr">open</span>: <span class="literal">true</span>, form : response.<span class="property">data</span>, title : <span class="string">&quot;修改字典类型&quot;</span>&#125;);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">/** </span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     * 删除按钮操作 </span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     */</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">handleDelete</span>(<span class="params">row</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> dictIds = row.<span class="property">dictId</span> || <span class="variable language_">this</span>.<span class="property">ids</span>;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">$modal</span>.<span class="title function_">confirm</span>(<span class="string">&#x27;是否确认删除字典编号为&quot;&#x27;</span> + dictIds + <span class="string">&#x27;&quot;的数据项？&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123; <span class="keyword">return</span> <span class="title function_">delType</span>(dictIds); &#125;)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.$emit(<span class="string">&quot;onFlush&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">$modal</span>.<span class="title function_">msgSuccess</span>(<span class="string">&quot;删除成功&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;&#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">/** </span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     * 导出按钮操作 </span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     */</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">handleExport</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="title function_">download</span>(<span class="string">&#x27;system/dict/type/export&#x27;</span>, &#123;</span></span><br><span class="line"><span class="language-javascript">        ...<span class="variable language_">this</span>.<span class="property">queryParams</span></span></span><br><span class="line"><span class="language-javascript">      &#125;, <span class="string">`type_<span class="subst">$&#123;<span class="keyword">new</span> <span class="built_in">Date</span>().getTime()&#125;</span>.xlsx`</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">/** </span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     * 刷新缓存按钮操作 </span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     */</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">handleRefreshCache</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">refreshCache</span>().<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">$modal</span>.<span class="title function_">msgSuccess</span>(<span class="string">&quot;刷新成功&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="title function_">dispatch</span>(<span class="string">&#x27;dict/cleanDict&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">      &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="表单数据"><span class="post-title-index">4.3. </span><a href="#表单数据" class="headerlink" title="表单数据"></a>表单数据</h3><ul><li><code>dictPage.vue</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 字典管理-列表 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;app-container&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 高级搜索 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dict-query</span> @<span class="attr">onQuery</span>=<span class="string">&quot;onQuery&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">dict-query</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 监听按钮数据 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dict-toolbar</span> <span class="attr">ref</span>=<span class="string">&quot;editOrDelete&quot;</span> </span></span><br><span class="line"><span class="tag">                  @<span class="attr">onFlush</span>=<span class="string">&quot;onFlush&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">:single</span>=<span class="string">&quot;this.single&quot;</span> </span></span><br><span class="line"><span class="tag">                  <span class="attr">:multiple</span>=<span class="string">&quot;this.multiple&quot;</span> </span></span><br><span class="line"><span class="tag">                  <span class="attr">:ids</span>=<span class="string">&quot;this.ids&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">:queryParams</span>=<span class="string">&quot;this.queryParams&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dict-toolbar</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 列表信息-start --&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">el-table</span> <span class="attr">v-loading</span>=<span class="string">&quot;loading&quot;</span> <span class="attr">:data</span>=<span class="string">&quot;typeList&quot;</span> @<span class="attr">selection-change</span>=<span class="string">&quot;handleSelectionChange&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">type</span>=<span class="string">&quot;selection&quot;</span> <span class="attr">width</span>=<span class="string">&quot;55&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;字典编号&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;dictId&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;字典名称&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;dictName&quot;</span> <span class="attr">:show-overflow-tooltip</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;字典类型&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">:show-overflow-tooltip</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span> <span class="attr">slot-scope</span>=<span class="string">&quot;scope&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">:to</span>=<span class="string">&quot;&#x27;/system/dict-data/index/&#x27; + scope.row.dictId&quot;</span> <span class="attr">class</span>=<span class="string">&quot;link-type&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; scope.row.dictType &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;状态&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;status&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span> <span class="attr">slot-scope</span>=<span class="string">&quot;scope&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">dict-tag</span> <span class="attr">:options</span>=<span class="string">&quot;dict.type.sys_normal_disable&quot;</span> <span class="attr">:value</span>=<span class="string">&quot;scope.row.status&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;备注&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;remark&quot;</span> <span class="attr">:show-overflow-tooltip</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;创建时间&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;createTime&quot;</span> <span class="attr">width</span>=<span class="string">&quot;180&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span> <span class="attr">slot-scope</span>=<span class="string">&quot;scope&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; parseTime(scope.row.createTime) &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;操作&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">class-name</span>=<span class="string">&quot;small-padding fixed-width&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span> <span class="attr">slot-scope</span>=<span class="string">&quot;scope&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">icon</span>=<span class="string">&quot;el-icon-edit&quot;</span></span></span><br><span class="line"><span class="tag">            @<span class="attr">click</span>=<span class="string">&quot;handleUpdate(scope.row)&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">v-hasPermi</span>=<span class="string">&quot;[&#x27;system:dict:edit&#x27;]&quot;</span></span></span><br><span class="line"><span class="tag">          &gt;</span>修改<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">icon</span>=<span class="string">&quot;el-icon-delete&quot;</span></span></span><br><span class="line"><span class="tag">            @<span class="attr">click</span>=<span class="string">&quot;handleDelete(scope.row)&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">v-hasPermi</span>=<span class="string">&quot;[&#x27;system:dict:remove&#x27;]&quot;</span></span></span><br><span class="line"><span class="tag">          &gt;</span>删除<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 分页条 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pagination</span></span></span><br><span class="line"><span class="tag">      <span class="attr">v-show</span>=<span class="string">&quot;total&gt;0&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:total</span>=<span class="string">&quot;total&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:page.sync</span>=<span class="string">&quot;queryParams.pageNum&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:limit.sync</span>=<span class="string">&quot;queryParams.pageSize&quot;</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">pagination</span>=<span class="string">&quot;getList&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 列表信息-end   --&gt;</span> </span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--字段新增编辑--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dict-add-edit</span> <span class="attr">ref</span>=<span class="string">&quot;addEditCard&quot;</span> @<span class="attr">onSuccess</span>=<span class="string">&quot;onSuccess&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">dict-add-edit</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> dictQuery <span class="keyword">from</span> <span class="string">&quot;./dictQuery.vue&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> dictToolbar <span class="keyword">from</span> <span class="string">&quot;./dictToolbar.vue&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; listType &#125; <span class="keyword">from</span> <span class="string">&quot;@/api/system/dict/type&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> <span class="title class_">DictAddEdit</span> <span class="keyword">from</span> <span class="string">&quot;./dictAddEdit.vue&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">name</span>: <span class="string">&quot;dictPage&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">components</span>: &#123; dictQuery, dictToolbar, <span class="title class_">DictAddEdit</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">dicts</span>: [<span class="string">&quot;sys_normal_disable&quot;</span>],</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 遮罩层</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">loading</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 选中数组</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">ids</span>: [],</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 非单个禁用</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">single</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 非多个禁用</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">multiple</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 字典表格数据</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">typeList</span>: [],</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 表单参数</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">queryParams</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">pageNum</span>: <span class="number">1</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">pageSize</span>: <span class="number">10</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">dictName</span>: <span class="literal">undefined</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">dictType</span>: <span class="literal">undefined</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">status</span>: <span class="literal">undefined</span>,</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 时间数据范围</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">dateRange</span>: [],</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">//</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">queryForm</span>: &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 总条数</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">total</span>: <span class="number">0</span>,</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">/**</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">   * 当所有节点初始化之后调用接口</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">   */</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="title function_">getList</span>();</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">/**</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     * 修改按钮操作</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     */</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">handleUpdate</span>(<span class="params">row</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">$refs</span>[<span class="string">&quot;editOrDelete&quot;</span>].<span class="title function_">handleUpdate</span>(row);</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">/**</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     * 删除按钮操作</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     */</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">handleDelete</span>(<span class="params">row</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">$refs</span>[<span class="string">&quot;editOrDelete&quot;</span>].<span class="title function_">handleDelete</span>(row);</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">/** </span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     * 查询字典类型列表 </span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     */</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">getList</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">loading</span> = <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">listType</span>(<span class="variable language_">this</span>.<span class="title function_">addDateRange</span>(<span class="variable language_">this</span>.<span class="property">queryParams</span>, <span class="variable language_">this</span>.<span class="property">dateRange</span>)).<span class="title function_">then</span>(</span></span><br><span class="line"><span class="language-javascript">        <span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">typeList</span> = response.<span class="property">rows</span>;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">total</span> = response.<span class="property">total</span>;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">loading</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      );</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">/**</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     * 搜索按钮</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     */</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">onQuery</span>(<span class="params">queryForm = &#123;&#125;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">queryParams</span> = queryForm.<span class="property">queryParams</span>;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">dateRange</span> = queryForm.<span class="property">dateRange</span>;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="title function_">getList</span>();</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 多选框选中数据</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">handleSelectionChange</span>(<span class="params">selection</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">ids</span> = selection.<span class="title function_">map</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> item.<span class="property">dictId</span>);</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">single</span> = selection.<span class="property">length</span> != <span class="number">1</span>;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">multiple</span> = !selection.<span class="property">length</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">/**</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     * 刷新页面</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     */</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">onFlush</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="title function_">getList</span>();</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">/**</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     * 新增成功之后调用父组件</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     */</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">onSuccess</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="title function_">getList</span>();</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="新增页面"><span class="post-title-index">4.4. </span><a href="#新增页面" class="headerlink" title="新增页面"></a>新增页面</h3><ul><li><code>dictAddEdit.vue</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-dialog</span> <span class="attr">:title</span>=<span class="string">&quot;title&quot;</span> <span class="attr">:visible.sync</span>=<span class="string">&quot;open&quot;</span> <span class="attr">width</span>=<span class="string">&quot;500px&quot;</span> <span class="attr">append-to-body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-form</span> <span class="attr">ref</span>=<span class="string">&quot;form&quot;</span> <span class="attr">:model</span>=<span class="string">&quot;form&quot;</span> <span class="attr">:rules</span>=<span class="string">&quot;rules&quot;</span> <span class="attr">label-width</span>=<span class="string">&quot;80px&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;字典名称&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;dictName&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;form.dictName&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入字典名称&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;字典类型&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;dictType&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;form.dictType&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入字典类型&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;状态&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;status&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-radio-group</span> <span class="attr">v-model</span>=<span class="string">&quot;form.status&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-radio</span></span></span><br><span class="line"><span class="tag">            <span class="attr">v-for</span>=<span class="string">&quot;dict in dict.type.sys_normal_disable&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">:key</span>=<span class="string">&quot;dict.value&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">:label</span>=<span class="string">&quot;dict.value&quot;</span></span></span><br><span class="line"><span class="tag">          &gt;</span>&#123;&#123;dict.label&#125;&#125;<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-radio-group</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;备注&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;remark&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;form.remark&quot;</span> <span class="attr">type</span>=<span class="string">&quot;textarea&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入内容&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">slot</span>=<span class="string">&quot;footer&quot;</span> <span class="attr">class</span>=<span class="string">&quot;dialog-footer&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;submitForm&quot;</span>&gt;</span>确 定<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;cancel&quot;</span>&gt;</span>取 消<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-dialog</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; <span class="title class_">EventBus</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@/utils/eventBus&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; updateType, addType &#125; <span class="keyword">from</span> <span class="string">&quot;@/api/system/dict/type&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">name</span>: <span class="string">&#x27;dictAddEdit&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">dicts</span>: [<span class="string">&#x27;sys_normal_disable&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      title : <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 是否显示弹出层</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">open</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 表单参数</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">form</span>: &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 表单校验</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">rules</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">dictName</span>: [</span></span><br><span class="line"><span class="language-javascript">          &#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&quot;字典名称不能为空&quot;</span>, <span class="attr">trigger</span>: <span class="string">&quot;blur&quot;</span> &#125;</span></span><br><span class="line"><span class="language-javascript">        ],</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">dictType</span>: [</span></span><br><span class="line"><span class="language-javascript">          &#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&quot;字典类型不能为空&quot;</span>, <span class="attr">trigger</span>: <span class="string">&quot;blur&quot;</span> &#125;</span></span><br><span class="line"><span class="language-javascript">        ]</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">created</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">EventBus</span>.$on(<span class="string">&#x27;dictToolbarObj&#x27;</span>, <span class="function"><span class="params">obj</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">open</span> = obj.<span class="property">open</span>;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">form</span> = obj.<span class="property">form</span>;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">title</span> = obj.<span class="property">title</span></span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  methods : &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">/**</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     * 提交表单</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     */</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">submitForm</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">form</span>.<span class="title function_">validate</span>(<span class="function"><span class="params">valid</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (valid) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">form</span>.<span class="property">dictId</span> != <span class="literal">undefined</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">updateType</span>(<span class="variable language_">this</span>.<span class="property">form</span>).<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="variable language_">this</span>.<span class="property">$modal</span>.<span class="title function_">msgSuccess</span>(<span class="string">&quot;修改成功&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">              <span class="variable language_">this</span>.<span class="property">open</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">              <span class="variable language_">this</span>.$emit(<span class="string">&#x27;onSuccess&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">            &#125;);</span></span><br><span class="line"><span class="language-javascript">          &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">addType</span>(<span class="variable language_">this</span>.<span class="property">form</span>).<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="variable language_">this</span>.<span class="property">$modal</span>.<span class="title function_">msgSuccess</span>(<span class="string">&quot;新增成功&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">              <span class="variable language_">this</span>.<span class="property">open</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">              <span class="variable language_">this</span>.<span class="title function_">getList</span>();</span></span><br><span class="line"><span class="language-javascript">            &#125;);</span></span><br><span class="line"><span class="language-javascript">          &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">/**</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     * 取消表单</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     */</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">cancel</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">form</span>.<span class="title function_">clearValidate</span>()</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">open</span> = <span class="literal">false</span></span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">form</span> = &#123;&#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端框架 </category>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue-组件开发（七）</title>
      <link href="/posts/6d55525.html"/>
      <url>/posts/6d55525.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><span class="post-title-index">1. </span><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>具体细节参考 <a href="https://cn.vuejs.org/guide/introduction.html"><code>Vue</code> 官方文档</a> ，本章节会详细讲解到 <code>Vue</code> 组件开发。</p><p>本章节的案例会涉及到前两章的内容 </p><ul><li><a href="https://wickson.top/posts/7f538b33.html">Vue-脚手架（五）</a></li><li><a href="https://wickson.top/posts/26ad9f96.html">Vue-项目依赖（六）</a></li></ul></blockquote><p>具体内容如下</p><ul><li>组件注册</li><li>组件通信</li><li>插槽</li></ul><hr><h2 id="什么是组件❔"><span class="post-title-index">2. </span><a href="#什么是组件❔" class="headerlink" title="什么是组件❔"></a>什么是组件❔</h2><blockquote><p>组件：在程序中组件就是对数据和方法的简单封装。</p><p><strong><code>Vue</code> 组件</strong>：这是 <code>Vue</code> 的亮点之一，<strong>组件</strong> 允许我们将 <code>UI</code> 划分为独立的、可重用的部分，并且可以对每个部分进行单独的思考。</p><p>例子：例如一个表单包含如下内容（搜索栏、列表页、分页条、新增|编辑页、详情页），那我们就可以通过组件化的思想将这些模块封装成一个个组件。</p></blockquote><ul><li>官网组件图解</li></ul><p><img src="https://www.runoob.com/wp-content/uploads/2017/01/components.png" alt="img" style="float:left;"></p><hr><h2 id="组件注册"><span class="post-title-index">3. </span><a href="#组件注册" class="headerlink" title="组件注册"></a>组件注册</h2><blockquote><p>在 <code>Vue</code> 中，如果我们需要某些地方使用到组件，那么就必须要进行注释。</p><p>我将会通过两种方式进行组件注册：</p><ul><li>全局注册</li><li>局部注册</li></ul></blockquote><h3 id="全局注册"><span class="post-title-index">3.1. </span><a href="#全局注册" class="headerlink" title="全局注册"></a>全局注册</h3><blockquote><p><strong>全局注册</strong>：在应用的任何地方都可以使用的组件称为全局组件。</p></blockquote><ul><li>语法</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># tagName 为组件名，options 为配置选项</span><br><span class="line">Vue.component(tagName, options)</span><br></pre></td></tr></table></figure><p>假设，我们需要在全局注册。那我们我们在 <code>main.js</code> 进行注册组件即可</p><ul><li><code>main.js</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span>;</span><br><span class="line"># <span class="title class_">MyComponent</span>被全局注册为my-component，这意味着你可以在应用中的任何地方使用&lt;my-component&gt;&lt;/my-component&gt;标签。</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">MyComponent</span> <span class="keyword">from</span> <span class="string">&#x27;./components/MyComponent.vue&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&#x27;my-component&#x27;</span>, <span class="title class_">MyComponent</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">  <span class="attr">render</span>: <span class="function"><span class="params">h</span> =&gt;</span> <span class="title function_">h</span>(<span class="title class_">App</span>) <span class="comment">// 使用 render 函数渲染 App 组件，并将其挂载到 id 为 &#x27;app&#x27; 的元素上</span></span><br><span class="line">&#125;).$mount(<span class="string">&#x27;#app&#x27;</span>); <span class="comment">// 手动挂载 Vue 实例到 id 为 &#x27;app&#x27; 的元素上</span></span><br></pre></td></tr></table></figure><h3 id="局部注册"><span class="post-title-index">3.2. </span><a href="#局部注册" class="headerlink" title="局部注册"></a>局部注册</h3><blockquote><p>局部注册：将组件限制在一个特定的 <code>Vue</code> 实例或另一个组件的作用域内。</p></blockquote><p>假设，我们需要在<strong>局部注册</strong>。那我们我们在 局部组件 引入组件即可。</p><ul><li><code>component</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- ParentComponent.vue --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">my-component</span>&gt;</span><span class="tag">&lt;/<span class="name">my-component</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> <span class="title class_">MyComponent</span> <span class="keyword">from</span> <span class="string">&#x27;./MyComponent.vue&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">components</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="string">&#x27;my-component&#x27;</span>: <span class="title class_">MyComponent</span></span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="组件通信"><span class="post-title-index">4. </span><a href="#组件通信" class="headerlink" title="组件通信"></a>组件通信</h2><blockquote><p><strong>组件通信</strong>：这个模块是非常非常重要的，<code>Vue</code> 的特色组件化。既然涉及到组件化了，那么就一定会涉及到组件之间的通信。</p></blockquote><p>我们会通过如下内容来讲解组件通信</p><ul><li><strong>父子组件通信（props、$emit）</strong></li><li><strong>父组件访问子组件（$refs）</strong></li></ul><h3 id="父子组件通信"><span class="post-title-index">4.1. </span><a href="#父子组件通信" class="headerlink" title="父子组件通信"></a>父子组件通信</h3><blockquote><p>父子组件：通过官网的组件图可以看到，组件和组件之间是存在层级关系的，我们这里主要讨论父子组件。</p></blockquote><h4 id="props"><span class="post-title-index">4.1.1. </span><a href="#props" class="headerlink" title="props"></a>props</h4><blockquote><p><strong><code>props</code></strong>：是用于将数据从父组件传递到子组件的机制。父组件通过将数据绑定到子组件的属性上，使子组件可以接受并使用这些数据。</p><p><code>props</code> 可以是任何类型的数据，包括字符串、数字、对象、数组等。</p></blockquote><ul><li>语法</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">props</span>: &#123;</span><br><span class="line">    <span class="attr">filed</span>: &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="title class_">Boolean</span>,</span><br><span class="line">      <span class="attr">default</span>: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>假设我们需要通过父组件向子组件进行传值</p><ul><li><code>ParentView.vue</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span> 我是父组件 <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">child-view</span> <span class="attr">:message</span>=<span class="string">&quot;parentMessage&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> <span class="title class_">ChildView</span> <span class="keyword">from</span> <span class="string">&#x27;./ChildView.vue&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">components</span>: &#123; </span></span><br><span class="line"><span class="language-javascript">     <span class="title class_">ChildView</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">parentMessage</span>: <span class="string">&#x27;Hello from parent!&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>ChildView.vue</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>我是子组件<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">props</span>: &#123; </span></span><br><span class="line"><span class="language-javascript">    <span class="attr">message</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">type</span>: <span class="title class_">String</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>结果</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308131403286.png" alt="image-20230813140341213"></p><h4 id="emit"><span class="post-title-index">4.1.2. </span><a href="#emit" class="headerlink" title="$emit"></a>$emit</h4><blockquote><p><code>$emit</code> ：是用于在子组件中触发自定义事件，并向父组件发送消息的方法。</p><p>子组件可以使用 <code>$emit</code> 来通知父组件发生了某些事件或状态的变化，从而实现子组件向父组件传递数据。</p></blockquote><p>假设我们在子组件中与父组件通信。</p><ul><li><code>ChildView.vue</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>我是子组件<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sendEventToParent&quot;</span>&gt;</span>向父组件发送消息<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">sendEventToParent</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.$emit(<span class="string">&#x27;child-event&#x27;</span>, <span class="string">&#x27;Hello from child!&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>parentView.vue</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>我是父组件<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">child-view</span> @<span class="attr">child-event</span>=<span class="string">&quot;handleChildEvent&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> <span class="title class_">ChildView</span> <span class="keyword">from</span> <span class="string">&#x27;./ChildView.vue&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">components</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">ChildView</span></span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      message : <span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">handleChildEvent</span>(<span class="params">messageFromChild</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">message</span> = messageFromChild</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Message from child:&#x27;</span>, messageFromChild);</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>结果</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308131444822.gif" alt="动画"></p><h3 id="父组件访问子组件"><span class="post-title-index">4.2. </span><a href="#父组件访问子组件" class="headerlink" title="父组件访问子组件"></a>父组件访问子组件</h3><h4 id="refs"><span class="post-title-index">4.2.1. </span><a href="#refs" class="headerlink" title="$refs"></a>$refs</h4><blockquote><p><code>$refs</code> 是 <code>Vue.js</code> 提供的一个特殊属性，用于<strong>在组件中访问被标记为 <code>ref</code> 的子组件或 DOM 元素。通过 <code>$refs</code>，你可以在父组件中直接引用子组件的实例或操作 DOM 元素</strong>，而不需要通过事件或 <code>props</code> 进行数据传递。</p></blockquote><ul><li><code>ParenView.vue</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>我是父组件<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;callChildMethod&quot;</span>&gt;</span> 调用子组件方法 <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">child-view</span> <span class="attr">ref</span>=<span class="string">&quot;childRef&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> <span class="title class_">ChildView</span> <span class="keyword">from</span> <span class="string">&#x27;./ChildView.vue&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">components</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">ChildView</span></span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      message : <span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">callChildMethod</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">childRef</span>.<span class="title function_">childMethod</span>();</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>ChildView.vue</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>我是子组件<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      message : <span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">childMethod</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">     <span class="variable language_">this</span>.<span class="property">message</span> = <span class="string">&#x27;父子调用子组件成功&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>结果</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308131522195.gif" alt="动画"></p>]]></content>
      
      
      <categories>
          
          <category> 前端框架 </category>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue-项目依赖（六）</title>
      <link href="/posts/26ad9f96.html"/>
      <url>/posts/26ad9f96.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><span class="post-title-index">1. </span><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>由于上一章节中讲解了《<a href="https://wickson.top/posts/7f538b33.html">Vue-脚手架</a>》，所以我们想要完全的构建一个项目是需要很多依赖的。</p></blockquote><p><strong>依赖内容如下</strong></p><ul><li><code>Vuex</code></li><li><code>Vue-Router</code></li><li><code>Axios</code></li></ul><hr><h2 id="Vuex"><span class="post-title-index">2. </span><a href="#Vuex" class="headerlink" title="Vuex"></a><code>Vuex</code></h2><blockquote><p><code>Vuex</code> : 专门为 <code>Vue.js</code> 应用程序开发的状态管理库。</p><p><code>Vuex</code> 主要解决了应用程序中 <strong>组件之间共享状态</strong> 和 <strong>管理状态</strong> 的问题。在大型 <code>Vue</code> 应用中，组件的状态可能会变得复杂，而 <code>Vuex</code> 提供了一种集中式管理状态的方式，使得状态的变化和管理更加可预测和可维护。</p></blockquote><h3 id="第一步：安装-Vuex"><span class="post-title-index">2.1. </span><a href="#第一步：安装-Vuex" class="headerlink" title="第一步：安装 Vuex"></a>第一步：安装 <code>Vuex</code></h3><ul><li>由于我们的 <code>Vue</code> 版本采用的是 <code>2.6.14</code> 为了兼容，我们安装 <code>3.5.1</code> 版本的 <code>Vuex</code> </li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm instal -g vuex@3.5.1 </span><br></pre></td></tr></table></figure><ul><li>或者直接在 <code>Vue-CLI</code> 脚手架中直接添加依赖</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308121220848.gif" alt="动画"></p><h3 id="第二步：创建-Store"><span class="post-title-index">2.2. </span><a href="#第二步：创建-Store" class="headerlink" title="第二步：创建 Store"></a>第二步：创建 <code>Store</code></h3><ul><li>创建文件 <code>/store/index.js</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Vuex</span> <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">Vuex</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> <span class="title class_">Vuex</span>.<span class="title class_">Store</span>(&#123;</span><br><span class="line">  <span class="comment">// State（状态）：应用程序中的所有状态被集中存储在一个状态树中。这个状态树可以看作是单一源 of truth（单一的数据源），供整个应用程序的组件访问。</span></span><br><span class="line">  <span class="attr">state</span>: &#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// Getter（获取器）：Getters允许您从存储在状态树中的状态中派生出一些衍生状态，类似于计算属性。</span></span><br><span class="line">  <span class="attr">getter</span>: &#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// Mutation（变更）：Mutations是用于修改状态的方法。它们是同步的操作，用于在应用程序中记录状态变化。</span></span><br><span class="line">  <span class="attr">mutations</span>: &#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// Action（动作）： Actions是类似于Mutations的方法，但可以包含异步操作。</span></span><br><span class="line">  <span class="attr">actions</span>: &#123;</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// Module（模块）： 当应用程序变得复杂时，Vuex允许您将状态和操作分割为模块。</span></span><br><span class="line">  <span class="attr">modules</span>: &#123;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="第三步：配置-Store"><span class="post-title-index">2.3. </span><a href="#第三步：配置-Store" class="headerlink" title="第三步：配置 Store"></a>第三步：配置 <code>Store</code></h3><ul><li>在 <code>main.js</code> 添加 <code>store</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&#x27;./store&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">  <span class="attr">render</span>: <span class="function"><span class="params">h</span> =&gt;</span> <span class="title function_">h</span>(<span class="title class_">App</span>),</span><br><span class="line">  <span class="comment">// 将Store添加到Vue实例中  </span></span><br><span class="line">  store</span><br><span class="line">&#125;).$mount(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="案例：计数器"><span class="post-title-index">2.4. </span><a href="#案例：计数器" class="headerlink" title="案例：计数器"></a>案例：计数器</h3><blockquote><p><strong>Vuex</strong> ：计数器应用程序，允许您增加计数并通过异步操作增加计数。</p></blockquote><ul><li>修改  <code>/store/index.js</code></li></ul><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">import Vue from &#x27;vue&#x27;</span><br><span class="line">import Vuex from &#x27;vuex&#x27;</span><br><span class="line"></span><br><span class="line">Vue.use(Vuex)</span><br><span class="line"></span><br><span class="line">export default new Vuex.Store(&#123;</span><br><span class="line">  // State（状态）：应用程序中的所有状态被集中存储在一个状态树中。这个状态树可以看作是单一源 of truth（单一的数据源），供整个应用程序的组件访问。</span><br><span class="line">  state: &#123;</span><br><span class="line"><span class="addition">+    count: 0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  // Getter（获取器）：Getters允许您从存储在状态树中的状态中派生出一些衍生状态，类似于计算属性。</span><br><span class="line">  getter: &#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  // Mutation（变更）：Mutations是用于修改状态的方法。它们是同步的操作，用于在应用程序中记录状态变化。</span><br><span class="line">  mutations: &#123;</span><br><span class="line"><span class="addition">+    increment(state) &#123;</span></span><br><span class="line"><span class="addition">+      state.count++;</span></span><br><span class="line"><span class="addition">+    &#125;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  // Action（动作）： Actions是类似于Mutations的方法，但可以包含异步操作。</span><br><span class="line">  actions: &#123;</span><br><span class="line"><span class="addition">+    incrementAsync(&#123; commit &#125;) &#123;</span></span><br><span class="line"><span class="addition">+      setTimeout(() =&gt; &#123;</span></span><br><span class="line"><span class="addition">+        commit(&#x27;increment&#x27;);</span></span><br><span class="line"><span class="addition">+      &#125;, 1000);</span></span><br><span class="line"><span class="addition">+    &#125;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  // Module（模块）： 当应用程序变得复杂时，Vuex允许您将状态和操作分割为模块。</span><br><span class="line">  modules: &#123;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>创建页面 <code>src/views/CounterView1.vue</code></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;p&gt;Count: &#123;&#123; count &#125;&#125;&lt;/p&gt;</span><br><span class="line">    &lt;button @click=&quot;increment&quot;&gt;Increment&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;incrementAsync&quot;&gt;Increment Async&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  computed: &#123;</span><br><span class="line">    count() &#123;</span><br><span class="line">      return this.$store.state.count;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    increment() &#123;</span><br><span class="line">      this.$store.commit(&#x27;increment&#x27;);</span><br><span class="line">    &#125;,</span><br><span class="line">    incrementAsync() &#123;</span><br><span class="line">      this.$store.dispatch(&#x27;incrementAsync&#x27;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>创建页面 <code>src/views/CounterView2.vue</code></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;h3&gt;我是组件2&lt;/h3&gt;</span><br><span class="line">    &lt;p&gt;Count: &#123;&#123; count &#125;&#125;&lt;/p&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  computed: &#123;</span><br><span class="line">    count() &#123;</span><br><span class="line">      return this.$store.state.count;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>结果</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308121404298.gif" alt="动画" style="float:left"></p><hr><h2 id="Vue-Router"><span class="post-title-index">3. </span><a href="#Vue-Router" class="headerlink" title="Vue-Router"></a><code>Vue-Router</code></h2><blockquote><p><strong>Vue Router</strong> ：是一个为 <code>Vue.js</code> 应用程序提供路由功能的官方插件。它允许你在单页应用（Single Page Application，SPA）中管理不同视图之间的导航，实现页面之间的切换和状态管理，同时也支持<strong>路由参数、嵌套路由、路由导航守卫</strong>等功能。</p></blockquote><h3 id="第一步：安装-Vue-Router"><span class="post-title-index">3.1. </span><a href="#第一步：安装-Vue-Router" class="headerlink" title="第一步：安装 Vue-Router"></a>第一步：安装 <code>Vue-Router</code></h3><ul><li>指令</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm instal vue-router@3.5.1</span><br></pre></td></tr></table></figure><ul><li>也可以通过 <code>vue ui</code> 进行创建</li></ul><h3 id="第二步：创建-Vue-Router"><span class="post-title-index">3.2. </span><a href="#第二步：创建-Vue-Router" class="headerlink" title="第二步：创建 Vue Router"></a>第二步：创建 <code>Vue Router</code></h3><ul><li>创建文件 <code>/router/index.js</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">VueRouter</span> <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">HomeView</span> <span class="keyword">from</span> <span class="string">&#x27;../views/HomeView.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">VueRouter</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>, <span class="comment">// 定义了 URL 路径，即当用户访问的路径匹配 /cont/law 时，该路由会生效。</span></span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;home&#x27;</span>, <span class="comment">// 路由的名称，用于在代码中引用该路由。</span></span><br><span class="line">    <span class="attr">props</span>: <span class="function"><span class="params">route</span> =&gt;</span> route.<span class="property">query</span>, <span class="comment">// 它定义了如何将路由的查询参数传递给组件作为 props。</span></span><br><span class="line">    <span class="attr">component</span>: <span class="title class_">HomeView</span> <span class="comment">// 定义了该路由所对应的 Vue 组件。</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/about&#x27;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;about&#x27;</span>,</span><br><span class="line">    <span class="attr">props</span>: <span class="function"><span class="params">route</span> =&gt;</span> route.<span class="property">query</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;../views/AboutView.vue&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123;</span><br><span class="line">  routes</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><h3 id="第三步：配置-Vue-Router"><span class="post-title-index">3.3. </span><a href="#第三步：配置-Vue-Router" class="headerlink" title="第三步：配置 Vue Router"></a>第三步：配置 <code>Vue Router</code></h3><ul><li><strong>配置 <code>main.js</code></strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&#x27;./store&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">  <span class="attr">render</span>: <span class="function"><span class="params">h</span> =&gt;</span> <span class="title function_">h</span>(<span class="title class_">App</span>),</span><br><span class="line">  router,</span><br><span class="line">  store</span><br><span class="line">&#125;).$mount(<span class="string">&#x27;#app&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="第四步：使用"><span class="post-title-index">3.4. </span><a href="#第四步：使用" class="headerlink" title="第四步：使用"></a>第四步：使用</h3><ul><li><code>App.Vue</code></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;nav&gt;</span><br><span class="line">      &lt;!-- &lt;router-link to=&quot;/&quot;&gt;Home&lt;/router-link&gt; |</span><br><span class="line">      &lt;router-link to=&quot;/about&quot;&gt;About&lt;/router-link&gt; |  --&gt;</span><br><span class="line">      &lt;router-link to=&quot;/counter1&quot;&gt;Counter1&lt;/router-link&gt; | </span><br><span class="line">      &lt;router-link to=&quot;/counter2&quot;&gt;Counter2&lt;/router-link&gt;</span><br><span class="line">    &lt;/nav&gt;</span><br><span class="line">    &lt;router-view/&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;stylus&quot;&gt;</span><br><span class="line">#app</span><br><span class="line">  font-family Avenir, Helvetica, Arial, sans-serif</span><br><span class="line">  -webkit-font-smoothing antialiased</span><br><span class="line">  -moz-osx-font-smoothing grayscale</span><br><span class="line">  text-align center</span><br><span class="line">  color #2c3e50</span><br><span class="line">  margin-top 60px</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ul><li>结果</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308121557450.png" alt="image-20230812155743418" style="float:left"></p><hr><h2 id="Axios"><span class="post-title-index">4. </span><a href="#Axios" class="headerlink" title="Axios"></a><code>Axios</code></h2><blockquote><p><strong>Axios</strong> ：是一个基于 Promise 的 JavaScript HTTP 客户端，用于浏览器和 Node.js。它支持在浏览器中发起 HTTP 请求，并且提供了丰富的功能，如请求和响应的拦截、请求取消、并发请求等。</p></blockquote><h3 id="第一步：安装-Axios"><span class="post-title-index">4.1. </span><a href="#第一步：安装-Axios" class="headerlink" title="第一步：安装 Axios"></a>第一步：安装 <code>Axios</code></h3><ul><li>指令</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install axios@0.19.1</span><br></pre></td></tr></table></figure><ul><li><code>package.json</code></li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;dependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;axios&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.19.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;core-js&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.8.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.6.14&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vue-router&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.5.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vuex&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.5.1&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="案例：获取用户信息"><span class="post-title-index">4.2. </span><a href="#案例：获取用户信息" class="headerlink" title="案例：获取用户信息"></a>案例：获取用户信息</h3><ul><li>配置路由</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">path</span>: <span class="string">&#x27;/userList&#x27;</span>,</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;userList&#x27;</span>,</span><br><span class="line">  <span class="attr">props</span>: <span class="function"><span class="params">route</span> =&gt;</span> route.<span class="property">query</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;../views/UserView.vue&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>UserView.vue</code></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;h1&gt;User List&lt;/h1&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">      &lt;li v-for=&quot;user in users&quot; :key=&quot;user.id&quot;&gt;&#123;&#123; user.name &#125;&#125;&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import axios from &#x27;axios&#x27;;</span><br><span class="line">    </span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      users: []</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    this.fetchUsers();</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    fetchUsers() &#123;</span><br><span class="line">      axios.get(&#x27;https://jsonplaceholder.typicode.com/users&#x27;)</span><br><span class="line">        .then(response =&gt; &#123;</span><br><span class="line">          this.users = response.data;</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(error =&gt; &#123;</span><br><span class="line">          console.error(error);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>结果</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308121618549.png" alt="image-20230812161813518" style="float:left"></p>]]></content>
      
      
      <categories>
          
          <category> 前端框架 </category>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue-脚手架（五）</title>
      <link href="/posts/7f538b33.html"/>
      <url>/posts/7f538b33.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><span class="post-title-index">1. </span><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>我们通过上一节的内容 《<a href="https://wickson.top/posts/cca35467.html">Vue-Webpack（四）</a>》知道了如何通过 <code>Webpack</code> 构建 <code>Vue</code> ，但通过哪种方式在实际开发中肯定是不现实的。所以需要引入专门构建 <code>Vue</code> 的脚手架 进行开发</p></blockquote><hr><h2 id="脚手架"><span class="post-title-index">2. </span><a href="#脚手架" class="headerlink" title="脚手架"></a>脚手架</h2><blockquote><p>目前 <code>Vue</code> 提供了两种脚手架的开发工具，分别是 <code>Vue CLI</code> 和 <code>Vite</code> ，其中 <code>Vue CLI</code> 现已处于维护模式!</p></blockquote><h3 id="Vue-Cli"><span class="post-title-index">2.1. </span><a href="#Vue-Cli" class="headerlink" title="Vue Cli"></a><code>Vue Cli</code></h3><blockquote><p>官网地址：<a href="https://cli.vuejs.org/zh">https://cli.vuejs.org/zh</a></p><p>尽量使用 <code>cmd</code> 命令窗口进行执行命令</p></blockquote><h4 id="第一步：安装-Vue-CLI"><span class="post-title-index">2.1.1. </span><a href="#第一步：安装-Vue-CLI" class="headerlink" title="第一步：安装 Vue CLI"></a>第一步：安装 <code>Vue CLI</code></h4><ul><li>安装指定版本的 <code>Vue Cli</code></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g @vue/cli@3.7.0</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308112347185.png" alt="image-20230811234747151" style="float:left;"></p><h4 id="第二步：创建项目"><span class="post-title-index">2.1.2. </span><a href="#第二步：创建项目" class="headerlink" title="第二步：创建项目"></a>第二步：创建项目</h4><ul><li>指令</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue ui</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308112349079.png" alt="image-20230811234932062" style="float:left"></p><ul><li>详情</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308112351226.png" alt="image-20230811235104195"></p><ul><li>预设</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308112353897.png" alt="image-20230811235354853"></p><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308112353642.png" alt="image-20230811235311608"></p><ul><li>功能</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308112355470.png" alt="image-20230811235523411"></p><ul><li>配置</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308112356584.png" alt="image-20230811235608553"></p><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308112356379.png" alt="image-20230811235648342"></p><ul><li>创建完成</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308112358450.png" alt="image-20230811235847399"></p><h4 id="第三步：目录结构"><span class="post-title-index">2.1.3. </span><a href="#第三步：目录结构" class="headerlink" title="第三步：目录结构"></a>第三步：目录结构</h4><ul><li>图解</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308120000017.png" alt="image-20230812000010999" style="float:left"></p><ul><li>目录说明</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">my-vue-app/          // 项目根目录</span><br><span class="line">├── public/           // 静态资源文件夹</span><br><span class="line">│   ├── index.html    // 入口 HTML 文件</span><br><span class="line">│   ├── ...</span><br><span class="line">│</span><br><span class="line">├── src/              // 项目源代码文件夹</span><br><span class="line">│   ├── assets/       // 存放静态资源（图片、样式等）</span><br><span class="line">│   ├── components/   // Vue 组件文件夹</span><br><span class="line">│   ├── views/        // 页面级别的 Vue 组件文件夹</span><br><span class="line">│   ├── App.vue       // 应用程序的根组件</span><br><span class="line">│   ├── main.js       // 入口 JavaScript 文件</span><br><span class="line">│   ├── ...</span><br><span class="line">│</span><br><span class="line">├── node_modules/     // 依赖模块文件夹</span><br><span class="line">│</span><br><span class="line">├── .gitignore        // Git 忽略配置文件</span><br><span class="line">├── babel.config.js   // Babel 配置文件</span><br><span class="line">├── package.json      // 项目配置和依赖列表</span><br><span class="line">├── README.md         // 项目说明文件</span><br><span class="line">├── vue.config.js  // 项目构建过程的配置文件</span><br></pre></td></tr></table></figure><h4 id="第四步：配置-vue-config-js"><span class="post-title-index">2.1.4. </span><a href="#第四步：配置-vue-config-js" class="headerlink" title="第四步：配置 vue.config.js"></a>第四步：配置 <code>vue.config.js</code></h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="comment">// 基本路径</span></span><br><span class="line">  <span class="attr">publicPath</span>: <span class="string">&quot;./&quot;</span>,</span><br><span class="line">  <span class="comment">// 构建时的输出目录</span></span><br><span class="line">  <span class="attr">outputDir</span>: <span class="string">&quot;dist&quot;</span>,</span><br><span class="line">  <span class="comment">// 放置生成的静态资源目录</span></span><br><span class="line">  <span class="attr">assetsDir</span>: <span class="string">&quot;static&quot;</span>,</span><br><span class="line">  <span class="comment">// 指定html输出路径</span></span><br><span class="line">  <span class="attr">indexPath</span>: <span class="string">&quot;index.html&quot;</span>,</span><br><span class="line">  <span class="comment">// 设置语法检查</span></span><br><span class="line">  <span class="attr">lintOnSave</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="comment">// 设置是否需要sourceMap</span></span><br><span class="line">  <span class="attr">productionSourceMap</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="comment">// 配置开发环境下的一些服务器配置</span></span><br><span class="line">  <span class="attr">devServer</span>: &#123;</span><br><span class="line">    <span class="attr">open</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">port</span>: <span class="number">8080</span>,</span><br><span class="line">    <span class="attr">proxy</span>: &#123;</span><br><span class="line">      <span class="comment">// 配置代理</span></span><br><span class="line">      <span class="string">&#x27;/api&#x27;</span>: &#123;</span><br><span class="line">        <span class="attr">target</span>: <span class="string">&#x27;http://localhost:8080&#x27;</span>,</span><br><span class="line">        <span class="attr">pathRewrite</span>: &#123;</span><br><span class="line">          <span class="string">&#x27;^/api&#x27;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="第五步：运行项目"><span class="post-title-index">2.1.5. </span><a href="#第五步：运行项目" class="headerlink" title="第五步：运行项目"></a>第五步：运行项目</h4><ul><li>指令</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run serve</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308120002011.png" alt="image-20230812000237970"></p><h3 id="Vite"><span class="post-title-index">2.2. </span><a href="#Vite" class="headerlink" title="Vite"></a><code>Vite</code></h3><blockquote><p>Vite 是一个基于现代浏览器原生 ES 模块系统的构建工具，专为开发 <code>Vue.js</code> 单页面应用（SPA）而设计的。与传统的打包工具（如<code>Webpack</code>）不同，Vite 采用了一种更快、更轻量级的开发模式，能够在开发阶段实现即时的、按需加载。</p><p>官方文档：<a href="https://cn.vitejs.dev/guide/">https://cn.vitejs.dev/guide/</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 前端框架 </category>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue-Webpack（四）</title>
      <link href="/posts/cca35467.html"/>
      <url>/posts/cca35467.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><span class="post-title-index">1. </span><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>由于我们学习 <code>Vue</code> 时 <code>Webpack</code> 是无法绕过去的。但作为后端开发只需要了解即可，并不一定要想前端工程师一样精通。</p></blockquote><hr><h2 id="什么是-Webpack"><span class="post-title-index">2. </span><a href="#什么是-Webpack" class="headerlink" title="什么是 Webpack ?"></a>什么是 <code>Webpack</code> ?</h2><blockquote><p>官方文档：<a href="https://webpack.docschina.org/concepts/entry-points/">https://webpack.docschina.org/concepts/entry-points/</a></p><p><code>Webpack</code> 是一个现代前端构建工具，用于处理 <code>JavaScript</code> 模块、资源文件（如样式、图片等）以及其他静态资源，将它们打包成一个或多个优化的 bundle，以提高应用的性能和可维护性。</p></blockquote><p><strong>使用拼图的例子描述如下</strong></p><blockquote><p>假设你正在组织一个庞大的拼图，每个拼图片段代表着你的应用程序的一部分，包括各种 <code>JavaScript</code> 代码、样式、图片和其他资源。但是他们非常混乱、难以管理和组装。<code>Webpack</code> 就像是一个智能的拼图整理工具。它可以将这些碎片按照你的需要整理、排序和合并。</p></blockquote><ul><li>首先，它会检查每个碎片上写着的说明，这相当于模块化的 JavaScript 代码。</li><li>然后，它会将这些碎片中的颜色块、图案等，相应地进行分类，这就好像是处理样式文件。还有一些碎片是图片，Webpack 知道如何将它们正确地放在一起，就像是处理图片资源。</li><li><p>最终，Webpack 会根据你的设置，将所有整理好的碎片合并成几个优化的大块，就像是组装一幅完整的拼图。</p></li><li><p>总之，<code>Webpack</code> 就像是一个拼图整理工具，它帮助你把代码和资源整理得更有序，以提高网站性能和开发效率。</p></li></ul><p><strong>官网图解</strong></p><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308102021448.png" alt="image-20230810202142414"></p><hr><h2 id="安装-Webpack"><span class="post-title-index">3. </span><a href="#安装-Webpack" class="headerlink" title="安装 Webpack"></a>安装 <code>Webpack</code></h2><h3 id="第一步：安装-Webpack"><span class="post-title-index">3.1. </span><a href="#第一步：安装-Webpack" class="headerlink" title="第一步：安装 Webpack"></a>第一步：安装 <code>Webpack</code></h3><ul><li>执行命令</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="built_in">mkdir</span> 01_webpack</span><br><span class="line">&gt; <span class="built_in">cd</span> .\01_webpack\</span><br><span class="line">&gt; npm init -y</span><br><span class="line">&gt; npm install webpack webpack-cli --save-dev</span><br></pre></td></tr></table></figure><ul><li>文件目录</li></ul><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">01_webpack</span><br><span class="line">  |- /node_modules</span><br><span class="line">  |- package.json</span><br><span class="line">  |- package-lock.json</span><br></pre></td></tr></table></figure><h3 id="第二步：创建配置文件"><span class="post-title-index">3.2. </span><a href="#第二步：创建配置文件" class="headerlink" title="第二步：创建配置文件"></a>第二步：创建配置文件</h3><blockquote><p>Webpack 使用配置文件来指定打包的规则和行为。</p></blockquote><ul><li>在根目录创建一个名为 <strong><code>webpack.config.js</code></strong> 文件</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// webpack.config.js</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">entry</span>: <span class="string">&#x27;./src/main.js&#x27;</span>, <span class="comment">// 入口文件</span></span><br><span class="line">  <span class="attr">output</span>: &#123;</span><br><span class="line">    <span class="attr">filename</span>: <span class="string">&#x27;bundle.js&#x27;</span>, <span class="comment">// 输出文件名</span></span><br><span class="line">    <span class="attr">path</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;dist&#x27;</span>) <span class="comment">// 输出目录</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>文件目录</li></ul><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">01_webpack</span><br><span class="line">  |- package.json</span><br><span class="line">  |- package-lock.json</span><br><span class="line"><span class="addition">+ |- /dist</span></span><br><span class="line"><span class="addition">+ |- /src</span></span><br><span class="line"><span class="addition">+ |- main.js</span></span><br><span class="line"><span class="addition">+ |- webpack.config.js</span></span><br></pre></td></tr></table></figure><h3 id="第三步：创建入口文件"><span class="post-title-index">3.3. </span><a href="#第三步：创建入口文件" class="headerlink" title="第三步：创建入口文件"></a>第三步：创建入口文件</h3><blockquote><p>在配置文件中指定了入口文件后，你需要在项目中创建该入口文件。</p></blockquote><ul><li>创建 <code>/src/main.js</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/main.js</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Hello, Webpack!&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="第四步：安装加载器和插件"><span class="post-title-index">3.4. </span><a href="#第四步：安装加载器和插件" class="headerlink" title="第四步：安装加载器和插件"></a>第四步：安装加载器和插件</h3><blockquote><p>Webpack 可以使用加载器（Loaders）来处理不同类型的文件，例如将 ES6 代码转换为 ES5、处理样式文件、图片等。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; npm install css-loader style-loader --save-dev</span><br></pre></td></tr></table></figure><ul><li><strong><code>package.json</code> 新增依赖</strong> </li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308102227203.png" alt="image-20230810222711172" style="float:left"></p><h3 id="第五步：配置加载器"><span class="post-title-index">3.5. </span><a href="#第五步：配置加载器" class="headerlink" title="第五步：配置加载器"></a>第五步：配置加载器</h3><blockquote><p>在配置文件中，配置加载器来处理不同类型的文件。例如， CSS 加载器用于处理样式文件。</p></blockquote><ul><li><code>webpack.config.js</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// webpack.config.js</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="comment">// ... </span></span><br><span class="line">  <span class="attr">module</span>: &#123;</span><br><span class="line">    <span class="attr">rules</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.js$/</span>, <span class="comment">// 匹配 JavaScript 文件</span></span><br><span class="line">        <span class="attr">exclude</span>: <span class="regexp">/node_modules/</span>, <span class="comment">// 排除 node_modules 目录</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.css$/</span>, <span class="comment">// 匹配 CSS 文件</span></span><br><span class="line">        <span class="attr">use</span>: [<span class="string">&#x27;style-loader&#x27;</span>, <span class="string">&#x27;css-loader&#x27;</span>] <span class="comment">// 先使用 css-loader 处理，再使用 style-loader 处理</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="第六步：运行构建"><span class="post-title-index">3.6. </span><a href="#第六步：运行构建" class="headerlink" title="第六步：运行构建"></a>第六步：运行构建</h3><blockquote><p>使用命令行运行 Webpack，它将根据配置文件开始构建项目。</p></blockquote><ul><li><code>package.json</code></li></ul><blockquote><p>删除：”main”: “index.js”,</p><p>新增：”private”: true, </p><p>新增·：”build”: “webpack —config webpack.config.js”</p><p>我们安装包是 <code>private</code>（私有的），并移除 <code>main</code> 入口。这可以防止意外发布你的代码。</p></blockquote><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;: &quot;01_webpack&quot;,</span><br><span class="line">  &quot;version&quot;: &quot;1.0.0&quot;,</span><br><span class="line">  &quot;description&quot;: &quot;&quot;,</span><br><span class="line"><span class="deletion">-  &quot;main&quot;: &quot;index.js&quot;,</span></span><br><span class="line"><span class="addition">+  &quot;private&quot;: true,</span></span><br><span class="line">  &quot;scripts&quot;: &#123;</span><br><span class="line">    &quot;test&quot;: &quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;,</span><br><span class="line"><span class="addition">+    &quot;build&quot;: &quot;webpack --config webpack.config.js&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;keywords&quot;: [],</span><br><span class="line">  &quot;author&quot;: &quot;&quot;,</span><br><span class="line">  &quot;license&quot;: &quot;ISC&quot;,</span><br><span class="line">  &quot;devDependencies&quot;: &#123;</span><br><span class="line">    &quot;css-loader&quot;: &quot;^6.8.1&quot;,</span><br><span class="line">    &quot;style-loader&quot;: &quot;^3.3.3&quot;,</span><br><span class="line">    &quot;webpack&quot;: &quot;^5.88.2&quot;,</span><br><span class="line">    &quot;webpack-cli&quot;: &quot;^5.1.4&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>运行</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure><ul><li>结果</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308102230417.gif" alt="动画"></p><hr><h2 id="Webpack-配置-Vue2-X"><span class="post-title-index">4. </span><a href="#Webpack-配置-Vue2-X" class="headerlink" title="Webpack 配置 Vue2.X"></a><code>Webpack</code> 配置 <code>Vue2.X</code></h2><blockquote><p>我们基于上面的案例，设置一个基本的 Vue 项目并使用 Webpack 进行构建。</p><p>这个示例包含了一个基本的 Vue 组件、Webpack 配置以及用于开发和构建的命令。</p></blockquote><h3 id="第一步：安装-Webpack-1"><span class="post-title-index">4.1. </span><a href="#第一步：安装-Webpack-1" class="headerlink" title="第一步：安装 Webpack"></a>第一步：安装 <code>Webpack</code></h3><ul><li>执行命令</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="built_in">mkdir</span> 02_webpack_vue</span><br><span class="line">&gt; <span class="built_in">cd</span> .\02_webpack_vue\</span><br><span class="line"><span class="comment"># 初始化</span></span><br><span class="line">&gt; npm init -y </span><br><span class="line"><span class="comment"># 添加依赖</span></span><br><span class="line"><span class="comment"># - webpack@4.46.0: 前端构建工具，用于打包和处理资源</span></span><br><span class="line"><span class="comment"># - webpack-cli@4.7.2: webpack 的命令行工具，方便在命令行中使用 webpack</span></span><br><span class="line">&gt; npm install webpack@4 webpack-cli@3 --save-dev </span><br></pre></td></tr></table></figure><ul><li>文件目录</li></ul><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">01_webpack</span><br><span class="line">  |- /node_modules</span><br><span class="line">  |- package.json</span><br><span class="line">  |- package-lock.json</span><br></pre></td></tr></table></figure><h3 id="第二步：创建组件"><span class="post-title-index">4.2. </span><a href="#第二步：创建组件" class="headerlink" title="第二步：创建组件"></a>第二步：创建组件</h3><ul><li>创建 <code>/src/App.vue</code></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;h1&gt;&#123;&#123; message &#125;&#125;&lt;/h1&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      message: &#x27;Hello, Vue with Webpack!&#x27;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">h1 &#123;</span><br><span class="line">  color: blue;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>文件目录</li></ul><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">01_webpack</span><br><span class="line">  |- /node_modules</span><br><span class="line">  |- package.json</span><br><span class="line">  |- package-lock.json</span><br><span class="line"><span class="addition">+ |- /dist</span></span><br><span class="line"><span class="addition">+ |- /src</span></span><br><span class="line"><span class="addition">+ |- App.vue</span></span><br></pre></td></tr></table></figure><h3 id="第三步：创建文件入口"><span class="post-title-index">4.3. </span><a href="#第三步：创建文件入口" class="headerlink" title="第三步：创建文件入口"></a>第三步：创建文件入口</h3><ul><li>创建 <code>/src/main.js</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">  <span class="attr">render</span>: <span class="function"><span class="params">h</span> =&gt;</span> <span class="title function_">h</span>(<span class="title class_">App</span>) <span class="comment">// 使用 render 函数渲染 App 组件，并将其挂载到 id 为 &#x27;app&#x27; 的元素上</span></span><br><span class="line">&#125;).$mount(<span class="string">&#x27;#app&#x27;</span>); <span class="comment">// 手动挂载 Vue 实例到 id 为 &#x27;app&#x27; 的元素上</span></span><br></pre></td></tr></table></figure><ul><li>文件目录</li></ul><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">01_webpack</span><br><span class="line">  |- /node_modules</span><br><span class="line">  |- package.json</span><br><span class="line">  |- package-lock.json</span><br><span class="line">  |- /src</span><br><span class="line"> |- App.vue</span><br><span class="line"><span class="addition">+ |- main.js</span></span><br></pre></td></tr></table></figure><h3 id="第四步：创建文件"><span class="post-title-index">4.4. </span><a href="#第四步：创建文件" class="headerlink" title="第四步：创建文件"></a>第四步：创建文件</h3><ul><li><p>创建 <code>/src/index.html</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Vue Webpack Demo<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./src/main.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="第五步：添加依赖"><span class="post-title-index">4.5. </span><a href="#第五步：添加依赖" class="headerlink" title="第五步：添加依赖"></a>第五步：添加依赖</h3><ul><li>执行命令</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装了以下开发依赖：</span></span><br><span class="line"><span class="comment"># - vue@2.6.14: Vue 2.x 版本，用于构建用户界面</span></span><br><span class="line"><span class="comment"># - vue-loader@15.9.8: 用于加载和解析 Vue 单文件组件</span></span><br><span class="line"><span class="comment"># - vue-template-compiler@2.6.14: 用于编译 Vue 单文件组件中的模板</span></span><br><span class="line"><span class="comment"># - webpack-dev-server@3.11.2: 开发服务器，用于在开发过程中提供实时预览和热重载</span></span><br><span class="line"><span class="comment"># - html-webpack-plugin@5.3.2: 自动生成 HTML 文件，并将打包后的资源自动引入</span></span><br><span class="line"><span class="comment"># - css-loader@6.3.0: 用于加载和解析 CSS 文件，使其能够在项目中使用</span></span><br><span class="line"><span class="comment"># - vue-style-loader@4.1.3: 用于加载 Vue 单文件组件中的样式</span></span><br><span class="line">&gt; npm install vue@2.6.14 vue-loader@15.9.8 vue-template-compiler@2.6.14 webpack-dev-server@3.11.2 html-webpack-plugin@3.2.0 css-loader@3.6.0 vue-style-loader@4.1.3 --save-dev</span><br></pre></td></tr></table></figure><h3 id="第六步：配置加载器"><span class="post-title-index">4.6. </span><a href="#第六步：配置加载器" class="headerlink" title="第六步：配置加载器"></a>第六步：配置加载器</h3><ul><li>创建 <code>webpack.config.js</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">HtmlWebpackPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;html-webpack-plugin&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; <span class="title class_">VueLoaderPlugin</span> &#125; = <span class="built_in">require</span>(<span class="string">&#x27;vue-loader&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">entry</span>: <span class="string">&#x27;./src/main.js&#x27;</span>,  <span class="comment">// 入口文件，指定项目的起始位置</span></span><br><span class="line">  <span class="attr">output</span>: &#123;</span><br><span class="line">    <span class="attr">filename</span>: <span class="string">&#x27;bundle.js&#x27;</span>,  <span class="comment">// 输出文件名，打包后的 JavaScript 文件将命名为 bundle.js</span></span><br><span class="line">    <span class="attr">path</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;dist&#x27;</span>)  <span class="comment">// 输出路径，打包后的文件将存放在 dist 目录中</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">module</span>: &#123;</span><br><span class="line">    <span class="attr">rules</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.vue$/</span>,  <span class="comment">// 匹配以 .vue 结尾的文件</span></span><br><span class="line">        <span class="attr">use</span>: <span class="string">&#x27;vue-loader&#x27;</span>  <span class="comment">// 使用 vue-loader 处理 Vue 单文件组件</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.css$/</span>,  <span class="comment">// 匹配以 .css 结尾的文件</span></span><br><span class="line">        <span class="attr">use</span>: [<span class="string">&#x27;vue-style-loader&#x27;</span>, <span class="string">&#x27;css-loader&#x27;</span>]  <span class="comment">// 先使用 vue-style-loader 处理样式，再使用 css-loader 加载 CSS 文件</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">HtmlWebpackPlugin</span>(&#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;hello vue&#x27;</span>,</span><br><span class="line">      <span class="attr">template</span>: <span class="string">&#x27;index.html&#x27;</span>  <span class="comment">// 使用 index.html 作为模板生成 HTML 文件，并自动引入打包后的资源</span></span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">VueLoaderPlugin</span>()</span><br><span class="line">  ]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="第七步：运行构建"><span class="post-title-index">4.7. </span><a href="#第七步：运行构建" class="headerlink" title="第七步：运行构建"></a>第七步：运行构建</h3><ul><li><code>package.json</code></li></ul><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;: &quot;01_webpack&quot;,</span><br><span class="line">  &quot;version&quot;: &quot;1.0.0&quot;,</span><br><span class="line">  &quot;description&quot;: &quot;&quot;,</span><br><span class="line"><span class="deletion">-  &quot;main&quot;: &quot;index.js&quot;,</span></span><br><span class="line"><span class="addition">+  &quot;private&quot;: true,</span></span><br><span class="line">  &quot;scripts&quot;: &#123;</span><br><span class="line">    &quot;test&quot;: &quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;,</span><br><span class="line"><span class="addition">+    &quot;dev&quot;: &quot;webpack-dev-server --open&quot;,</span></span><br><span class="line"><span class="addition">+    &quot;build&quot;: &quot;webpack --config webpack.config.js&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;keywords&quot;: [],</span><br><span class="line">  &quot;author&quot;: &quot;&quot;,</span><br><span class="line">  &quot;license&quot;: &quot;ISC&quot;,</span><br><span class="line">  &quot;devDependencies&quot;: &#123;</span><br><span class="line">    &quot;css-loader&quot;: &quot;^3.6.0&quot;,</span><br><span class="line">    &quot;html-webpack-plugin&quot;: &quot;^3.2.0&quot;,</span><br><span class="line">    &quot;vue&quot;: &quot;^2.6.14&quot;,</span><br><span class="line">    &quot;vue-loader&quot;: &quot;^15.9.8&quot;,</span><br><span class="line">    &quot;vue-style-loader&quot;: &quot;^4.1.3&quot;,</span><br><span class="line">    &quot;vue-template-compiler&quot;: &quot;^2.6.14&quot;,</span><br><span class="line">    &quot;webpack&quot;: &quot;^4.46.0&quot;,</span><br><span class="line">    &quot;webpack-cli&quot;: &quot;^3.3.12&quot;,</span><br><span class="line">    &quot;webpack-dev-server&quot;: &quot;^3.11.2&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>运行构建</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run dev</span><br></pre></td></tr></table></figure><ul><li>结果</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308110036639.png" alt="image-20230811003600613" style="float:left;"></p>]]></content>
      
      
      <categories>
          
          <category> 前端框架 </category>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue-生命周期（三）</title>
      <link href="/posts/a886c21.html"/>
      <url>/posts/a886c21.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><span class="post-title-index">1. </span><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>具体细节参考 <a href="https://cn.vuejs.org/guide/introduction.html"><code>Vue</code> 官方文档</a> ，本章节会详细讲解到 <code>Vue</code> 的生命周期，理解了生命周期可以在不同的阶段更好的管理组件。</p></blockquote><p>本章节会通过如下内容来讲解：</p><ul><li>生命周期基本概念</li><li><code>Vue</code> 的生命周期<ul><li><code>Vue</code> 每个阶段做了哪些事情</li><li><code>Vue</code> 代码详解</li></ul></li></ul><hr><h2 id="生命周期"><span class="post-title-index">2. </span><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h2><blockquote><p>生命周期：就是从出生到死亡的一个过程，无论是在生活中还是在程序中都适用。</p><p>生命周期代表一个实体的整个生存过程，包括创建（出生）、更新（成长）、销毁（死亡）等阶段。</p></blockquote><hr><h2 id="Vue2-X-生命周期"><span class="post-title-index">3. </span><a href="#Vue2-X-生命周期" class="headerlink" title="Vue2.X 生命周期"></a><code>Vue2.X</code> 生命周期</h2><ol><li><p><strong>🤔思考：那 <code>Vue</code> 和人的生命周期有什么关系呢？</strong></p><ul><li>创建（出生）：<code>created</code> </li><li>更新（成长）：<code>mounted</code></li><li>销毁（死亡）：<code>destroyed</code></li></ul></li><li><p><strong>🤔思考：那 <code>Vue</code> 的生命周期可以抽象为那几个过程呢？</strong></p><p>可以分为四个阶段，八个过程，具体信息如下：</p><div class="tabs" id="explain"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#explain-1">创建阶段</button></li><li class="tab"><button type="button" data-href="#explain-2">成长阶段</button></li><li class="tab"><button type="button" data-href="#explain-3">更新阶段</button></li><li class="tab"><button type="button" data-href="#explain-4">销毁阶段</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="explain-1"><p>在这个阶段，Vue 组件正在创造和准备自己，就像一个人从诞生到成长的过程。</p><p><strong><code>beforeCreate</code></strong> </p><ul><li>在组件实例初始化完成之后立即调用</li><li><code>vue</code> 实例的<strong>挂载元素</strong> <code>$el</code> 和 <strong>数据对象</strong> <code>data</code> 都为 <strong><code>undefined</code></strong>，还未初始化。</li><li>类似在人出生前，家庭在准备迎接新成员，但孩子还没有呱呱坠地。</li></ul><p><strong><code>create</code></strong> </p><ul><li>在组件实例处理完所有与状态相关的选项后调用。</li><li><code>vue</code> 实例的 <strong>数据对象</strong><code>data</code>有了，<code>$el</code> 还没有</li><li>类似孩子出生后，已经成为一个个体，可以开始认识世界，但还没有参与到各种活动中。</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="explain-2"><p>这个阶段类似于一个人的成长过程，Vue 组件与用户进行交互，更新状态，不断发展。</p><p><strong><code>beforeMount</code></strong></p><ul><li>在组件被挂载到 <code>DOM</code> 之前调用。</li><li><code>vue</code> 实例的 <code>$el</code> 和 <code>data</code> 都初始化了，但还是虚拟的 <code>DOM</code> 节点，具体的 <code>data.filter</code> 还未替换。</li><li>类似孩子成长为学童，准备进入学校阶段，但尚未真正开始上课</li></ul><p><strong><code>mounted</code></strong></p><ul><li>在组件被挂载到 <code>DOM</code> 上后调用，这是初始化过程的最后一个阶段。</li><li><code>vue</code> 实例挂载完成，<code>data.filter</code> 成功渲染。</li><li>类似孩子已经进入学校，可以和同学互动，参加各种活动，融入社交圈。</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="explain-3"><p>这个阶段类似于一个人在成长过程中的不断更新和变化，Vue 组件会根据数据的变化进行更新。</p><p><strong><code>beforeUpdate</code></strong></p><ul><li>在组件即将因为一个响应式状态变更而更新其 DOM 树之前调用。</li><li><code>data</code> 更新时触发，当虚拟DOM中的data发生改变时触发，此时虚拟DOM没有加载到页面上。<br>页面上的数据不变，虚拟DOM中的数据改变。</li><li>类似一个人在改变自己的日常习惯，但尚未完全转变为新状态。</li></ul><p><strong><code>updated</code></strong></p><ul><li>在组件因为一个响应式状态变更而更新其 DOM 树之后调用。</li><li><code>data</code> 更新时触发，虚拟DOM中的data发生改变页面上的data也发生改变（即新生成的虚拟DOM挂载上页面了）</li><li>类似人已经适应了新的习惯，改变已经生效并完成更新。</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="explain-4"><p>这个阶段类似于一个人的寿命终结阶段，Vue 组件准备完成最终的清理和结束。</p><p><strong><code>beforeDestroy</code></strong></p><ul><li>在实例销毁之前被调用。可以进行清理工作，如取消定时器、解绑事件等。</li><li>组件销毁时触发</li><li>类似一个人在离世前，安排遗愿和做一些后事的准备。</li></ul><p><strong><code>destroyed</code></strong></p><ul><li>在实例销毁之后被调用。此时组件已经被完全销毁，事件监听和数据绑定都被解除。</li><li>组件销毁时触发，<code>vue</code> 实例解除了事件监听以及和 <code>DOM</code> 绑定（无响应了），但 <code>DOM</code>节点依旧存在</li><li>类似一个人已经离世，所有关联的事物都已经解除。</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></li><li><p><strong>💡<code>Vue</code> 生命周期图解</strong></p><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308091741172.png" alt="Vue 实例生命周期" style="zoom:67%;float:left"></p></li><li><p><strong>🛠️代码实现</strong></p><p>假设 通过 计数器 按钮实现 <code>Vue</code> 的生命周期</p><ul><li><code>HTML</code> 模板和数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>计数器：&#123;&#123; counter &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;increment&quot;</span>&gt;</span>增加<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;destroy&quot;</span>&gt;</span>销毁<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>Vue</code> 实例和数据</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  new Vue(&#123;</span><br><span class="line">    el: &#x27;#app&#x27;,</span><br><span class="line">    data: &#123;</span><br><span class="line">      counter: 0</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      increment() &#123;</span><br><span class="line">        this.counter++;</span><br><span class="line">      &#125;,</span><br><span class="line">      destroy() &#123;</span><br><span class="line">        this.$destroy();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    beforeCreate() &#123;</span><br><span class="line">      console.log(&#x27;beforeCreate: 实例正在创建中 ==&gt; 实例(this.counter)：&#x27;, this.counter, &#x27;，DOM节点：&#x27;, this.$el);</span><br><span class="line">    &#125;,</span><br><span class="line">    created() &#123;</span><br><span class="line">      console.log(&#x27;created: 实例已创建 ==&gt; 实例(this.counter)：&#x27;, this.counter, &#x27;，DOM节点：&#x27;, this.$el);</span><br><span class="line">    &#125;,</span><br><span class="line">    beforeMount() &#123;</span><br><span class="line">      console.log(&#x27;beforeMount: 在挂载到 DOM 之前 ==&gt; 实例(this.counter)：&#x27;, this.counter, &#x27;，DOM节点：&#x27;, this.$el);</span><br><span class="line">    &#125;,</span><br><span class="line">    mounted() &#123;</span><br><span class="line">      console.log(&#x27;mounted: 实例已挂载到 DOM ==&gt; 实例(this.counter)：&#x27;, this.counter, &#x27;，DOM节点：&#x27;, this.$el);</span><br><span class="line">    &#125;,</span><br><span class="line">    beforeUpdate() &#123;</span><br><span class="line">      console.log(&#x27;beforeUpdate: 在更新数据之前 ==&gt; 实例(this.counter)：&#x27;, this.counter, &#x27;，DOM节点：&#x27;, this.$el);</span><br><span class="line">    &#125;,</span><br><span class="line">    updated() &#123;</span><br><span class="line">      console.log(&#x27;updated: 数据已更新 ==&gt; 实例(this.counter)：&#x27;, this.counter, &#x27;，DOM节点：&#x27;, this.$el);</span><br><span class="line">    &#125;,</span><br><span class="line">    beforeDestroy() &#123;</span><br><span class="line">      console.log(&#x27;beforeDestroy: 实例即将被销毁 ==&gt; 实例(this.counter)：&#x27;, this.counter, &#x27;，DOM节点：&#x27;, this.$el);</span><br><span class="line">    &#125;,</span><br><span class="line">    destroyed() &#123;</span><br><span class="line">      console.log(&#x27;destroyed: 实例已被销毁 ==&gt; 实例(this.counter)：&#x27;, this.counter, &#x27;，DOM节点：&#x27;, this.$el);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>结果</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308091812537.gif" alt="动画" style="float:left"></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端框架 </category>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue-基础语法（二）</title>
      <link href="/posts/ce705295.html"/>
      <url>/posts/ce705295.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><span class="post-title-index">1. </span><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>具体细节参考 <a href="https://cn.vuejs.org/guide/introduction.html"><code>Vue</code> 官方文档</a> ，这一章的内容非常重要，我们开发完成之后会通过一个案例将这些知识点全部串起来。</p></blockquote><p>本文主要将讲解 <code>Vue</code> 的基础语法，包括如下内容：</p><ul><li>条件渲染（ v-if 、v-else、v-else-if、v-show）</li><li>列表渲染（ v-for ）</li><li>属性绑定（ v-bind、v-model ）</li><li>事件处理（ v-on ）</li><li>计算属性（ computed ）</li><li>监听器（ watch ）</li><li>Class 与 Style 绑定</li><li>任务清单-案例</li></ul><hr><h2 id="条件渲染"><span class="post-title-index">2. </span><a href="#条件渲染" class="headerlink" title="条件渲染"></a>条件渲染</h2><blockquote><p>如下四个条件渲染指令在开发中使用频率非常高，类似于java中的 <code>if</code>、<code>else</code>、<code>else-if</code>。例如，任务状态信息等需求。</p><ul><li><code>v-if</code></li><li><code>v-else</code></li><li><code>v-else-if</code></li><li><code>v-show</code></li></ul></blockquote><h3 id="v-if"><span class="post-title-index">2.1. </span><a href="#v-if" class="headerlink" title="v-if"></a>v-if</h3><blockquote><p><code>v-if</code>：用于条件判断指令，一般用于界面内容的渲染，该指令会走表达式为 <code>true</code> 的分支。</p></blockquote><h3 id="v-else"><span class="post-title-index">2.2. </span><a href="#v-else" class="headerlink" title="v-else"></a>v-else</h3><blockquote><p><code>v-else</code>: 一般结合 <code>v-if</code> 使用，该指令走与 <code>v-if</code> 相反的分支。</p></blockquote><h3 id="v-else-if"><span class="post-title-index">2.3. </span><a href="#v-else-if" class="headerlink" title="v-else-if"></a>v-else-if</h3><blockquote><p><code>v-else-if</code>：提供的是相应于v-if的，它可以连续多次重复使用。</p><p><code>v-else</code> 和 <code>v-else-if</code> 必须紧跟在 <code>v-if</code> 或 <code>v-else-if</code> 的后面，并且它们只能与相同父元素的 <code>v-if</code> 或 <code>v-else-if</code> 一起使用。</p></blockquote><p>具体信息如下图</p><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308071540037.png" style="zoom:50%;float:left"></p><p>假设，根据 <code>type</code> 类型展示不同的字母。</p><ul><li><code>HTML</code> 模板</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;type === &#x27;A&#x27;&quot;</span>&gt;</span> A <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else-if</span>=<span class="string">&quot;type === &#x27;B&#x27;&quot;</span>&gt;</span> B <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else-if</span>=<span class="string">&quot;type === &#x27;C&#x27;&quot;</span>&gt;</span> C <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else</span>&gt;</span> Not A/B/C <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>Vue</code> 实例和数据</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  new Vue(&#123;</span><br><span class="line">    el: &#x27;#app&#x27;,</span><br><span class="line">    data: &#123;</span><br><span class="line">      type: &quot;A&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>结果信息</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308071608321.png" alt="image-20230807160807290" style="zoom:100%;float:left"></p><h3 id="v-show"><span class="post-title-index">2.4. </span><a href="#v-show" class="headerlink" title="v-show"></a>v-show</h3><blockquote><p><code>v-show</code>：也是条件渲染指令，控制元素显示或者隐藏。 用法与 <code>v-if</code> 一致，但不能和 <code>v-else</code> 和 <code>v-else-if</code> 一起使用。</p></blockquote><p>假设，根据 <code>type</code> 类型展示不同的字母。</p><ul><li><code>HTML</code> 模板</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-show</span>=<span class="string">&quot;type === &#x27;A&#x27;&quot;</span>&gt;</span> A <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>Vue</code> 的实例和数据</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  new Vue(&#123;</span><br><span class="line">    el: &#x27;#app&#x27;,</span><br><span class="line">    data: &#123;</span><br><span class="line">      type: &quot;A&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>结果信息</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308071608321.png" alt="image-20230807160807290" style="zoom:100%;float:left"></p><h3 id="v-if-和-v-show-区别"><span class="post-title-index">2.5. </span><a href="#v-if-和-v-show-区别" class="headerlink" title="v-if 和 v-show 区别"></a><code>v-if</code> 和 <code>v-show</code> 区别</h3><ol><li><p><strong>渲染方式</strong></p><ul><li><code>v-if</code>：当条件为 <code>false</code> 时，元素中不会在 <code>DOM</code> 中存在，它会被完全移除。</li><li><code>v-show</code>：当条件为 <code>false</code> 时，元素仍然在 <code>DOM</code> 中存在，但是通过CSS样式将其隐藏（display）。</li></ul></li><li><p><strong>性能开销</strong></p><ul><li><code>v-if</code>：当条件为 <code>true</code> 时，<code>Vue</code> 会重新创建元素并渲染。当条件为 <code>false</code> 时，元素不会被渲染。这也就是说只要切换条件，元素都需要被创新创建和销毁，如果切换频繁这需要的性能开销就比较大了。</li><li><code>v-show</code>：当条件不管是 <code>true</code> 或者 <code>false</code> 元素都已经被渲染完成了，所以就不存在切换时的性能开销。</li></ul></li><li><p><strong>如何选择</strong></p><ul><li><p><code>v-if</code>：当条件为 <code>false</code> 时，我们也希望减少相关的 <code>DOM</code> 数量，那我们使用 <code>v-if</code> 就是合适的。</p><p>例如如下代码中，我希望展示列表页时，删除详情页的页面信息减少请求次数，就可以使用 <code>v-if</code> 来完成。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;class-style&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 根据状态渲染不同组件 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 当状态为 &#x27;list&#x27; 时，显示列表页 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">list-page</span> <span class="attr">v-if</span>=<span class="string">&quot;status === &#x27;list&#x27;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">list-page</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 当状态为 &#x27;detail&#x27; 时，显示详情页 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">detail-page</span> <span class="attr">v-else-if</span>=<span class="string">&quot;status === &#x27;detail&#x27;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">detail-page</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> <span class="title class_">ListPage</span> <span class="keyword">from</span> <span class="string">&#x27;./ListPage.vue&#x27;</span>; <span class="comment">// 导入列表页组件</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> <span class="title class_">DetailPage</span> <span class="keyword">from</span> <span class="string">&#x27;./DetailPage.vue&#x27;</span>; <span class="comment">// 导入详情页组件</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">components</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">ListPage</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">DetailPage</span></span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">status</span>: <span class="string">&#x27;list&#x27;</span>, <span class="comment">// 默认状态为 &#x27;list&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>v-show</code>：如果需要频繁切换时，而不产生较大的性能开销时，我们就可以使用 <code>v-show</code>。</p><p>例如如下代码中， 展开/收起文章的详细内容时。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h3</span>&gt;</span>&#123;&#123; article.title &#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;toggleContent(article)&quot;</span>&gt;</span>Toggle Content<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-show</span>=<span class="string">&quot;article.showContent&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123; article.content &#125;&#125;</span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">article</span>: &#123; <span class="attr">title</span>: <span class="string">&#x27;Article&#x27;</span>, <span class="attr">content</span>: <span class="string">&#x27;Content of Article&#x27;</span>, <span class="attr">showContent</span>: <span class="literal">false</span> &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">toggleContent</span>(<span class="params">article</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      article.<span class="property">showContent</span> = !article.<span class="property">showContent</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ol><hr><h2 id="列表渲染"><span class="post-title-index">3. </span><a href="#列表渲染" class="headerlink" title="列表渲染"></a>列表渲染</h2><blockquote><p>列表渲染（<code>v-for</code>）是非常非常非常常用的一个指令，在开发中 100% 会使用到的一个指令，类似于 <code>java</code> 中的 <code>for</code> 循环。</p></blockquote><h3 id="v-for"><span class="post-title-index">3.1. </span><a href="#v-for" class="headerlink" title="v-for"></a>v-for</h3><blockquote><p><code>v-for</code>：基于一个数组进行列表的渲染。例如，我们的 <code>form</code> 表单就一定会使用到。</p></blockquote><ul><li>语法</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;&#123; message &#125; in items&quot;</span>&gt;</span></span><br><span class="line">  &#123;&#123; message &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 有 index 索引时 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(&#123; message &#125;, index) in items&quot;</span>&gt;</span></span><br><span class="line">  &#123;&#123; message &#125;&#125; &#123;&#123; index &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><p>假设我们有一个数组，需要将数组里面的元素全部遍历出来，使用 <code>v-for</code> 实现。</p><ul><li><p><code>HTML</code> 模板</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">v-for</span>=<span class="string">&quot;item in items&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.message&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123; item.message &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>Vue</code> 实例和数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">      <span class="attr">items</span>: [</span><br><span class="line">        &#123; <span class="attr">message</span>: <span class="string">&#x27;Foo&#x27;</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">message</span>: <span class="string">&#x27;Bar&#x27;</span> &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>结果</p><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308071719211.png" alt="image-20230807171914191" style="zoom:100%;float:left"></p></li></ul><hr><h2 id="属性绑定"><span class="post-title-index">4. </span><a href="#属性绑定" class="headerlink" title="属性绑定"></a>属性绑定</h2><blockquote><p>属性绑定：在前端页面中如果需要将数据绑定在 <code>HTML</code> 元素或者表单的属性上时，我们需要这些属性绑定的值可以随着数据的变化而进行更新。</p><p>在属性绑定中，常用的指令有如下两种：</p><ul><li><code>v-bind</code></li><li><code>v-model</code></li></ul></blockquote><h3 id="v-bind"><span class="post-title-index">4.1. </span><a href="#v-bind" class="headerlink" title="v-bind"></a>v-bind</h3><blockquote><p><code>v-bind</code>：用于将数据绑定到 <strong><code>HTML</code> 元素</strong> 上，使属性值可以动态的随数据的变化而变化。 </p><p>如果绑定的值是 <code>null</code> 或者 <code>undefined</code>，那么该 attribute 将会从渲染的元素上移除。</p></blockquote><ul><li>语法</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:id</span>=<span class="string">&quot;dynamicId&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>其中 <code>v-bind</code> 可以省略不写，直接简化为 <code>:</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">:id</span>=<span class="string">&quot;dynamicId&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其中针对 <code>v-bind</code> 的典型用法应该时分页条，如下是 <a href="https://element-plus.org/zh-CN/component/pagination.html#%E8%AE%BE%E7%BD%AE%E6%9C%80%E5%A4%A7%E9%A1%B5%E7%A0%81%E6%8C%89%E9%92%AE%E6%95%B0"><code>Element-ui</code> 分页条</a> 的用法。</p><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308071821319.png" alt="image-20230807182109294" style="zoom:80%;float:left"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-pagination</span> <span class="attr">:page-size</span>=<span class="string">&quot;20&quot;</span> <span class="attr">:pager-count</span>=<span class="string">&quot;11&quot;</span> <span class="attr">layout</span>=<span class="string">&quot;prev, pager, next&quot;</span> <span class="attr">:total</span>=<span class="string">&quot;1000&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="v-model"><span class="post-title-index">4.2. </span><a href="#v-model" class="headerlink" title="v-model"></a>v-model</h3><blockquote><p><code>v-model</code>：用于将数据绑定在 <strong>表单元素（文本输入框、复选框、单选按钮等等）</strong> 上创建双向绑定数据，可以实现用户的输入与数据之间的同步。</p></blockquote><ul><li>语法</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">&quot;message&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;edit me&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>假设我们将多个复选框绑定到同一个数组</p><ul><li><code>HTML</code> 模板</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>Checked names: &#123;&#123; checkedNames &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">id</span>=<span class="string">&quot;jack&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Jack&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;checkedNames&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;jack&quot;</span>&gt;</span>Jack<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">id</span>=<span class="string">&quot;john&quot;</span> <span class="attr">value</span>=<span class="string">&quot;John&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;checkedNames&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;john&quot;</span>&gt;</span>John<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">id</span>=<span class="string">&quot;mike&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Mike&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;checkedNames&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;mike&quot;</span>&gt;</span>Mike<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>Vue</code> 实例和数据</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span><br><span class="line">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="attr">checkedNames</span>: []</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>结果</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308072218364.gif" alt="动画" style="float:left;"></p><hr><h2 id="事件处理"><span class="post-title-index">5. </span><a href="#事件处理" class="headerlink" title="事件处理"></a>事件处理</h2><blockquote><p>事件处理：在前端开发中我们有时需要监听 <code>DOM</code> 事件，并在触发时执行相应的 <code>JavaScript</code> 代码，控制数据的变化或执行特定的操作。</p><p>事件处理的值可以是如下两种：</p><ul><li><strong>内联事件处理器</strong></li><li><strong>方法事件处理器</strong></li><li><strong>自定义事件处理器（后面在组建通信时讲解）</strong></li><li>按钮修饰符</li></ul></blockquote><ul><li><code>Vue</code> 语法</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;handler&quot;</span>&gt;</span> Click Me <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>简写：省略 <code>v-on:</code> 修改为 <code>@</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;handler&quot;</span>&gt;</span> Click Me <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="内联事件处理器"><span class="post-title-index">5.1. </span><a href="#内联事件处理器" class="headerlink" title="内联事件处理器"></a>内联事件处理器</h3><blockquote><p>内联事件处理器：指的是在 <code>HTML</code> 元素中指定事件监听函数，类似于 <code>JavaScript</code> 的 <code>onclick</code> 事件。</p></blockquote><p>假设我们现在通过 <code>内联事件处理器</code> 实现点击按钮数字<code>＋1</code></p><ul><li><code>HTML</code> 模板</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span> Count is: &#123;&#123; count &#125;&#125; <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;count++&quot;</span>&gt;</span>Add 1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>Vue</code> 实例和数据</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span><br><span class="line">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="attr">count</span>: <span class="number">0</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>结果</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308081152597.gif" alt="动画" style="float:left"></p><h3 id="方法事件处理器"><span class="post-title-index">5.2. </span><a href="#方法事件处理器" class="headerlink" title="方法事件处理器"></a>方法事件处理器</h3><blockquote><p>方法事件处理器：如果简单的案例可以通过 <code>内联事件处理器</code> 进行解决，但业务一旦复杂，那么 <code>内联事件处理器</code> 的劣势（不够灵活）就出来了。这个时候我们将点击事件的处理逻辑提出来抽成一个方法，就形成了 <code>方法事件处理器</code>。</p></blockquote><p> 假设我们现在通过 <code>方法事件处理器</code> 实现点击按钮数字<code>＋1</code>。如下的案例虽然很简单，但是后续我们</p><ul><li><code>HTML</code> 模板</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span> Count is: &#123;&#123; count &#125;&#125; <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;add&quot;</span>&gt;</span>Add 1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>Vue</code> 实例和数据</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span><br><span class="line">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="attr">count</span>: <span class="number">0</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">methods</span>: &#123;</span><br><span class="line">      <span class="title function_">add</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">count</span>++</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>结果</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308081209134.gif" alt="动画" style="float:left"></p><hr><h2 id="计算属性"><span class="post-title-index">6. </span><a href="#计算属性" class="headerlink" title="计算属性"></a>计算属性</h2><blockquote><p>计算属性：我们在开发中，无法避免两个属性发生计算的，一旦某个属性的值发生变化，那么他们计算出来的结果也一定会发生变化，这个时候就需要使用到属性计算了。</p></blockquote><h3 id="computed"><span class="post-title-index">6.1. </span><a href="#computed" class="headerlink" title="computed"></a>computed</h3><blockquote><p>computed：当其依赖的属性的值发生变化的时，计算属性会重新计算。</p></blockquote><ul><li>语法</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">   </span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">computed</span>: &#123;</span><br><span class="line">  </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>假设我们需要判断当前数组的数量是否显示元素，不使用 计算属性 <code>computed</code></strong></p><ul><li><code>HTML</code> 模板</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Has published books:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; author.books.length &gt; 0 ? &#x27;Yes&#x27; : &#x27;No&#x27; &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>Vue</code> 实例和数据</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span><br><span class="line">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="attr">author</span>: &#123;</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&#x27;John Doe&#x27;</span>,</span><br><span class="line">          <span class="attr">books</span>: [</span><br><span class="line">            <span class="string">&#x27;Vue 2 - Advanced Guide&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;Vue 3 - Basic Guide&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;Vue 4 - The Mystery&#x27;</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>结果</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308081357460.png" alt="image-20230808135722435" style="float:left"></p><p><strong>假设我们需要判断当前数组的数量是否显示元素，使用 计算属性 <code>computed</code></strong></p><p><strong>计算属性带来的优点</strong></p><ul><li>复用性高：如果在后期我们使用组件开发，那将会导致大量的冗余代码。如果使用 <code>computed</code> 把复杂的逻辑封装为一个属性，使模板中的代码更简洁、易读。</li><li>性能提高： 计算属性具有自动缓存机制，只有当其依赖的响应式数据发生变化时，才会重新计算。</li></ul><p>使用 <code>computed</code> 修改之后的代码如下</p><ul><li><code>HTML</code> 模板</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Has published books:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; publishedBooksMessage &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>Vue</code> 实例和数据</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span><br><span class="line">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="attr">author</span>: &#123;</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&#x27;John Doe&#x27;</span>,</span><br><span class="line">          <span class="attr">books</span>: [</span><br><span class="line">            <span class="string">&#x27;Vue 2 - Advanced Guide&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;Vue 3 - Basic Guide&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;Vue 4 - The Mystery&#x27;</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">computed</span>: &#123;</span><br><span class="line">      <span class="comment">// 一个计算属性的 getter</span></span><br><span class="line">      publishedBooksMessage () &#123;</span><br><span class="line">        <span class="comment">// `this` 指向当前组件实例</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">author</span>.<span class="property">books</span>.<span class="property">length</span> &gt; <span class="number">0</span> ? <span class="string">&#x27;Yes&#x27;</span> : <span class="string">&#x27;No&#x27;</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><hr><h2 id="监听器"><span class="post-title-index">7. </span><a href="#监听器" class="headerlink" title="监听器"></a>监听器</h2><blockquote><p>监听器：监听观察某个事件（程序）发生变化时，事件发生者（事件源） 就会给注册该事件的监听者（监听器）发送消息，告诉监听者某些信息已经发生变化了。</p></blockquote><h3 id="watch"><span class="post-title-index">7.1. </span><a href="#watch" class="headerlink" title="watch"></a>watch</h3><blockquote><p>watch：在 <code>Vue</code> 中，监听器通常指的是 <code>watch</code> 去监听属性来响应数据的变化。</p></blockquote><ul><li>浅层监听器语法</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">   </span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">watch</span>: &#123;</span><br><span class="line">  </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>深层监听器语法</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">watch</span>: &#123;</span><br><span class="line">    <span class="attr">someObject</span>: &#123;</span><br><span class="line">      <span class="title function_">handler</span>(<span class="params">newValue, oldValue</span>) &#123;</span><br><span class="line">        <span class="comment">// 注意：在嵌套的变更中，</span></span><br><span class="line">        <span class="comment">// 只要没有替换对象本身，</span></span><br><span class="line">        <span class="comment">// 那么这里的 `newValue` 和 `oldValue` 相同</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">deep</span>: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>❔监听器和计算属性有什么区别呢</strong></p><ul><li><p><strong>异步操作</strong>：如果说我们需要的数据发生变化需要调用外部 <code>API</code> 时，使用计算属性是不行的，因为计算属性采用的是同步，而监听器采用的异步。</p></li><li><p><strong>监控多个数据变化</strong>：如果说我们需要监听多个数据源发生变化，并且只要其中一个数据发生变化时就执行操作。那么监听器是更加合适的。</p></li></ul><p>假设我们使用监听器实现登录功能，需求如下：</p><ol><li>用户名长度必须大于5</li><li>密码长度必须大于8</li><li>登录按钮必须满足以上两个条件才可以登录</li></ol><ul><li><code>HTML</code> 模板</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Login Form<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span>Username:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">&quot;username&quot;</span> /&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span>Password:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">&quot;password&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> /&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">:disabled</span>=<span class="string">&quot;!isValid&quot;</span>&gt;</span>Login<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>Vue</code>  实例和数据</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  new Vue(&#123;</span><br><span class="line">    el: &quot;#app&quot;,</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        username: &quot;&quot;,</span><br><span class="line">        password: &quot;&quot;</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">    computed: &#123;</span><br><span class="line">      isValid() &#123;</span><br><span class="line">        return this.username.length &gt;= 5 &amp;&amp; this.password.length &gt;= 8;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    watch: &#123;</span><br><span class="line">      username(newValue, oldValue) &#123;</span><br><span class="line">        console.log(`Username changed from $&#123;oldValue&#125; to $&#123;newValue&#125;`);</span><br><span class="line">      &#125;,</span><br><span class="line">      password(newValue, oldValue) &#123;</span><br><span class="line">        console.log(`Password changed from $&#123;oldValue&#125; to $&#123;newValue&#125;`);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>结果</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308081554548.gif" alt="动画"></p><hr><h2 id="Class-与-Style-绑定"><span class="post-title-index">8. </span><a href="#Class-与-Style-绑定" class="headerlink" title="Class 与 Style 绑定"></a>Class 与 Style 绑定</h2><blockquote><p><strong>Class</strong> 与 <strong>Style</strong> 绑定：指的是将 <code>HTML</code> 元素的样式与 <code>CSS</code> 类进行联动的过程。</p></blockquote><h3 id="Class-绑定"><span class="post-title-index">8.1. </span><a href="#Class-绑定" class="headerlink" title="Class 绑定"></a><code>Class</code> 绑定</h3><blockquote><p>通过为 HTML 元素添加一个或多个类名，你可以将元素与预定义的 <code>CSS</code> 样式规则关联起来。</p></blockquote><ul><li><code>HTML</code> 模板</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box red-border&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>CSS</code> 样式</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: lightgray;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.red-border</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">2px</span> solid red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Style-绑定"><span class="post-title-index">8.2. </span><a href="#Style-绑定" class="headerlink" title="Style 绑定"></a><code>Style</code> 绑定</h3><blockquote><p>内联样式是直接在 HTML 元素中使用 <code>style</code> 属性来定义样式。</p></blockquote><ul><li><code>HTML</code> 模板</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width: 100px; height: 100px; background-color: lightgray;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>内联样式虽然灵活，但通常不推荐在大规模项目中频繁使用，因为它容易导致代码混乱，难以维护。</p><h3 id="Vue-绑定-class"><span class="post-title-index">8.3. </span><a href="#Vue-绑定-class" class="headerlink" title="Vue 绑定  class"></a><code>Vue</code> 绑定  <code>class</code></h3><blockquote><p>属性绑定的一个常见需求场景是操纵元素的 <code>CSS class</code> 列表和内联样式，这个需求是非常常见的。例如我们需要通过按钮控制表单是需要编辑还是保存。</p></blockquote><ul><li>语法</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">&quot;&#123; active: isActive &#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>假设我们通过按钮控制字体的样式</p><ul><li><code>HTML</code> 模板</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;toggleStatus(task)&quot;</span>&gt;</span>Toggle Status<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">&quot;&#123; active: isActive, &#x27;text-danger&#x27;: hasError &#125;&quot;</span>&gt;</span>Dynamic Class Binding<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>Vue</code> 实例和数据</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  new Vue(&#123;</span><br><span class="line">    el: &quot;#app&quot;,</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        isActive: false,</span><br><span class="line">        hasError: false</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      toggleStatus() &#123;</span><br><span class="line">        this.isActive = !this.isActive</span><br><span class="line">        this.hasError = !this.hasError</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li><code>css</code> 样式</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">  <span class="selector-class">.active</span> &#123;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.text-danger</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ul><li>结果</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308082113970.gif" alt="动画"></p><p>如下代码还可以改写为如下样式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;toggleStatus(task)&quot;</span>&gt;</span>Toggle Status<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">&quot;classObject&quot;</span>&gt;</span>Dynamic Class Binding<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">isActive</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">hasError</span>: <span class="literal">false</span></span></span><br><span class="line"><span class="language-javascript">      &#125;;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">computed</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">classObject</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">active</span>: <span class="variable language_">this</span>.<span class="property">isActive</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="string">&#x27;text-danger&#x27;</span>: <span class="variable language_">this</span>.<span class="property">hasError</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">toggleStatus</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">isActive</span> = !<span class="variable language_">this</span>.<span class="property">isActive</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">hasError</span> = !<span class="variable language_">this</span>.<span class="property">hasError</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="任务清单-案例"><span class="post-title-index">9. </span><a href="#任务清单-案例" class="headerlink" title="任务清单-案例"></a>任务清单-案例</h2><p>需求如下</p><ol><li>通过输入框输入任务点，添加到任务列表中；</li><li>在添加的任务点通过按钮实现任务是否完成以及删除任务点；</li><li>统计已经完成的任务数量</li><li>需要将任务列表添加进缓存，实现关闭浏览器也可以展示任务清单列表</li></ol><p>效果图如下：</p><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308082346330.gif" alt="动画" style="float:left"></p><ol><li><p><strong>实现前端页面</strong></p><ul><li><code>HTML</code> 前端页面</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Todo 任务清单<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;回车添加任务清单&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span> 任务点 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span>&gt;</span> 是否完成 <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span>&gt;</span> 删除任务 <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>已经完成的任务数量：0<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>通过输入框输入任务点，添加到任务列表中</strong></p><ul><li><code>HTML</code> 前端页面</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Todo 任务清单<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> @<span class="attr">keyup.enter</span>=<span class="string">&quot;addTask&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;newTask&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;回车添加任务清单&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">v-for</span>=<span class="string">&quot;(task , index) in taskList&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span> &#123;&#123; task.task &#125;&#125; <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span>&gt;</span> 是否完成 <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span>&gt;</span> 删除任务 <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>已经完成的任务数量：0<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>Vue</code> 实例和数据</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span><br><span class="line">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="attr">newTask</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="attr">taskList</span>: []</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">methods</span>: &#123;</span><br><span class="line">      <span class="comment">// 添加任务点</span></span><br><span class="line">      <span class="title function_">addTask</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">newTask</span>.<span class="title function_">trim</span>() !== <span class="string">&#x27;&#x27;</span>)&#123;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">taskList</span>.<span class="title function_">push</span>(&#123;<span class="attr">task</span>: <span class="variable language_">this</span>.<span class="property">newTask</span>&#125;);</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">newTask</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>结果</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308090048518.gif" alt="动画" style="float:left"></p></li><li><p><strong>在添加的任务点通过按钮实现任务 是否完成 以及 删除任务 </strong></p><ul><li><code>HTML</code> 前端页面</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Todo 任务清单<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> @<span class="attr">keyup.enter</span>=<span class="string">&quot;addTask&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;newTask&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;回车添加任务清单&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">v-for</span>=<span class="string">&quot;(task , index) in taskList&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">:class</span>=<span class="string">&quot;&#123; active: task.isActive &#125;&quot;</span>&gt;</span> &#123;&#123; task.task &#125;&#125; <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;completedTask(task)&quot;</span>&gt;</span>是否完成<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;removeTask(index)&quot;</span>&gt;</span>删除任务<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>已经完成的任务数量：0<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>CSS</code> 样式</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">  <span class="selector-class">.active</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: green;</span><br><span class="line">    <span class="attribute">text-decoration</span>: line-through;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><code>Vue</code> 实例和数据</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span><br><span class="line">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="attr">newTask</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="attr">taskList</span>: []</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">methods</span>: &#123;</span><br><span class="line">      <span class="comment">// 添加任务点</span></span><br><span class="line">      <span class="title function_">addTask</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">newTask</span>.<span class="title function_">trim</span>() !== <span class="string">&#x27;&#x27;</span>)&#123;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">taskList</span>.<span class="title function_">push</span>(&#123;<span class="attr">task</span>: <span class="variable language_">this</span>.<span class="property">newTask</span>, <span class="attr">isActive</span>: <span class="literal">false</span>&#125;);</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">newTask</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">// 是否完成</span></span><br><span class="line">      <span class="title function_">completedTask</span>(<span class="params">task</span>) &#123;</span><br><span class="line">        task.<span class="property">isActive</span> = !task.<span class="property">isActive</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">// 删除任务</span></span><br><span class="line">      <span class="title function_">removeTask</span>(<span class="params">index</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">taskList</span>.<span class="title function_">splice</span>(index, <span class="number">1</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li><p>结果</p><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308090055891.gif" alt="动画" style="float:left"></p></li></ul></li><li><p><strong>统计已经完成的任务数量</strong></p><ul><li><code>HTML</code> 模板</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Todo 任务清单<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> @<span class="attr">keyup.enter</span>=<span class="string">&quot;addTask&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;newTask&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;回车添加任务清单&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">v-for</span>=<span class="string">&quot;(task , index) in taskList&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">:class</span>=<span class="string">&quot;&#123; active: task.isActive &#125;&quot;</span>&gt;</span> &#123;&#123; task.task &#125;&#125; <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;completedTask(task)&quot;</span>&gt;</span>是否完成<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;removeTask(index)&quot;</span>&gt;</span>删除任务<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>已经完成的任务数量：&#123;&#123; finishedTotal &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>Vue</code> 实例和数据</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span><br><span class="line">    <span class="comment">// 属性计算</span></span><br><span class="line">    <span class="attr">computed</span>: &#123;</span><br><span class="line">      <span class="title function_">finishedTotal</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">taskList</span>.<span class="title function_">filter</span>(<span class="function"><span class="params">item</span> =&gt;</span> item.<span class="property">isActive</span>).<span class="property">length</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>结果</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308082346330.gif" alt="动画" style="float:left"></p></li><li><p><strong>需要将任务列表添加进缓存，实现关闭浏览器也可以展示任务清单列表</strong></p><ul><li><code>Vue</code> 实例和数据</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  new Vue(&#123;</span><br><span class="line">    el: &quot;#app&quot;,</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        newTask: &#x27;&#x27;,</span><br><span class="line">        taskList: []</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 监听数组</span><br><span class="line">    watch: &#123;</span><br><span class="line">      taskList: &#123;</span><br><span class="line">        handler(newTaskList, oldTaskList) &#123;</span><br><span class="line">          localStorage.setItem(&#x27;taskList&#x27;, JSON.stringify(newTaskList));</span><br><span class="line">        &#125;,</span><br><span class="line">        deep: true</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 在生命周期中会讲到 created</span><br><span class="line">    created() &#123;</span><br><span class="line">        const storedTasks = JSON.parse(localStorage.getItem(&quot;taskList&quot;));</span><br><span class="line">        if (storedTasks) &#123;</span><br><span class="line">          this.taskList = storedTasks;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>结果</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202308090121139.gif" alt="动画"></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端框架 </category>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue-基础概念（一）</title>
      <link href="/posts/1b94845f.html"/>
      <url>/posts/1b94845f.html</url>
      
        <content type="html"><![CDATA[<h2 id="Vue是什么❔"><span class="post-title-index">1. </span><a href="#Vue是什么❔" class="headerlink" title="Vue是什么❔"></a><code>Vue</code>是什么❔</h2><div class="note success simple"><p><code>Vue</code> 是一个开源的 <code>MVVM</code> 前端 <code>JavaScript</code> 框架，用于在 <code>Web</code> 上生成用户界面和单页应用程序。</p></div><p>通过 对比 <code>MVC</code> 架构和 <code>MVVM</code> 架构，可以明显看到使用 <code>Vue</code> 之后的区别</p><h3 id="MVC-架构"><span class="post-title-index">1.1. </span><a href="#MVC-架构" class="headerlink" title="MVC 架构"></a><code>MVC</code> 架构</h3><blockquote><p>以 JQuery，LayUI 为代表的一系列架构。这个时候前后端并没有分离的很彻底</p><p>M：Model（模型），负责存储数据和应用程序逻辑。</p><p>V：View（视图），负责显示数据和用户界面。</p><p>C：Controller（控制器），负责处理用户输入和应用程序逻辑。</p></blockquote><p><strong>图解</strong></p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9ibG9naW1hZ2UtMTI1NTYxODU5Mi5jb3MuYXAtY2hlbmdkdS5teXFjbG91ZC5jb20vaW1nMjAyMDAzMTgyMDQ4NDMucG5n" alt="MVC与三层架构理解 - 全栈程序员必看" style="zoom:50%;float:left"></p><p><strong>我们通过待办任务事项 代码 来展示</strong></p><ul><li><code>Model</code> 模型</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// （Model）</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TaskModel</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; tasks = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addTask</span><span class="params">(String task)</span> &#123;</span><br><span class="line">        tasks.add(task);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">removeTask</span><span class="params">(String task)</span> &#123;</span><br><span class="line">        tasks.remove(task);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;String&gt; <span class="title function_">getTasks</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> tasks;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>View</code> 视图</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TaskView</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">showTasks</span><span class="params">(List&lt;String&gt; tasks)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (String task : tasks) &#123;</span><br><span class="line">            System.out.println(task);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>Controller</code> 控制器</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TaskController</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> TaskModel model;</span><br><span class="line">    <span class="keyword">private</span> TaskView view;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">TaskController</span><span class="params">(TaskModel model, TaskView view)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.model = model;</span><br><span class="line">        <span class="built_in">this</span>.view = view;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addTask</span><span class="params">(String task)</span> &#123;</span><br><span class="line">        model.addTask(task);</span><br><span class="line">        updateView();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">removeTask</span><span class="params">(String task)</span> &#123;</span><br><span class="line">        model.removeTask(task);</span><br><span class="line">        updateView();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">updateView</span><span class="params">()</span> &#123;</span><br><span class="line">        view.showTasks(model.getTasks());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>测试</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MVCDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">TaskModel</span> <span class="variable">model</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TaskModel</span>();</span><br><span class="line">        <span class="type">TaskView</span> <span class="variable">view</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TaskView</span>();</span><br><span class="line">        <span class="type">TaskController</span> <span class="variable">controller</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TaskController</span>(model, view);</span><br><span class="line"></span><br><span class="line">        controller.addTask(<span class="string">&quot;买食品&quot;</span>);</span><br><span class="line">        controller.addTask(<span class="string">&quot;完成作业&quot;</span>);</span><br><span class="line">        controller.removeTask(<span class="string">&quot;买食品&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="MVVM-架构"><span class="post-title-index">1.2. </span><a href="#MVVM-架构" class="headerlink" title="MVVM 架构"></a><code>MVVM</code> 架构</h3><blockquote><p>以 Vue、Angular、React为代表的一系列框架</p><p><code>MVVM (Model-View-ViewModel)</code> 架构可以理解为 <code>MVC</code> 的增强版。</p><p>M：Model（模型），负责存储数据和业务逻辑。</p><p>V：View（视图），负责用户界面的显示。</p><p>VM：ViewModel（视图模型）， MVVM 的核心，它负责将视图与模型之间的通信和数据绑定，即双向绑定。</p></blockquote><p><strong>图解</strong></p><p><img src="https://pic4.zhimg.com/80/edd0080fb145315fbc96164c219fee7e_hd.jpg" alt="vue-mvvm设计模式" style="zoom:50%;float:left"></p><p><strong>代码详解</strong></p><ul><li><code>Model</code> 模型</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// （Model）</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TaskModel</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; tasks = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addTask</span><span class="params">(String task)</span> &#123;</span><br><span class="line">        tasks.add(task);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">removeTask</span><span class="params">(String task)</span> &#123;</span><br><span class="line">        tasks.remove(task);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;String&gt; <span class="title function_">getTasks</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> tasks;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>View</code> 视图</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TaskView</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">showTasks</span><span class="params">(List&lt;String&gt; tasks)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (String task : tasks) &#123;</span><br><span class="line">            System.out.println(task);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>ViewModel</code> 视图模型</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 视图模型（ViewModel）</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TaskViewModel</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> TaskModel model;</span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; taskStrings = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">TaskViewModel</span><span class="params">(TaskModel model)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.model = model;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateTaskStrings</span><span class="params">()</span> &#123;</span><br><span class="line">        taskStrings = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(model.getTasks());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;String&gt; <span class="title function_">getTaskStrings</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> taskStrings;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>测试</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MVVMDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">TaskModel</span> <span class="variable">model</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TaskModel</span>();</span><br><span class="line">        <span class="type">TaskViewModel</span> <span class="variable">viewModel</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TaskViewModel</span>(model);</span><br><span class="line">        <span class="type">TaskView</span> <span class="variable">view</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TaskView</span>();</span><br><span class="line"></span><br><span class="line">        model.addTask(<span class="string">&quot;买食品&quot;</span>);</span><br><span class="line">        model.addTask(<span class="string">&quot;完成作业&quot;</span>);</span><br><span class="line"></span><br><span class="line">        viewModel.updateTaskStrings();</span><br><span class="line">        view.showTasks(viewModel.getTaskStrings());</span><br><span class="line"></span><br><span class="line">        model.removeTask(<span class="string">&quot;买食品&quot;</span>);</span><br><span class="line"></span><br><span class="line">        viewModel.updateTaskStrings();</span><br><span class="line">        view.showTasks(viewModel.getTaskStrings());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="MVC-架构-和-MVVM-架构有什么区别？"><span class="post-title-index">1.3. </span><a href="#MVC-架构-和-MVVM-架构有什么区别？" class="headerlink" title="MVC 架构 和 MVVM 架构有什么区别？"></a><code>MVC</code> 架构 和 <code>MVVM</code> 架构有什么区别？</h3><p>通过代码我们可以看出如下区别</p><p><strong><code>MVC</code> 架构</strong></p><ul><li><strong>模型（Model）</strong>：存储数据和业务逻辑。在MVC示例中，模型包含待办事项的列表，并提供了添加和删除任务的方法。</li><li><strong>视图（View）</strong>：展示数据给用户。在MVC示例中，视图用于显示待办事项列表，并提供了用户与任务列表交互的界面。</li><li><strong>控制器（Controller）</strong>：协调模型和视图之间的交互。在MVC示例中，控制器负责接收用户的输入（添加或删除任务），然后将操作传递给模型来进行处理，并在必要时更新视图。</li></ul><p><strong><code>MVVM</code> 架构</strong></p><ul><li><strong>模型（Model）</strong>：存储数据和业务逻辑。</li><li><p><strong>视图（View）</strong>：展示数据给用户。</p></li><li><p><strong>视图模型（ViewModel）</strong>：在MVVM中，引入了视图模型作为模型数据和视图之间的桥梁。视图模型负责从模型获取数据，并将其转化为视图可以展示的格式。在示例中，视图模型通过更新任务字符串列表，将模型中的待办事项列表转化为可供视图显示的字符串列表。</p></li></ul><p>在这两个示例中，主要区别在于MVVM引入了视图模型（ViewModel）层，负责将模型数据转化为视图所需的格式。这样，视图只需要关心显示数据，而不需要处理数据的转化逻辑。这种分离增加了代码的可维护性和灵活性，特别是在大型应用中。</p><h2 id="💡Vue-解决了哪些问题"><span class="post-title-index">2. </span><a href="#💡Vue-解决了哪些问题" class="headerlink" title="💡Vue 解决了哪些问题"></a>💡<code>Vue</code> 解决了哪些问题</h2><blockquote><p>参考博文：<a href="https://cn.vuejs.org/guide/introduction.html#api-styles">简介 | Vue.js (vuejs.org)</a></p></blockquote><ul><li>解决了数据与视图的同步更新。</li><li><p>解决了复杂 <code>DOM</code> 操作</p><ul><li>之前通过 <code>JQuery</code> 时我们需要获取 <code>DOM</code> ，Vue.js 采用 <strong><code>虚拟DOM</code></strong> 来代替直接操作真实DOM，通过比较虚拟DOM的差异，最小化DOM操作，从而提高了性能，并解决了复杂的DOM操作问题。</li></ul></li><li><p>解决了组件化开发困难</p><ul><li>Vue.js支持组件化开发，它将应用划分为多个组件，每个组件具有独立的逻辑和视图。例如，一个表单的 <code>CRUD</code> 我们就可以通过不同的组件进行开发，然后在引入。</li></ul></li><li><p>解决了代码可维护性差</p><ul><li><code>LayUI</code> 开发的一个表单中可能 所有的 <code>CURD</code> 基本上都在一个 html 中完成，并没有实现模块化开发，导致耦合度高，不宜维护。</li><li><code>Vue</code> 就解决了这个问题，可以将一个需求拆分为多个模块进行开发和维护。</li></ul></li></ul><h2 id="🛠️Vue-快速上手"><span class="post-title-index">3. </span><a href="#🛠️Vue-快速上手" class="headerlink" title="🛠️Vue 快速上手"></a>🛠️<code>Vue</code> 快速上手</h2><p>如下是官网提供的 <code>Vue</code> <a href="https://play.vuejs.org/#eNo9jcEKwjAMhl/lt5fpQYfXUQfefAMvvRQbddC1pUuHUPrudg4HIcmXjyRZXEM4zYlEJ+T0iEPgXjn6BB8Zhp46WUZWDjCa9f6w9kAkTtH9CRinV4fmRtZ63H20Ztesqiylphqy3R5UYBqD1UyVAPk+9zkvV1CKbCv9poMLiTEfR2/IXpSoXomqZLtti/IFwVtA9A==">快速上手</a> 案例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">跟 Vue 说 Hello World！</span><br><span class="line">--&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      message: &#x27;Hello World!&#x27;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;h1&gt;&#123;&#123; message &#125;&#125;&lt;/h1&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><p>以 <code>MVVM</code> 架构进行解释说明</p><p><strong>View（视图）</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1&gt;&#123;&#123; message &#125;&#125;&lt;/h1&gt;</span><br></pre></td></tr></table></figure><p><strong>ViewModel（视图模型）</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export default &#123;</span><br><span class="line">// TODO</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Model（模型）</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      message: &#x27;Hello World!&#x27;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端框架 </category>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue-前言</title>
      <link href="/posts/120eec8d.html"/>
      <url>/posts/120eec8d.html</url>
      
        <content type="html"><![CDATA[<h2 id="🐻‍❄️-写作目的"><span class="post-title-index">1. </span><a href="#🐻‍❄️-写作目的" class="headerlink" title="🐻‍❄️ 写作目的"></a>🐻‍❄️ 写作目的</h2><blockquote><p>目前大部分公司使用的前端框架都是基于 <code>VUE</code> 进行开发的，作为后端工程师也是需要掌握 <code>VUE</code> 的相关知识，做部分简单的开发。所以本文本以 <code>Vue2.x</code> 版本 作为一个备忘录。</p></blockquote><p>目前大部分公司前后端开发工程师的模式如下：</p><ul><li>前端工程师：主要负责系统全局 <code>UI</code> 组件、核心组件、移动端开发。</li><li>后端工程师：主要负责后台接口、数据库、服务器的运维与开发，但也需要做部分前端工作，例如简单表单的 <code>CRUD</code> 开发。</li></ul><h2 id="😘-写作方式"><span class="post-title-index">2. </span><a href="#😘-写作方式" class="headerlink" title="😘 写作方式"></a>😘 写作方式</h2><blockquote><p>本文主要以需求推动相关技术的学习，因为这样学习速度最快。</p></blockquote><p>通常，在公司里，我们直接收到需求后，会在现有系统的基础上进行开发。这涉及到很多知识点，我们需要将这些知识点融合，逐一击破。</p><h2 id="🍃-写作风格"><span class="post-title-index">3. </span><a href="#🍃-写作风格" class="headerlink" title="🍃 写作风格"></a>🍃 写作风格</h2><ul><li><p>What：介绍相关知识点是什么。</p></li><li><p>Why：阐述该知识点解决了哪些问题。</p></li><li><p>How：使用相关案例来解决问题。</p></li></ul><h2 id="📇-写作大纲"><span class="post-title-index">4. </span><a href="#📇-写作大纲" class="headerlink" title="📇 写作大纲"></a>📇 写作大纲</h2><ul><li><p><a href="https://wickson.top/2023/07/10/Vue/Vue%20-%20%E5%89%8D%E8%A8%80/"><code>Vue</code> - 前言</a></p></li><li><p><a href="https://wickson.top/2023/07/11/Vue/Vue-%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5%EF%BC%88%E4%B8%80%EF%BC%89/"><code>Vue</code> - 基础概念（一）</a></p></li><li><code>Vue</code> - 基础语法（二）</li><li><code>Vue</code> - 生命周期（三）</li><li><code>Vue</code> - <code>Webpack</code>（四）</li><li><code>Vue</code> - 组件开发（五）</li><li><code>Vue</code> - 路由守卫（六）</li><li><code>Vue</code> - 实战案例（六）</li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端框架 </category>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL-事务（四）</title>
      <link href="/posts/698c9247.html"/>
      <url>/posts/698c9247.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><span class="post-title-index">1. </span><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>本文主要分为三个部分：</p><ul><li>第一个部分为 <code>MySQL</code> 事务的特性；</li><li>第二个部分为 <code>MySQL</code> 事务的隔离级别；</li><li>第三个部分为 <code>MySQL</code> 常见锁机制；</li><li>第四个部分为具体的实践案例。</li></ul></blockquote><h2 id="💡问题思考"><span class="post-title-index">2. </span><a href="#💡问题思考" class="headerlink" title="💡问题思考"></a>💡问题思考</h2><ol><li><p><strong><code>MySQL</code> 事务是什么？</strong></p><ul><li><code>MySQL</code> 事务是指一组 <code>SQL</code> 语句，它们被当成一个单独的工作单元， 要么全部执行成功，要么全部不执行。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">假设你有一个银行账户，你要向另一个账户转账 1000 元。</span><br><span class="line">这个操作涉及到两个 SQL 语句：一个是从你的账户扣除 1000 元，另一个是给对方的账户增加 1000 元。</span><br><span class="line">如果你不使用事务，那么可能会出现以下情况：</span><br><span class="line">1. 第一个 SQL 语句执行成功，但是第二个 SQL 语句执行失败，导致你的钱少了 1000 元，但是对方没有收到。</span><br><span class="line">2. 第一个 SQL 语句执行失败，但是第二个 SQL 语句执行成功，导致你的钱没有变化，但是对方多了 1000 元。</span><br><span class="line">3. 第一个 SQL 语句执行成功，但是在第二个 SQL 语句执行之前，有其他人查询了你或对方的账户余额，看到了不正确的数据。</span><br><span class="line">这些情况都会造成数据的不一致和不完整。如果你使用事务，那么你可以保证两个 SQL 语句要么都执行成功，要么都不执行。</span><br></pre></td></tr></table></figure></li><li><p><strong><code>MySQL</code> 事务解决了什么问题？</strong></p><ul><li><p>针对上诉问题，事务最少是需要满足一致性和隔离性。</p></li><li><p><strong>脏读</strong>：一个事务读取了另一个事务未提交的数据，<strong>不符合一致性</strong>。</p></li><li><strong>不可重复读</strong>：一个事务读取了另一个事务已经提交的 <code>update</code> 操作的数据，导致前后两次查询结果不一致，<strong>不符合隔离性</strong></li><li><strong>幻读</strong>：一个事务读取了另一个事务已经提交的 insert 操作的数据，导致前后两次查询结果不一致，<strong>不符合隔离性</strong>。</li></ul></li><li><p><strong><code>MySQL</code> 事务隔离级别是什么？</strong></p><ul><li><code>MySQL</code> 的事务隔离级别是指在<strong>多个事务并发运行时，互相是如何隔离的，从而来避免一些事务并发运行时产生的问题</strong>。</li><li><code>SQL</code> 标准中规定了四种事务隔离级别：<strong>读未提交（Read Uncommitted）</strong>、<strong>读已提交（Read Committed）</strong>、<strong>可重复读（Repeatable Read）</strong>、<strong>串行化（<code>Serializable</code>）</strong>。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">假设有两个人 A 和 B，他们都要从银行取钱。</span><br><span class="line">A 先开始取钱，他将银行卡中的余额从 1000 元改为 800 元，但是还没有完成取钱。此时，B 开始取钱，他需要查询银行卡中的余额。</span><br><span class="line">如果 B 的隔离级别是读未提交，则 B 可以读取到 A 修改后的余额 800 元；</span><br><span class="line">如果 B 的隔离级别是读已提交，则 B 只能读取到 A 修改前的余额 1000 元；</span><br><span class="line">如果 B 的隔离级别是可重复读，则 B 只能读取到 A 修改前的余额 1000 元；</span><br><span class="line">如果 B 的隔离级别是串行化，则 B 必须等待 A 完成取钱后才能开始查询。</span><br></pre></td></tr></table></figure></li></ol><h2 id="事务特性"><span class="post-title-index">3. </span><a href="#事务特性" class="headerlink" title="事务特性"></a>事务特性</h2><blockquote><p>事务是由一组 <code>SQL</code> 语句组成的逻辑处理单元,事务具有以下4个属性,通常简称为事务的 <strong>ACID</strong> 属性。</p></blockquote><ul><li>原子性(Atomicity) ：事务是一个原子操作单元,其对数据的修改,要么全都执行,要么全都不执行。</li><li>一致性(Consistent) ：在事务开始和完成时,数据都必须保持一致状态。这意味着所有相关的数据规则都必须应用于事务的修改,以保持数据的完整性。</li><li>隔离性(Isolation) ：数据库系统提供一定的隔离机制,保证事务在不受外部并发操作影响的“独立”环境执行。这意味着事务处理过程中的中间状态对外部是不可见的,反之亦然。</li><li>持久性(Durable) ：事务完成之后,它对于数据的修改是永久性的,即使出现系统故障也能够保持。</li></ul><h2 id="事务隔离级别"><span class="post-title-index">4. </span><a href="#事务隔离级别" class="headerlink" title="事务隔离级别"></a>事务隔离级别</h2><blockquote><p>从问题思考中，我们知道事务的隔离级别主要分为以下四类：</p><ul><li><strong>读未提交（Read Uncommitted）</strong></li><li><strong>读已提交（Read Committed）</strong></li><li><strong>可重复读（Repeatable Read）</strong></li><li><strong>串行化（<code>Serializable</code>）</strong></li></ul><p>而事务隔离级别主要解决了以下主要的三个问题：</p><ul><li><strong>脏读</strong></li><li><strong>不可重复读</strong></li><li><strong>幻读</strong></li></ul><p><strong><code>Mysql</code> 默认的事务隔离级别是可重复读，用Spring开发程序时，如果不设置隔离级别默认用 <code>Mysql</code> 设置的隔离级别，如果 <code>Spring</code> 设置了就用已经设置的隔离级别</strong></p></blockquote><ul><li><strong>脏读</strong>、<strong>不可重复读</strong> 和 <strong>幻读</strong>，其实都是数据库读一致性问题，必须由数据库提供一定的事务隔离机制来解决。</li></ul><div class="table-container"><table><thead><tr><th>隔离级别</th><th>脏读(Dirty Read)</th><th>不可重复读(NonRepeatable Read)</th><th>幻读(Phantom Read)</th></tr></thead><tbody><tr><td>读未提交(Read uncommitted)</td><td>可能</td><td>可能</td><td>可能</td></tr><tr><td>读已提交(Read committed)</td><td>不可能</td><td>可能</td><td>可能</td></tr><tr><td>可重复读(Repeatableread)</td><td>不可能</td><td>不可能</td><td>可能</td></tr><tr><td>可串行化(Serializable)</td><td>不可能</td><td>不可能</td><td>不可能</td></tr></tbody></table></div><ul><li>查看当前数据库的事务隔离级别：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;tx_isolation&#x27;</span>;</span><br></pre></td></tr></table></figure><ul><li>设置事务隔离级别：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> tx_isolation<span class="operator">=</span><span class="string">&#x27;REPEATABLE-READ&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="锁"><span class="post-title-index">5. </span><a href="#锁" class="headerlink" title="锁"></a>锁</h2><blockquote><p>锁的本质是解决了 计算机协调多个进程或线程并发访问某一资源的机制。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL-执行计划（三）</title>
      <link href="/posts/efe48dc1.html"/>
      <url>/posts/efe48dc1.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><span class="post-title-index">1. </span><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>本文主要分为三个部分，第一个部分讲解 <code>MySQL</code> 查询时会经过哪些过程；第二个部分讲解 <code>Explain</code> 的基本用法；第三个部分讲解 <code>Explain</code> 参数分析。 </p><p>如下很多操作只是一些基本的操作，如果相对 <code>MySQL</code> 进行深层次的学习还是要对 B+ 树有一定了解</p><p><strong>准备工作</strong></p><ul><li>导入 <code>SQL</code> 文件：<strong><a href="https://www.yuque.com/attachments/yuque/0/2023/sql/3009312/1675232949321-223f7e2a-763c-4fd0-b3ab-3a780183719d.sql?_lake_card=%7B%22src%22%3A%22https%3A%2F%2Fwww.yuque.com%2Fattachments%2Fyuque%2F0%2F2023%2Fsql%2F3009312%2F1675232949321-223f7e2a-763c-4fd0-b3ab-3a780183719d.sql%22%2C%22name%22%3A%22explain_demo_test.sql%22%2C%22size%22%3A2597%2C%22ext%22%3A%22sql%22%2C%22source%22%3A%22%22%2C%22status%22%3A%22done%22%2C%22download%22%3Atrue%2C%22taskId%22%3A%22u85e0af12-a42a-4726-8f10-7f751f7fe49%22%2C%22taskType%22%3A%22upload%22%2C%22type%22%3A%22%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22u94be3304%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22card%22%3A%22file%22%7D">explain_demo_test.sql</a></strong> 之后会有三张表（actor、film、film_actor）</li></ul></blockquote><h2 id="MySQL-查询过程"><span class="post-title-index">2. </span><a href="#MySQL-查询过程" class="headerlink" title="MySQL 查询过程"></a><code>MySQL</code> 查询过程</h2><p>服务器程序处理来自客户端的查询请求大致需要经过三个部分 : <strong>连接管理、解析与优化、存储引擎</strong>。</p><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305151907705.png" alt="image2022-12-28_16-1-44.png"><br><code>MySQL</code> 查询过程如下：</p><ol><li>客户端将查询发送到 <code>MySQL</code> 服务器</li><li>服务器先检查<strong>查询缓存</strong>，如果命中，立即返回缓存中的结果；否则进入下一阶段</li><li>服务器对 <code>SQL</code> 进行<strong>解析</strong>、<strong>预处理</strong>，再由<strong>优化器</strong>生成对象的<strong>执行计划</strong></li><li><code>MySQL</code> 根据<strong>优化器</strong>生成的<strong>执行计划</strong>，调用<strong><code>存储引擎API</code></strong>来执行查询</li><li>服务器将结果返回给客户端，同时<strong>缓存查询结果</strong></li></ol><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305151907957.png" alt="image2022-12-27_15-52-41.png"></p><h2 id="Explain-基本介绍"><span class="post-title-index">3. </span><a href="#Explain-基本介绍" class="headerlink" title="Explain 基本介绍"></a>Explain 基本介绍</h2><h3 id="Explain-是什么？"><span class="post-title-index">3.1. </span><a href="#Explain-是什么？" class="headerlink" title="Explain 是什么？"></a>Explain 是什么？</h3><ul><li><code>MySQL</code> 的 Explain 是一个用于查看 SELECT、INSERT、UPDATE、DELETE 语句 <strong>执行计划 </strong>的命令。</li><li>执行计划：指 <code>SQL</code> 语句在经过 <code>MySQL</code> <strong>查询优化器 </strong>的优化会后，具体的执行方式。</li></ul><h3 id="Explain-解决了那些问题？"><span class="post-title-index">3.2. </span><a href="#Explain-解决了那些问题？" class="headerlink" title="Explain 解决了那些问题？"></a>Explain 解决了那些问题？</h3><ul><li>它可以帮助我们<strong>了解查询执行计划</strong>，并<strong>识别潜在的性能问题</strong>。</li></ul><h3 id="Explain-如何使用？"><span class="post-title-index">3.3. </span><a href="#Explain-如何使用？" class="headerlink" title="Explain 如何使用？"></a>Explain 如何使用？</h3><ul><li>语法</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 第一条：<span class="keyword">SQL</span>基础执行信息</span><br><span class="line">EXPLAIN EXTENDED <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> actor;</span><br><span class="line"># MySQL优化后的查询语句，可以看到优化器具体优化的<span class="keyword">SQL</span>信息</span><br><span class="line"><span class="keyword">SHOW</span> WARNINGS;</span><br></pre></td></tr></table></figure><ul><li>示例</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain extended <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> actor;<span class="keyword">show</span> warnings;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span> <span class="operator">|</span> partitions <span class="operator">|</span> type <span class="operator">|</span> possible_keys <span class="operator">|</span> key  <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>  <span class="operator">|</span> <span class="keyword">rows</span> <span class="operator">|</span> filtered <span class="operator">|</span> Extra <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> SIMPLE      <span class="operator">|</span> actor <span class="operator">|</span> <span class="keyword">NULL</span>       <span class="operator">|</span> <span class="keyword">ALL</span>  <span class="operator">|</span> <span class="keyword">NULL</span>          <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span>    <span class="number">3</span> <span class="operator">|</span>   <span class="number">100.00</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.03</span> sec)</span><br><span class="line"> </span><br><span class="line"><span class="operator">+</span><span class="comment">---------+------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Level   <span class="operator">|</span> Code <span class="operator">|</span> Message                                                                                                                                                                                                 <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Warning <span class="operator">|</span> <span class="number">1681</span> <span class="operator">|</span> <span class="string">&#x27;EXTENDED&#x27;</span> <span class="keyword">is</span> deprecated <span class="keyword">and</span> will be removed <span class="keyword">in</span> a future release.                                                                                                                                       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Note    <span class="operator">|</span> <span class="number">1003</span> <span class="operator">|</span> <span class="comment">/* select#1 */</span> <span class="keyword">select</span> `explain_demo_test`.`actor`.`id` <span class="keyword">AS</span> `id`,`explain_demo_test`.`actor`.`name` <span class="keyword">AS</span> `name`,`explain_demo_test`.`actor`.`update_time` <span class="keyword">AS</span> `update_time` <span class="keyword">from</span> `explain_demo_test`.`actor` <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.03</span> sec)</span><br></pre></td></tr></table></figure><h2 id="Explain-参数分析"><span class="post-title-index">4. </span><a href="#Explain-参数分析" class="headerlink" title="Explain 参数分析"></a>Explain 参数分析</h2><ul><li>每张表对应的索引情况，使用Explain得到的结果都不一样，执行 Explain 请对照索引情况看</li></ul><div class="tabs" id="explain"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#explain-1">id</button></li><li class="tab"><button type="button" data-href="#explain-2">select_type</button></li><li class="tab"><button type="button" data-href="#explain-3">table</button></li><li class="tab"><button type="button" data-href="#explain-4">partitions</button></li><li class="tab"><button type="button" data-href="#explain-5">type</button></li><li class="tab"><button type="button" data-href="#explain-6">possible_keys</button></li><li class="tab"><button type="button" data-href="#explain-7">key</button></li><li class="tab"><button type="button" data-href="#explain-8">key_len</button></li><li class="tab"><button type="button" data-href="#explain-9">ref</button></li><li class="tab"><button type="button" data-href="#explain-10">rows</button></li><li class="tab"><button type="button" data-href="#explain-11">filtered</button></li><li class="tab"><button type="button" data-href="#explain-12">Extra</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="explain-1"><p>select 的序列号，表示优化器访问表的顺序。</p><ul><li>序号越大执行优先级越高，id相同则从上往下执行，id为NULL最后执行</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="explain-2"><p>查询数据的操作类型（简单、复杂），表示使用的 SELECT 语句的类型</p><ul><li>simple：简单查询，单表查询</li><li>primary：复杂查询中最外层的 select</li><li>subquery：包含在 select 中的子查询（不在 from 子句中）</li><li>derived：包含在 from 子句中的子查询，也称为派生表（derived）</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="explain-3"><p>查询数据的操作类型（简单、复杂），表示使用的 SELECT 语句的类型</p><ul><li>表示被访问的表的名称</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="explain-4"><p>匹配的分区信息，不用管</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="explain-5"><p>表示访问表的关联类型或者连接类型。一些常见的连接类型包括：</p><ul><li>system：正在访问只有一行的表。</li><li>const：使用具有唯一或主键约束的索引列访问表。</li><li>eq_ref：使用唯一索引或主键访问表。</li><li>ref：使用非唯一索引访问表。</li><li>range : 使用一个索引来检索给定范围的行, 通常出现在 in(), between ,&gt; ,&lt;, &gt;= 等操作中</li><li>index：只遍历索引树。</li><li>ALL：全表扫描，性能最拉垮。</li></ul><p><strong>优先级排序：system &gt; const &gt; eq_ref &gt; ref &gt; range &gt; index &gt; ALL</strong></p><p><strong>通常优化至少到 range 级别，最好能优化到ref</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="explain-6"><p>查询数据可能使用哪些索引来查找</p><ul><li>如果该列是NULL，则没有使用索引</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="explain-7"><p>显示 MySQL 实际使用的索引</p><ul><li>如果为 NULL，则没有使用索引查询</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="explain-8"><p>表示索引中使用的字节数，通过该列计算查询中使用的索引的长度</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="explain-9"><p>表的索引字段关联了哪张表的哪个字段或常量</p><ul><li>const（常量）</li><li>字段名（例：film.id）</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="explain-10"><p>估算出找到所需的记录或所需读取的行数</p><ul><li>数值越小越好</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="explain-11"><p>结果的行数占读取行数的百分比</p><ul><li>值越大越好</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="explain-12"><p>十分重要的额外信息，如下是常见的值</p><ul><li>Using index：使用覆盖索引。</li><li>Using where：使用 where 语句来处理结果，并且查询的列未被索引覆盖。</li><li>Using index condition：查询的列不完全被索引覆盖，where条件中是一个前导列的范围；</li><li>Using temporary：mysql需要创建一张临时表来处理查询。</li><li>Using filesort：外部排序而不是索引排序，数据较小时从内存排序，否则需要在磁盘完成排序。</li><li>Select tables optimized away：使用某些聚合函数（比如 max、min）来访问存在索引的某个字段</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="id"><span class="post-title-index">4.1. </span><a href="#id" class="headerlink" title="id"></a>id</h3><blockquote><p>id：<strong>select 查询序列号</strong></p><ul><li>序号越大执行优先级越高；</li><li>id相同，执行顺序由上至下；</li><li>id不同，id值越大优先级越高，越先被执行；</li><li>id为NULL最后执行；</li></ul></blockquote><h3 id="select-type"><span class="post-title-index">4.2. </span><a href="#select-type" class="headerlink" title="select_type"></a>select_type</h3><blockquote><p>select_type：<strong>select_type 表示对应行是简单还是复杂的查询</strong></p><ul><li><strong>SIMPLE</strong>        ： 简单查询，一般指单表查询。</li><li><strong>DERIVED     </strong> ：派生表，包含在 from 子句中的子查询。</li><li><strong>PRIMARY     </strong>：复杂查询，一般指最外层的 select。</li><li><strong>SUBQUERY</strong>  ：包含在 select 中的子查询（不在 from 子句中） 。</li><li><strong>UNION       </strong> ： 表示使用 UNION 运算符的 SELECT 语句。</li></ul></blockquote><ul><li>示例</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">#关闭mysql5<span class="number">.7</span>新特性对衍生表的合并优化</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">set</span> session optimizer_switch<span class="operator">=</span><span class="string">&#x27;derived_merge=off&#x27;</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.39</span> sec)</span><br><span class="line"> </span><br><span class="line"># Explain 执行的过程，其中对应的 select_type</span><br><span class="line"># EXPLAIN <span class="keyword">SELECT</span>                             <span class="operator">=</span><span class="operator">=</span><span class="operator">&gt;</span>   id <span class="operator">=</span> <span class="number">1</span>; select_type <span class="operator">=</span> <span class="keyword">PRIMARY</span>;  <span class="keyword">table</span> <span class="operator">=</span> <span class="operator">&lt;</span>derived3<span class="operator">&gt;</span></span><br><span class="line">#   ( <span class="keyword">SELECT</span> <span class="number">1</span> <span class="keyword">FROM</span> actor <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">1</span> )     <span class="operator">=</span><span class="operator">=</span><span class="operator">&gt;</span>   id <span class="operator">=</span> <span class="number">2</span>; select_type <span class="operator">=</span> SUBQUERY; <span class="keyword">table</span> <span class="operator">=</span> actor</span><br><span class="line"># <span class="keyword">FROM</span></span><br><span class="line">#   ( <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> film <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">1</span> ) der; <span class="operator">=</span><span class="operator">=</span><span class="operator">&gt;</span>   id <span class="operator">=</span> <span class="number">3</span>; select_type <span class="operator">=</span> DERIVED;  <span class="keyword">table</span> <span class="operator">=</span> film</span><br><span class="line"> </span><br><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> (<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> actor <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span>) <span class="keyword">from</span> (<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> film <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span>) der;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+------------+------------+--------+---------------+---------+---------+-------+------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span>      <span class="operator">|</span> partitions <span class="operator">|</span> type   <span class="operator">|</span> possible_keys <span class="operator">|</span> key     <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>   <span class="operator">|</span> <span class="keyword">rows</span> <span class="operator">|</span> filtered <span class="operator">|</span> Extra       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+------------+------------+--------+---------------+---------+---------+-------+------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> <span class="keyword">PRIMARY</span>     <span class="operator">|</span> <span class="operator">&lt;</span>derived3<span class="operator">&gt;</span> <span class="operator">|</span> <span class="keyword">NULL</span>       <span class="operator">|</span> <span class="keyword">system</span> <span class="operator">|</span> <span class="keyword">NULL</span>          <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span>   <span class="number">100.00</span> <span class="operator">|</span> <span class="keyword">NULL</span>        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span> DERIVED     <span class="operator">|</span> film       <span class="operator">|</span> <span class="keyword">NULL</span>       <span class="operator">|</span> const  <span class="operator">|</span> <span class="keyword">PRIMARY</span>       <span class="operator">|</span> <span class="keyword">PRIMARY</span> <span class="operator">|</span> <span class="number">4</span>       <span class="operator">|</span> const <span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span>   <span class="number">100.00</span> <span class="operator">|</span> <span class="keyword">NULL</span>        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> SUBQUERY    <span class="operator">|</span> actor      <span class="operator">|</span> <span class="keyword">NULL</span>       <span class="operator">|</span> const  <span class="operator">|</span> <span class="keyword">PRIMARY</span>       <span class="operator">|</span> <span class="keyword">PRIMARY</span> <span class="operator">|</span> <span class="number">4</span>       <span class="operator">|</span> const <span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span>   <span class="number">100.00</span> <span class="operator">|</span> <span class="keyword">Using</span> index <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+------------+------------+--------+---------------+---------+---------+-------+------+----------+-------------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.03</span> sec)</span><br><span class="line"> </span><br><span class="line"># 还原默认配置;</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">set</span> session optimizer_switch<span class="operator">=</span><span class="string">&#x27;derived_merge=on&#x27;</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"> </span><br><span class="line"># select_type <span class="operator">=</span> SIMPLE ，说明使用的是单表</span><br><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> film <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+-------+---------------+---------+---------+-------+------+----------+-------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span> <span class="operator">|</span> partitions <span class="operator">|</span> type  <span class="operator">|</span> possible_keys <span class="operator">|</span> key     <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>   <span class="operator">|</span> <span class="keyword">rows</span> <span class="operator">|</span> filtered <span class="operator">|</span> Extra <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+-------+---------------+---------+---------+-------+------+----------+-------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> SIMPLE      <span class="operator">|</span> film  <span class="operator">|</span> <span class="keyword">NULL</span>       <span class="operator">|</span> const <span class="operator">|</span> <span class="keyword">PRIMARY</span>       <span class="operator">|</span> <span class="keyword">PRIMARY</span> <span class="operator">|</span> <span class="number">4</span>       <span class="operator">|</span> const <span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span>   <span class="number">100.00</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+-------+---------------+---------+---------+-------+------+----------+-------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.03</span> sec)</span><br><span class="line"> </span><br><span class="line"># select_type <span class="operator">=</span> <span class="keyword">UNION</span> ，说明在 <span class="keyword">union</span> 中的第二个和随后的 <span class="keyword">select</span></span><br><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="number">1</span> <span class="keyword">union</span> <span class="keyword">all</span> <span class="keyword">select</span> <span class="number">1</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+----------------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span> <span class="operator">|</span> partitions <span class="operator">|</span> type <span class="operator">|</span> possible_keys <span class="operator">|</span> key  <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>  <span class="operator">|</span> <span class="keyword">rows</span> <span class="operator">|</span> filtered <span class="operator">|</span> Extra          <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+----------------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> <span class="keyword">PRIMARY</span>     <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span> <span class="keyword">NULL</span>       <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NULL</span>          <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NULL</span>     <span class="operator">|</span> <span class="keyword">No</span> tables used <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> <span class="keyword">UNION</span>       <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span> <span class="keyword">NULL</span>       <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NULL</span>          <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NULL</span>     <span class="operator">|</span> <span class="keyword">No</span> tables used <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+----------------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.03</span> sec)</span><br></pre></td></tr></table></figure><h3 id="table"><span class="post-title-index">4.3. </span><a href="#table" class="headerlink" title="table"></a>table</h3><blockquote><p>table：<strong>这一列表示 explain 的一行正在访问哪个表。</strong></p><ul><li>当 from 子句中有子查询时，table 列是 <derivenn> 格式，表示当前查询依赖 id=N 的查询，于是先执行 id=N 的查询。</derivenn></li></ul></blockquote><p><strong>衍生表</strong></p><ul><li>执行这行如果想要得到衍生表，需要执行以下两条语句：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#关闭mysql5<span class="number">.7</span>新特性对衍生表的合并优化</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">set</span> session optimizer_switch<span class="operator">=</span><span class="string">&#x27;derived_merge=off&#x27;</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.39</span> sec)</span><br><span class="line"></span><br><span class="line"># 得到的 <span class="keyword">table</span> 列中就存在衍生表信息。</span><br><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> film <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span>) der;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+------------+------------+--------+---------------+---------+---------+-------+------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span>      <span class="operator">|</span> partitions <span class="operator">|</span> type   <span class="operator">|</span> possible_keys <span class="operator">|</span> key     <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>   <span class="operator">|</span> <span class="keyword">rows</span> <span class="operator">|</span> filtered <span class="operator">|</span> Extra       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+------------+------------+--------+---------------+---------+---------+-------+------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> <span class="keyword">PRIMARY</span>     <span class="operator">|</span> <span class="operator">&lt;</span>derived2<span class="operator">&gt;</span> <span class="operator">|</span> <span class="keyword">NULL</span>       <span class="operator">|</span> <span class="keyword">system</span> <span class="operator">|</span> <span class="keyword">NULL</span>          <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span>   <span class="number">100.00</span> <span class="operator">|</span> <span class="keyword">NULL</span>        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> DERIVED     <span class="operator">|</span> film       <span class="operator">|</span> <span class="keyword">NULL</span>       <span class="operator">|</span> const  <span class="operator">|</span> <span class="keyword">PRIMARY</span>       <span class="operator">|</span> <span class="keyword">PRIMARY</span> <span class="operator">|</span> <span class="number">4</span>       <span class="operator">|</span> const <span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span>   <span class="number">100.00</span> <span class="operator">|</span> <span class="keyword">NULL</span>        <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+------------+------------+--------+---------------+---------+---------+-------+------+----------+-------------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.06</span> sec)</span><br></pre></td></tr></table></figure><h3 id="type"><span class="post-title-index">4.4. </span><a href="#type" class="headerlink" title="type"></a>type</h3><blockquote><p>type：这一列表示<strong>关联类型</strong>或<strong>访问类型</strong>，即<strong>MySQL决定如何查找表中的行</strong>，查找数据行记录的大概范围。</p><p>依次从最优到最差分别为，一般来说，得保证查询达到range级别，最好达到ref：</p><ol><li><strong>null</strong> </li><li><strong>system</strong></li><li><strong>const </strong></li><li><strong>eq_ref </strong></li><li><strong>ref</strong></li><li><strong>range</strong></li><li><strong>index</strong> </li><li><strong>ALL</strong></li></ol></blockquote><ol><li><p>NULL</p><blockquote><p>mysql能够在<strong>优化阶段分解查询语句</strong>，在执行阶段用不着再访问表或索引。</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="built_in">min</span>(id) <span class="keyword">from</span> film;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+------------------------------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span> <span class="operator">|</span> partitions <span class="operator">|</span> type <span class="operator">|</span> possible_keys <span class="operator">|</span> key  <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>  <span class="operator">|</span> <span class="keyword">rows</span> <span class="operator">|</span> filtered <span class="operator">|</span> Extra                        <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+------------------------------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> SIMPLE      <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span> <span class="keyword">NULL</span>       <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NULL</span>          <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NULL</span>     <span class="operator">|</span> <span class="keyword">Select</span> tables optimized away <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.05</span> sec)</span><br></pre></td></tr></table></figure></li><li><p>const, system</p><blockquote><p>mysql能对查询的某部分进行优化并将其转化成一个常量，所以表最多有一个匹配行，读取1次，速度比较快。</p><p><strong>system是const的特例</strong>，表里只有一条元组匹配时为system</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain extended <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> film <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span>) tmp;<span class="keyword">show</span> warnings;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+------------+------------+--------+---------------+---------+---------+-------+------+----------+-------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span>      <span class="operator">|</span> partitions <span class="operator">|</span> type   <span class="operator">|</span> possible_keys <span class="operator">|</span> key     <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>   <span class="operator">|</span> <span class="keyword">rows</span> <span class="operator">|</span> filtered <span class="operator">|</span> Extra <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+------------+------------+--------+---------------+---------+---------+-------+------+----------+-------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> <span class="keyword">PRIMARY</span>     <span class="operator">|</span> <span class="operator">&lt;</span>derived2<span class="operator">&gt;</span> <span class="operator">|</span> <span class="keyword">NULL</span>       <span class="operator">|</span> <span class="keyword">system</span> <span class="operator">|</span> <span class="keyword">NULL</span>          <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span>   <span class="number">100.00</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> DERIVED     <span class="operator">|</span> film       <span class="operator">|</span> <span class="keyword">NULL</span>       <span class="operator">|</span> const  <span class="operator">|</span> <span class="keyword">PRIMARY</span>       <span class="operator">|</span> <span class="keyword">PRIMARY</span> <span class="operator">|</span> <span class="number">4</span>       <span class="operator">|</span> const <span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span>   <span class="number">100.00</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+------------+------------+--------+---------------+---------+---------+-------+------+----------+-------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.10</span> sec)</span><br><span class="line"> </span><br><span class="line"><span class="operator">+</span><span class="comment">---------+------+-------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Level   <span class="operator">|</span> Code <span class="operator">|</span> Message                                                           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+------+-------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Warning <span class="operator">|</span> <span class="number">1681</span> <span class="operator">|</span> <span class="string">&#x27;EXTENDED&#x27;</span> <span class="keyword">is</span> deprecated <span class="keyword">and</span> will be removed <span class="keyword">in</span> a future release. <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Note    <span class="operator">|</span> <span class="number">1003</span> <span class="operator">|</span> <span class="comment">/* select#1 */</span> <span class="keyword">select</span> <span class="string">&#x27;1&#x27;</span> <span class="keyword">AS</span> `id`,<span class="string">&#x27;film1&#x27;</span> <span class="keyword">AS</span> `name` <span class="keyword">from</span> dual     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+------+-------------------------------------------------------------------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.05</span> sec)</span><br></pre></td></tr></table></figure></li><li><p>eq_ref</p><blockquote><p><strong>primary key 或 unique key 索引的所有部分被连接使用</strong> ，最多只会返回一条符合条件的记录。</p><p>这可能是在const 之外最好的联接类型了，简单的 select 查询不会出现这种 type。</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 其中 film表 使用的是主键索引， film_actor使用的是联合索引 NDEX `idx_film_actor_id`(`film_id`, `actor_id`) <span class="keyword">USING</span> BTREE</span><br><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> film_actor <span class="keyword">left</span> <span class="keyword">join</span> film <span class="keyword">on</span> film_actor.film_id <span class="operator">=</span> film.id;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+------------+------------+--------+---------------+---------+---------+--------------------------------------+------+----------+-------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span>      <span class="operator">|</span> partitions <span class="operator">|</span> type   <span class="operator">|</span> possible_keys <span class="operator">|</span> key     <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>                                  <span class="operator">|</span> <span class="keyword">rows</span> <span class="operator">|</span> filtered <span class="operator">|</span> Extra <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+------------+------------+--------+---------------+---------+---------+--------------------------------------+------+----------+-------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> SIMPLE      <span class="operator">|</span> film_actor <span class="operator">|</span> <span class="keyword">NULL</span>       <span class="operator">|</span> <span class="keyword">ALL</span>    <span class="operator">|</span> <span class="keyword">NULL</span>          <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> <span class="keyword">NULL</span>                                 <span class="operator">|</span>    <span class="number">3</span> <span class="operator">|</span>   <span class="number">100.00</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> SIMPLE      <span class="operator">|</span> film       <span class="operator">|</span> <span class="keyword">NULL</span>       <span class="operator">|</span> eq_ref <span class="operator">|</span> <span class="keyword">PRIMARY</span>       <span class="operator">|</span> <span class="keyword">PRIMARY</span> <span class="operator">|</span> <span class="number">4</span>       <span class="operator">|</span> explain_demo_test.film_actor.film_id <span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span>   <span class="number">100.00</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+------------+------------+--------+---------------+---------+---------+--------------------------------------+------+----------+-------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.02</span> sec)</span><br></pre></td></tr></table></figure></li><li><p>ref</p><blockquote><p>相比 eq_ref，不使用唯一索引，而是使用<strong>普通索引</strong>或者<strong>唯一性索引的部分前缀</strong>，索引要和某个值相比较，可能会找到多个符合条件的行。</p></blockquote><p><strong>1. 普通索引</strong></p><ul><li><p><code>file</code> 表的信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">file表的索引信息</span><br><span class="line">- 主键索引：PRIMARY KEY (`id`)</span><br><span class="line">- 联合索引：INDEX `idx_name`(`name`)</span><br><span class="line"></span><br><span class="line">file表的字段类型</span><br><span class="line">- `id` int(11) NOT NULL AUTO_INCREMENT COMMENT &#x27;主键ID&#x27;</span><br><span class="line">- `name` varchar(10) DEFAULT NULL COMMENT &#x27;电影名称&#x27;</span><br></pre></td></tr></table></figure></li><li><p>Explain 分析结果</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> film <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;film1&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+----------+---------+-------+------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span> <span class="operator">|</span> partitions <span class="operator">|</span> type <span class="operator">|</span> possible_keys <span class="operator">|</span> key      <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>   <span class="operator">|</span> <span class="keyword">rows</span> <span class="operator">|</span> filtered <span class="operator">|</span> Extra       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+----------+---------+-------+------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> SIMPLE      <span class="operator">|</span> film  <span class="operator">|</span> <span class="keyword">NULL</span>       <span class="operator">|</span> <span class="keyword">ref</span>  <span class="operator">|</span> idx_name      <span class="operator">|</span> idx_name <span class="operator">|</span> <span class="number">33</span>      <span class="operator">|</span> const <span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span>   <span class="number">100.00</span> <span class="operator">|</span> <span class="keyword">Using</span> index <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+----------+---------+-------+------+----------+-------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.68</span> sec)</span><br></pre></td></tr></table></figure></li></ul><p><strong>2. 唯一性索引的部分前缀</strong></p><ul><li><p>表的信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">file 表的索引信息</span><br><span class="line">- 主键索引：PRIMARY KEY (`id`)</span><br><span class="line">- 联合索引：KEY `idx_name`(`name`) </span><br><span class="line"></span><br><span class="line">file 表的字段类型</span><br><span class="line">- `id` int(11) NOT NULL AUTO_INCREMENT COMMENT &#x27;主键ID&#x27;</span><br><span class="line">- `name` varchar(10) DEFAULT NULL COMMENT &#x27;电影名称&#x27;</span><br><span class="line"></span><br><span class="line">film_actor 表的索引信息</span><br><span class="line">- 主键索引：PRIMARY KEY (`id`)</span><br><span class="line">- 联合索引：KEY `idx_film_actor_id` (`film_id`,`actor_id`)</span><br><span class="line"></span><br><span class="line">film_actor 表的字段类型</span><br><span class="line">- `id` int(11) NOT NULL COMMENT &#x27;主键ID&#x27;</span><br><span class="line">- `film_id` int(11) NOT NULL COMMENT &#x27;电影ID&#x27;</span><br><span class="line">- `actor_id` int(11) NOT NULL COMMENT &#x27;演员ID&#x27;</span><br><span class="line">- `remark` varchar(255) DEFAULT NULL COMMENT &#x27;备注&#x27;</span><br></pre></td></tr></table></figure></li><li><p>Explain 分析结果</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> film_id <span class="keyword">from</span> film <span class="keyword">left</span> <span class="keyword">join</span> film_actor <span class="keyword">on</span> film.id <span class="operator">=</span> film_actor.film_id;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+------------+------------+-------+-------------------+-------------------+---------+---------------------------+------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span>      <span class="operator">|</span> partitions <span class="operator">|</span> type  <span class="operator">|</span> possible_keys     <span class="operator">|</span> key               <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>                       <span class="operator">|</span> <span class="keyword">rows</span> <span class="operator">|</span> filtered <span class="operator">|</span> Extra       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+------------+------------+-------+-------------------+-------------------+---------+---------------------------+------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> SIMPLE      <span class="operator">|</span> film       <span class="operator">|</span> <span class="keyword">NULL</span>       <span class="operator">|</span> index <span class="operator">|</span> <span class="keyword">NULL</span>              <span class="operator">|</span> idx_name          <span class="operator">|</span> <span class="number">33</span>      <span class="operator">|</span> <span class="keyword">NULL</span>                      <span class="operator">|</span>    <span class="number">3</span> <span class="operator">|</span>   <span class="number">100.00</span> <span class="operator">|</span> <span class="keyword">Using</span> index <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> SIMPLE      <span class="operator">|</span> film_actor <span class="operator">|</span> <span class="keyword">NULL</span>       <span class="operator">|</span> <span class="keyword">ref</span>   <span class="operator">|</span> idx_film_actor_id <span class="operator">|</span> idx_film_actor_id <span class="operator">|</span> <span class="number">4</span>       <span class="operator">|</span> explain_demo_test.film.id <span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span>   <span class="number">100.00</span> <span class="operator">|</span> <span class="keyword">Using</span> index <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+------------+------------+-------+-------------------+-------------------+---------+---------------------------+------+----------+-------------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.03</span> sec)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>range</p><blockquote><p>范围扫描通常出现在 in(), between ,&gt; ,&lt;, &gt;= 等操作中。使用一个索引来检索给定范围的行。</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> actor <span class="keyword">where</span> id <span class="operator">&gt;</span> <span class="number">1</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+-------+---------------+---------+---------+------+------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span> <span class="operator">|</span> partitions <span class="operator">|</span> type  <span class="operator">|</span> possible_keys <span class="operator">|</span> key     <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>  <span class="operator">|</span> <span class="keyword">rows</span> <span class="operator">|</span> filtered <span class="operator">|</span> Extra       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+-------+---------------+---------+---------+------+------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> SIMPLE      <span class="operator">|</span> actor <span class="operator">|</span> <span class="keyword">NULL</span>       <span class="operator">|</span> <span class="keyword">range</span> <span class="operator">|</span> <span class="keyword">PRIMARY</span>       <span class="operator">|</span> <span class="keyword">PRIMARY</span> <span class="operator">|</span> <span class="number">4</span>       <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span>    <span class="number">2</span> <span class="operator">|</span>   <span class="number">100.00</span> <span class="operator">|</span> <span class="keyword">Using</span> <span class="keyword">where</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+-------+---------------+---------+---------+------+------+----------+-------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.04</span> sec)</span><br></pre></td></tr></table></figure></li><li><p>index</p><blockquote><p>扫描全索引就能拿到结果，一般是<strong>扫描某个二级索引</strong>，这种扫描<strong>不会从索引树根节点开始快速查找</strong>，而是直接对二级索引的叶子节点遍历和扫描，速度还是比较慢的，这种查询一般为使用覆盖索引，二级索引一般比较小，所以这种通常比ALL快一些。</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> film;</span><br><span class="line"> </span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+-------+---------------+----------+---------+------+------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span> <span class="operator">|</span> partitions <span class="operator">|</span> type  <span class="operator">|</span> possible_keys <span class="operator">|</span> key      <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>  <span class="operator">|</span> <span class="keyword">rows</span> <span class="operator">|</span> filtered <span class="operator">|</span> Extra       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+-------+---------------+----------+---------+------+------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> SIMPLE      <span class="operator">|</span> film  <span class="operator">|</span> <span class="keyword">NULL</span>       <span class="operator">|</span> index <span class="operator">|</span> <span class="keyword">NULL</span>          <span class="operator">|</span> idx_name <span class="operator">|</span> <span class="number">33</span>      <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span>    <span class="number">3</span> <span class="operator">|</span>   <span class="number">100.00</span> <span class="operator">|</span> <span class="keyword">Using</span> index <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+-------+---------------+----------+---------+------+------+----------+-------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.03</span> sec)</span><br></pre></td></tr></table></figure></li><li><p>ALL</p><blockquote><p>即全表扫描，扫描你的聚簇索引的所有叶子节点。通常情况下这需要增加索引来进行优化了。</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> actor;</span><br><span class="line"> </span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span> <span class="operator">|</span> partitions <span class="operator">|</span> type <span class="operator">|</span> possible_keys <span class="operator">|</span> key  <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>  <span class="operator">|</span> <span class="keyword">rows</span> <span class="operator">|</span> filtered <span class="operator">|</span> Extra <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> SIMPLE      <span class="operator">|</span> actor <span class="operator">|</span> <span class="keyword">NULL</span>       <span class="operator">|</span> <span class="keyword">ALL</span>  <span class="operator">|</span> <span class="keyword">NULL</span>          <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span>    <span class="number">3</span> <span class="operator">|</span>   <span class="number">100.00</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.04</span> sec)</span><br></pre></td></tr></table></figure></li></ol><h3 id="possible-keys"><span class="post-title-index">4.5. </span><a href="#possible-keys" class="headerlink" title="possible_keys"></a>possible_keys</h3><blockquote><p>possible_keys列表示在某个查询语句中，对某个表执行单表查询时可能用到的索引有哪些</p><p>如果该列是NULL，则没有相关的索引。</p><p><strong>注意</strong></p><p>possible_keys列中的值并不是越多越好，可能使用的索引越多，查询优化器计算查询成本时就得花费更长时间，所以如果可以的话，尽量删除那些用不到的索引</p></blockquote><h3 id="key"><span class="post-title-index">4.6. </span><a href="#key" class="headerlink" title="key"></a>key</h3><blockquote><p>key列表示实际用到的索引有哪些，如果没有使用索引，则该列是 NULL</p></blockquote><h3 id="key-len"><span class="post-title-index">4.7. </span><a href="#key-len" class="headerlink" title="key_len"></a>key_len</h3><blockquote><p>key_len列表示当优化器决定使用某个索引执行查询时，该索引记录的最大长度.</p></blockquote><ul><li>表的信息</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">film_actor 表的索引信息</span><br><span class="line"></span><br><span class="line">- 主键索引：PRIMARY KEY (`id`)</span><br><span class="line">- 联合索引：KEY `idx_film_actor_id` (`film_id`,`actor_id`)</span><br><span class="line"></span><br><span class="line">**film_actor 表的字段类型**</span><br><span class="line"></span><br><span class="line">- `id` int(11) NOT NULL COMMENT &#x27;主键ID&#x27;</span><br><span class="line">- `film_id` int(11) NOT NULL COMMENT &#x27;电影ID&#x27;</span><br><span class="line">- `actor_id` int(11) NOT NULL COMMENT &#x27;演员ID&#x27;</span><br><span class="line">- `remark` varchar(255) DEFAULT NULL COMMENT &#x27;备注&#x27;</span><br></pre></td></tr></table></figure><p><strong>key_len 为什么为4？</strong></p><blockquote><p><strong>因为走到了索引 idx_film_actor_id ，而 字段（film_id）数据类型是int , int就是占四个字节</strong></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> film_actor <span class="keyword">where</span> film_id <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+------------+------------+------+-------------------+-------------------+---------+-------+------+----------+-------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span>      <span class="operator">|</span> partitions <span class="operator">|</span> type <span class="operator">|</span> possible_keys     <span class="operator">|</span> key               <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>   <span class="operator">|</span> <span class="keyword">rows</span> <span class="operator">|</span> filtered <span class="operator">|</span> Extra <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+------------+------------+------+-------------------+-------------------+---------+-------+------+----------+-------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> SIMPLE      <span class="operator">|</span> film_actor <span class="operator">|</span> <span class="keyword">NULL</span>       <span class="operator">|</span> <span class="keyword">ref</span>  <span class="operator">|</span> idx_film_actor_id <span class="operator">|</span> idx_film_actor_id <span class="operator">|</span> <span class="number">4</span>       <span class="operator">|</span> const <span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span>   <span class="number">100.00</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+------------+------------+------+-------------------+-------------------+---------+-------+------+----------+-------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">1.83</span> sec)</span><br></pre></td></tr></table></figure><p><strong>key_len 计算规则如下</strong></p><blockquote><p><strong>字符串</strong></p><ul><li>5.0.3以后版本中，n均代表字符数，而不是字节数，如果是utf-8，一个数字或字母占1个字节，一个汉字占3个字节</li><li>char(n)：如果存汉字长度就是 3n 字节</li><li>varchar(n)：如果存汉字则长度是 3n + 2 字节，加的2字节用来存储字符串长度，因为varchar是变长字符串</li><li>例如：某个索引列的类型是VARCHAR(100)，使用的字符集是utf8，那么该列实际占用的最大存储空间就是100 × 3 = 300个字节</li></ul><p><strong>数值类型</strong></p><ul><li>tinyint：1字节</li><li>smallint：2字节</li><li>int：4字节</li><li>bigint：8字节</li></ul><p><strong>时间类型</strong></p><ul><li>date：3字节</li><li>timestamp：4字节</li><li>datetime：8字节</li></ul><p><strong>NULL</strong></p><ul><li>如果字段允许为 NULL，需要1字节记录是否为 NULL</li></ul></blockquote><h3 id="ref"><span class="post-title-index">4.8. </span><a href="#ref" class="headerlink" title="ref"></a>ref</h3><blockquote><p>这一列显示了在key列记录的索引中，表查找值所用到的列或常量</p><p>常见的有：const（常量），字段名（例：film.id）</p></blockquote><h3 id="rows"><span class="post-title-index">4.9. </span><a href="#rows" class="headerlink" title="rows"></a>rows</h3><blockquote><p>这一列是mysql估计要读取并检测的行数，注意这个不是结果集里的行数。</p></blockquote><h3 id="filtered"><span class="post-title-index">4.10. </span><a href="#filtered" class="headerlink" title="filtered"></a>filtered</h3><blockquote><p>对于单表而言这个列没啥意义，结果函数占总数的百分比。</p></blockquote><h3 id="Extra"><span class="post-title-index">4.11. </span><a href="#Extra" class="headerlink" title="Extra"></a>Extra</h3><blockquote><p>这一列展示的是额外信息。常见的重要值如下：</p><ol><li>Using index（覆盖索引)</li><li>Using where（查询的列未被索引覆盖）</li><li>Using index condition（不完全被索引覆盖）</li><li>Using temporary</li><li>Using filesort</li><li>Select tables optimized away</li></ol></blockquote><ol><li><p>Using index（覆盖索引)</p><blockquote><p>mysql执行计划explain结果里的key有使用索引，如果 <strong>select 后面查询的字段都可以从这个索引的树中获取</strong>，这种情况可以说是用到了<strong>覆盖索引</strong>，extra里一般都有using index；</p></blockquote><ul><li><p>表信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">film_actor 表的索引信息</span><br><span class="line">- 主键索引：PRIMARY KEY (`id`)</span><br><span class="line">- 联合索引：KEY `idx_film_actor_id` (`film_id`,`actor_id`)</span><br><span class="line"></span><br><span class="line">film_actor 表的字段类型</span><br><span class="line">- `id` int(11) NOT NULL COMMENT &#x27;主键ID&#x27;</span><br><span class="line">- `film_id` int(11) NOT NULL COMMENT &#x27;电影ID&#x27;</span><br><span class="line">- `actor_id` int(11) NOT NULL COMMENT &#x27;演员ID&#x27;</span><br><span class="line">- `remark` varchar(255) DEFAULT NULL COMMENT &#x27;备注&#x27;</span><br></pre></td></tr></table></figure></li><li><p>示例</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> film_id <span class="keyword">from</span> film_actor <span class="keyword">where</span> film_id <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+------------+------------+------+-------------------+-------------------+---------+-------+------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span>      <span class="operator">|</span> partitions <span class="operator">|</span> type <span class="operator">|</span> possible_keys     <span class="operator">|</span> key               <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>   <span class="operator">|</span> <span class="keyword">rows</span> <span class="operator">|</span> filtered <span class="operator">|</span> Extra       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+------------+------------+------+-------------------+-------------------+---------+-------+------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> SIMPLE      <span class="operator">|</span> film_actor <span class="operator">|</span> <span class="keyword">NULL</span>       <span class="operator">|</span> <span class="keyword">ref</span>  <span class="operator">|</span> idx_film_actor_id <span class="operator">|</span> idx_film_actor_id <span class="operator">|</span> <span class="number">4</span>       <span class="operator">|</span> const <span class="operator">|</span>    <span class="number">2</span> <span class="operator">|</span>   <span class="number">100.00</span> <span class="operator">|</span> <span class="keyword">Using</span> index <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+------------+------------+------+-------------------+-------------------+---------+-------+------+----------+-------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">19.56</span> sec)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>Using where（查询的列未被索引覆盖）</p><blockquote><p>使用 where 语句来处理结果，并且查询的列未被索引覆盖</p></blockquote><ul><li><p>表信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">actor 表的索引信息</span><br><span class="line">- 主键索引：PRIMARY KEY (`id`)</span><br><span class="line"></span><br><span class="line">actor 表的字段类型</span><br><span class="line">- `id` int(11) NOT NULL COMMENT &#x27;主键ID&#x27;</span><br><span class="line">- `name` varchar(45) DEFAULT NULL COMMENT &#x27;演员名称&#x27;</span><br><span class="line">- `update_time` datetime DEFAULT NULL COMMENT &#x27;更新时间&#x27;</span><br><span class="line">- 主键索引：PRIMARY KEY (`id`)</span><br><span class="line"></span><br><span class="line">actor 表的字段类型</span><br><span class="line">- `id` int(11) NOT NULL COMMENT &#x27;主键ID&#x27;</span><br><span class="line">- `name` varchar(45) DEFAULT NULL COMMENT &#x27;演员名称&#x27;</span><br><span class="line">- `update_time` datetime DEFAULT NULL COMMENT &#x27;更新时间&#x27;</span><br></pre></td></tr></table></figure></li><li><p>示例</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> actor <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span> <span class="operator">|</span> partitions <span class="operator">|</span> type <span class="operator">|</span> possible_keys <span class="operator">|</span> key  <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>  <span class="operator">|</span> <span class="keyword">rows</span> <span class="operator">|</span> filtered <span class="operator">|</span> Extra       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> SIMPLE      <span class="operator">|</span> actor <span class="operator">|</span> <span class="keyword">NULL</span>       <span class="operator">|</span> <span class="keyword">ALL</span>  <span class="operator">|</span> <span class="keyword">NULL</span>          <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span>    <span class="number">3</span> <span class="operator">|</span>    <span class="number">33.33</span> <span class="operator">|</span> <span class="keyword">Using</span> <span class="keyword">where</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.03</span> sec)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>Using index condition（不完全被索引覆盖）</p><blockquote><p>查询的列不完全被索引覆盖，where条件中是一个前导列的范围；</p></blockquote><ul><li><p>表信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">film_actor 表的索引信息</span><br><span class="line">- 主键索引：PRIMARY KEY (`id`)</span><br><span class="line">- 联合索引：KEY `idx_film_actor_id` (`film_id`,`actor_id`)</span><br><span class="line"></span><br><span class="line">film_actor 表的字段类型</span><br><span class="line">- `id` int(11) NOT NULL COMMENT &#x27;主键ID&#x27;</span><br><span class="line">- `film_id` int(11) NOT NULL COMMENT &#x27;电影ID&#x27;</span><br><span class="line">- `actor_id` int(11) NOT NULL COMMENT &#x27;演员ID&#x27;</span><br><span class="line">- `remark` varchar(255) DEFAULT NULL COMMENT &#x27;备注&#x27;</span><br></pre></td></tr></table></figure></li><li><p>示例</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> film_actor <span class="keyword">where</span> film_id <span class="operator">&gt;</span> <span class="number">1</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+------------+------------+-------+-------------------+-------------------+---------+------+------+----------+-----------------------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span>      <span class="operator">|</span> partitions <span class="operator">|</span> type  <span class="operator">|</span> possible_keys     <span class="operator">|</span> key               <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>  <span class="operator">|</span> <span class="keyword">rows</span> <span class="operator">|</span> filtered <span class="operator">|</span> Extra                 <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+------------+------------+-------+-------------------+-------------------+---------+------+------+----------+-----------------------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> SIMPLE      <span class="operator">|</span> film_actor <span class="operator">|</span> <span class="keyword">NULL</span>       <span class="operator">|</span> <span class="keyword">range</span> <span class="operator">|</span> idx_film_actor_id <span class="operator">|</span> idx_film_actor_id <span class="operator">|</span> <span class="number">4</span>       <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span>   <span class="number">100.00</span> <span class="operator">|</span> <span class="keyword">Using</span> index <span class="keyword">condition</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+------------+------------+-------+-------------------+-------------------+---------+------+------+----------+-----------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.03</span> sec)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>Using temporary</p><blockquote><p>mysql需要创建一张临时表来处理查询。出现这种情况一般是要进行优化的，首先是想到用索引来优化。</p></blockquote><ul><li><p>表信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">actor 表的索引信息</span><br><span class="line">- 主键索引：PRIMARY KEY (`id`)</span><br><span class="line"></span><br><span class="line">actor 表的字段类型</span><br><span class="line">- `id` int(11) NOT NULL COMMENT &#x27;主键ID&#x27;</span><br><span class="line">- `name` varchar(45) DEFAULT NULL COMMENT &#x27;演员名称&#x27;</span><br><span class="line">- `update_time` datetime DEFAULT NULL COMMENT &#x27;更新时间&#x27;</span><br><span class="line"></span><br><span class="line">actor.name 没有索引，此时创建了张临时表来distinct</span><br></pre></td></tr></table></figure></li><li><p>示例</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="keyword">distinct</span> name <span class="keyword">from</span> actor;</span><br><span class="line"> </span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-----------------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span> <span class="operator">|</span> partitions <span class="operator">|</span> type <span class="operator">|</span> possible_keys <span class="operator">|</span> key  <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>  <span class="operator">|</span> <span class="keyword">rows</span> <span class="operator">|</span> filtered <span class="operator">|</span> Extra           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-----------------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> SIMPLE      <span class="operator">|</span> actor <span class="operator">|</span> <span class="keyword">NULL</span>       <span class="operator">|</span> <span class="keyword">ALL</span>  <span class="operator">|</span> <span class="keyword">NULL</span>          <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span>    <span class="number">3</span> <span class="operator">|</span>   <span class="number">100.00</span> <span class="operator">|</span> <span class="keyword">Using</span> temporary <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-----------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.03</span> sec)</span><br></pre></td></tr></table></figure></li><li><p><strong>film.name 建立了idx_name索引，此时查询时extra是using index,没有用临时表</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 新增 idx_name 索引</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">ALTER</span> <span class="keyword">TABLE</span> `film` <span class="keyword">ADD</span> INDEX `idx_name`(`name`) <span class="keyword">USING</span> BTREE;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.09</span> sec)</span><br><span class="line">Records: <span class="number">0</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br><span class="line"> </span><br><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="keyword">distinct</span> name <span class="keyword">from</span> film;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+-------+---------------+----------+---------+------+------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span> <span class="operator">|</span> partitions <span class="operator">|</span> type  <span class="operator">|</span> possible_keys <span class="operator">|</span> key      <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>  <span class="operator">|</span> <span class="keyword">rows</span> <span class="operator">|</span> filtered <span class="operator">|</span> Extra       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+-------+---------------+----------+---------+------+------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> SIMPLE      <span class="operator">|</span> film  <span class="operator">|</span> <span class="keyword">NULL</span>       <span class="operator">|</span> index <span class="operator">|</span> idx_name      <span class="operator">|</span> idx_name <span class="operator">|</span> <span class="number">33</span>      <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span>    <span class="number">3</span> <span class="operator">|</span>   <span class="number">100.00</span> <span class="operator">|</span> <span class="keyword">Using</span> index <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+-------+---------------+----------+---------+------+------+----------+-------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.04</span> sec)</span><br><span class="line"> </span><br><span class="line"># 删除 idx_name 索引</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">ALTER</span> <span class="keyword">TABLE</span> `film` <span class="keyword">DROP</span> INDEX `idx_name`;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">1.78</span> sec)</span><br><span class="line">Records: <span class="number">0</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>Using filesort</p><blockquote><p>将用<strong>外部排序</strong>而不是<strong>索引排序</strong>，数据较小时从内存排序，否则需要在磁盘完成排序。这种情况下一般也是要考虑使用索引来优化的。</p></blockquote><ul><li><p>表信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">actor 表的索引信息</span><br><span class="line">- 主键索引：PRIMARY KEY (`id`)</span><br><span class="line"></span><br><span class="line">actor 表的字段类型</span><br><span class="line">- `id` int(11) NOT NULL COMMENT &#x27;主键ID&#x27;</span><br><span class="line">- `name` varchar(45) DEFAULT NULL COMMENT &#x27;演员名称&#x27;</span><br><span class="line">- `update_time` datetime DEFAULT NULL COMMENT &#x27;更新时间&#x27;</span><br></pre></td></tr></table></figure></li><li><p><strong>actor.name未创建索引，会浏览actor整个表，保存排序关键字name和对应的id，然后排序name并检索行记录</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> actor <span class="keyword">order</span> <span class="keyword">by</span> name;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+----------------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span> <span class="operator">|</span> partitions <span class="operator">|</span> type <span class="operator">|</span> possible_keys <span class="operator">|</span> key  <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>  <span class="operator">|</span> <span class="keyword">rows</span> <span class="operator">|</span> filtered <span class="operator">|</span> Extra          <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+----------------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> SIMPLE      <span class="operator">|</span> actor <span class="operator">|</span> <span class="keyword">NULL</span>       <span class="operator">|</span> <span class="keyword">ALL</span>  <span class="operator">|</span> <span class="keyword">NULL</span>          <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span>    <span class="number">3</span> <span class="operator">|</span>   <span class="number">100.00</span> <span class="operator">|</span> <span class="keyword">Using</span> filesort <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+----------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">20.78</span> sec)</span><br></pre></td></tr></table></figure></li><li><p><strong>film.name建立了idx_name索引,此时查询时extra是using index</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># 新增 idx_name 索引</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">ALTER</span> <span class="keyword">TABLE</span> `film` <span class="keyword">ADD</span> INDEX `idx_name`(`name`) <span class="keyword">USING</span> BTREE;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.09</span> sec)</span><br><span class="line">Records: <span class="number">0</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br><span class="line"> </span><br><span class="line"># Extra：<span class="keyword">Using</span> index。添加idx_name 索引之后使用到了覆盖索引</span><br><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> film <span class="keyword">order</span> <span class="keyword">by</span> name;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+-------+---------------+----------+---------+------+------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span> <span class="operator">|</span> partitions <span class="operator">|</span> type  <span class="operator">|</span> possible_keys <span class="operator">|</span> key      <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>  <span class="operator">|</span> <span class="keyword">rows</span> <span class="operator">|</span> filtered <span class="operator">|</span> Extra       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+-------+---------------+----------+---------+------+------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> SIMPLE      <span class="operator">|</span> film  <span class="operator">|</span> <span class="keyword">NULL</span>       <span class="operator">|</span> index <span class="operator">|</span> <span class="keyword">NULL</span>          <span class="operator">|</span> idx_name <span class="operator">|</span> <span class="number">33</span>      <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span>    <span class="number">3</span> <span class="operator">|</span>   <span class="number">100.00</span> <span class="operator">|</span> <span class="keyword">Using</span> index <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+-------+---------------+----------+---------+------+------+----------+-------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.20</span> sec)</span><br><span class="line"> </span><br><span class="line"># 删除 idx_name 索引</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">ALTER</span> <span class="keyword">TABLE</span> `film` <span class="keyword">DROP</span> INDEX `idx_name`;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">1.78</span> sec)</span><br><span class="line">Records: <span class="number">0</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>Select tables optimized away</p><blockquote><p>使用某些聚合函数（比如 max、min）来访问存在索引的某个字段</p></blockquote><ul><li>示例</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="built_in">min</span>(id) <span class="keyword">from</span> film;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+------------------------------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span> <span class="operator">|</span> partitions <span class="operator">|</span> type <span class="operator">|</span> possible_keys <span class="operator">|</span> key  <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>  <span class="operator">|</span> <span class="keyword">rows</span> <span class="operator">|</span> filtered <span class="operator">|</span> Extra                        <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+------------------------------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> SIMPLE      <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span> <span class="keyword">NULL</span>       <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NULL</span>          <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NULL</span>     <span class="operator">|</span> <span class="keyword">Select</span> tables optimized away <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.11</span> sec)</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL-表设计规范（二）</title>
      <link href="/posts/1ce85a1d.html"/>
      <url>/posts/1ce85a1d.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><span class="post-title-index">1. </span><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>本文主要讲解 <code>MySQL</code> 中对表的设计。例如，表的通用字段、如何选择合适的字段类型、如何处理 1:1 、1:N 的关系等等。</p><p>我们设计时可以通过 <a href="http://www.pdman.cn/#/">PDMan</a> 对表进行设计</p></blockquote><h2 id="选择合适的字段类型"><span class="post-title-index">2. </span><a href="#选择合适的字段类型" class="headerlink" title="选择合适的字段类型"></a>选择合适的字段类型</h2><blockquote><p>数值类型（Numeric Types）：用于存储数值数据，包括整数和浮点数。例如，int、bigint、float、double、decimal 等。</p><p>字符串类型（String Types）：用于存储文本和字符数据。例如，char、varchar、text、enum、set 等。</p><p>日期和时间类型（Date and Time Types）：用于存储日期、时间和时间戳数据。例如，date、time、datetime、timestamp、year 等。</p><p>布尔类型（Boolean Type）：用于存储布尔值，表示真或假。MySQL 中的布尔类型是 tinyint(1)，可以用来存储 0 或 1。</p><p>二进制类型（Binary Types）：用于存储二进制数据，如图像、音频、视频等。例如，binary、varbinary、blob 等。</p></blockquote><h3 id="整数数据类型"><span class="post-title-index">2.1. </span><a href="#整数数据类型" class="headerlink" title="整数数据类型"></a>整数数据类型</h3><blockquote><p>整数数据类型：<code>tinyint</code>、<code>smallint</code>、<code>int</code>、<code>bigint</code></p></blockquote><p><code>tinyint</code></p><ul><li>基本定义：用于存储非常小的整数值。它占用 1 个字节的存储空间，并且可以表示范围为 -128 到 127（有符号）或 0 到 255（无符号）的整数。</li><li>适用场景：用于存储布尔值（0 或 1）或非常小的整数数据。</li></ul><p><code>smallint</code></p><ul><li>基本定义：用于存储较小的整数值。它占用 2 个字节的存储空间，并且可以表示范围为 -32,768 到 32,767（有符号）或 0 到 65,535（无符号）的整数。</li><li>适用场景：用于存储中等大小的整数数据，如年份或月份，<code>smallint</code> 可能是一个不错的选择</li></ul><p><code>int</code></p><ul><li>基本定义：用于存储普通大小的整数值。它占用 4 个字节的存储空间，并且可以表示范围为 -2,147,483,648 到 2,147,483,647（有符号）或 0 到 4,294,967,295（无符号）的整数。</li><li>适用场景：用于存储大多数整数数据。</li></ul><p><code>bigint</code></p><ul><li>基本定义：用于存储非常大的整数值。它占用 8 个字节的存储空间，并且可以表示范围为 -9,223,372,036,854,775,808 到 9,223,372,036,854,775,807（有符号）或 0 到 18,446,744,073,709,551,615（无符号）的整数。</li><li>适用场景：用于存储非常大的整数数据。</li></ul><h3 id="浮点数数据类型"><span class="post-title-index">2.2. </span><a href="#浮点数数据类型" class="headerlink" title="浮点数数据类型"></a>浮点数数据类型</h3><blockquote><p>浮点数数据类型：<code>float</code>、<code>double</code> 和 <code>decimal</code> </p><p>根据数据范围、精度要求、存储空间和计算性能等因素来选择合适的浮点数数据类型</p></blockquote><p><code>float</code></p><ul><li>基本定义：单精度浮点数数据类型，用于存储较小范围的浮点数。它占用 4 个字节的存储空间，并提供大约 7 位数字的精度。</li><li>适用场景：用于存储相对较小的浮点数，并且不需要非常高的精度，例如科学计数。</li></ul><p><code>double</code></p><ul><li>基本定义：双精度浮点数数据类型，用于存储较大范围的浮点数。它占用 8 个字节的存储空间，并提供大约 15 位数字的精度。</li><li>适用场景：用于存储大多数浮点数，并提供相对较高的精度，例如 存储坐标就是一个不错的选择。</li></ul><p><code>decimal</code> </p><ul><li>基本定义：精确的浮点数数据类型，用于存储需要高精度计算的浮点数。它占用可变的存储空间，具体取决于指定的精度和标度。精度表示总位数，标度表示小数点后的位数。</li><li>适用场景：decimal 可以存储非常大的数值，并提供高度精确的计算，适合于货币、金融和精确计算等领域。</li></ul><h3 id="字符串数据类型"><span class="post-title-index">2.3. </span><a href="#字符串数据类型" class="headerlink" title="字符串数据类型"></a>字符串数据类型</h3><blockquote><p>字符串数据类型：<code>char</code>、<code>varchar</code> 和 <code>text</code></p></blockquote><p><code>char</code></p><ul><li>基本定义：char 是一种固定长度的字符串类型。你需要指定一个固定的长度，范围是 0 到 255 个字符。</li><li>适用场景：用于长度固定的数据，例如身份证号、固定长度的标识符等</li></ul><p><code>varchar</code></p><ul><li>基本定义：可变长度的字符串类型。你需要指定一个最大长度，范围是 0 到 65,535 个字符。它只会占用实际值所需的存储空间加上额外的一些字节作为长度信息。</li><li>适用场景：用于长度可变的数据，例如存储用户名称、电子邮件地址等。</li></ul><p><code>text</code></p><ul><li>基本定义：用于存储大量文本数据的数据类型，其最大存储容量为约 65,535 字符。</li><li>适用场景：用于存储较大的文本、文章、备注等。</li></ul><h2 id="添加通用字段"><span class="post-title-index">3. </span><a href="#添加通用字段" class="headerlink" title="添加通用字段"></a>添加通用字段</h2><div class="table-container"><table><thead><tr><th><strong>字段</strong></th><th><strong>类型</strong></th><th><strong>解释</strong></th><th><strong>是否必须</strong></th></tr></thead><tbody><tr><td><strong>id</strong></td><td>bigint(20)</td><td><strong>主键</strong></td><td><strong>必须</strong></td></tr><tr><td>create_by</td><td>varchar(64)</td><td>创建者</td><td>非必须</td></tr><tr><td>update_by</td><td>varchar(64)</td><td>更新者</td><td>非必须</td></tr><tr><td><strong>create_time</strong></td><td>datetime</td><td><strong>更新时间</strong></td><td><strong>必须</strong></td></tr><tr><td><strong>update_time</strong></td><td>datetime</td><td><strong>更新时间</strong></td><td><strong>必须</strong></td></tr><tr><td>data_status</td><td>tinyint(1)、bit(1)</td><td>数据状态</td><td>非必须</td></tr><tr><td>remark</td><td>varchar</td><td>记录备注</td><td>非必须</td></tr></tbody></table></div><h2 id="一张表的字段不宜过多"><span class="post-title-index">4. </span><a href="#一张表的字段不宜过多" class="headerlink" title="一张表的字段不宜过多"></a>一张表的字段不宜过多</h2><div class="note orange simple"><p>张表的字段不宜过多，一般尽量不要超过20个字段。如果一张表的字段过多，表中保存的数据可能就会很大，查询效率就会很低</p></div><p><strong>那如何解决字段过多问题呢？</strong></p><ul><li>如果实在需要很多字段，可以把一张大的表，拆成多张小的表，它们的主键相同即可。</li><li>表的字段数非常多时，可以将表分成两张表，一张作为条件查询表，一张作为详细内容表。</li><li>核心就是采用 1  ：1 的形式将表进行拆分。</li></ul><p><strong>示例</strong></p><blockquote><p>假设你有一个用户信息表，其中包含用户的基本信息，如名字、密码、电子邮件地址、电话号码等。此外，还包含用户的银行卡信息，如卡号、银行名称、有效期等。</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 用户的基本信息 users</span><br><span class="line"><span class="operator">+</span><span class="comment">-----+-------------+--------------------------------------------------------------+-------------------+-------------+</span></span><br><span class="line"><span class="operator">|</span> id  <span class="operator">|</span> username    <span class="operator">|</span> password                                                     <span class="operator">|</span> email             <span class="operator">|</span> mobile      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----+-------------+--------------------------------------------------------------+-------------------+-------------+</span></span><br><span class="line"><span class="operator">|</span>   <span class="number">1</span> <span class="operator">|</span> admin       <span class="operator">|</span> $<span class="number">2</span>a$<span class="number">10</span>$<span class="number">0</span>acJOIk2D25<span class="operator">/</span>oC87nyclE.<span class="number">.0</span>lzeu9DtQ<span class="operator">/</span>n3geP4fkun<span class="operator">/</span>zIVRhHJIO <span class="operator">|</span> admin<span class="variable">@example</span>.com <span class="operator">|</span> <span class="number">15612345678</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>   <span class="number">2</span> <span class="operator">|</span> John        <span class="operator">|</span> $<span class="number">2</span>a$<span class="number">10</span>$<span class="number">11</span>U48RhyJ5pSBYWSn12AD.<span class="operator">/</span>ld671.ycSzJHbyrtpeoMeYiw31eo8a <span class="operator">|</span> john<span class="variable">@example</span>.com  <span class="operator">|</span> <span class="number">15601691300</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>   <span class="number">3</span> <span class="operator">|</span> Mary        <span class="operator">|</span> $<span class="number">2</span>a$<span class="number">10</span>$YMpimV4T6BtDhIaA8jSW.u8UTGBeGhc<span class="operator">/</span>qwXP4oxoMr4mOw9.qttt6 <span class="operator">|</span> mary<span class="variable">@example</span>.com  <span class="operator">|</span> <span class="number">15601701300</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----+-------------+--------------------------------------------------------------+-------------------+-------------+</span></span><br><span class="line"> </span><br><span class="line"># 银行卡基本信息 users_card</span><br><span class="line"><span class="operator">+</span><span class="comment">-----+-------------+-----------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> id  <span class="operator">|</span> user_id     <span class="operator">|</span> card_number <span class="operator">|</span> bank_name   <span class="operator">|</span> expiration_date   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----+-------------+-----------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span>   <span class="number">1</span> <span class="operator">|</span> <span class="number">1</span>           <span class="operator">|</span> <span class="number">1234567890</span>  <span class="operator">|</span> Bank A      <span class="operator">|</span> <span class="number">2022</span><span class="number">-12</span><span class="number">-30</span>        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>   <span class="number">2</span> <span class="operator">|</span> <span class="number">2</span>           <span class="operator">|</span> <span class="number">2345678901</span>  <span class="operator">|</span> Bank B      <span class="operator">|</span> <span class="number">2021</span><span class="number">-11</span><span class="number">-10</span>        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>   <span class="number">3</span> <span class="operator">|</span> <span class="number">3</span>           <span class="operator">|</span> <span class="number">3456789012</span>  <span class="operator">|</span> Bank C      <span class="operator">|</span> <span class="number">2020</span><span class="number">-12</span><span class="number">-01</span>        <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----+-------------+-----------------------------------------------+</span></span><br></pre></td></tr></table></figure><h2 id="设计表时，评估哪些字段需要加索引"><span class="post-title-index">5. </span><a href="#设计表时，评估哪些字段需要加索引" class="headerlink" title="设计表时，评估哪些字段需要加索引"></a><strong>设计表时，评估哪些字段需要加索引</strong></h2><div class="note orange simple"><p>如果有查询条件的字段，一般就需要建立索引。</p><p>唯一性太差的字段不需要创建索引,即便用于where条件.</p><p>建立联合索引时,也要考虑把重复率低而又用得多的列放在前面.</p><p>索引也不要建得太多，一般单表索引个数不要超过 <strong>5</strong> 个。因为创建过多的索引，会降低写得速度。</p><p>超过三个表禁止 join。需要 join 的字段，数据类型保持绝对一致；多表关联查询时，保证被关联的字段需要有索引。</p></div><p>针对 逻辑删除 索引如何建立</p><ul><li>逻辑删除与唯一索引：<a href="https://developer.aliyun.com/article/861184">https://developer.aliyun.com/article/861184</a></li><li>唯一索引遇上逻辑删除：<a href="https://juejin.cn/post/7155492949583724551">https://juejin.cn/post/7155492949583724551</a></li><li>保持Unique Key的逻辑删除方案：<a href="https://cloud.tencent.com/developer/article/1531915">https://cloud.tencent.com/developer/article/1531915</a></li><li>如何解决逻辑删除与唯一索引冲突：<a href="https://www.lin2j.tech/archives/logic-delete-and-unique-key">https://www.lin2j.tech/archives/logic-delete-and-unique-key</a></li><li><strong>逻辑删除和唯一索引：</strong><a href="https://chsm.locklab.cn/2020/08/29/logical-deletion-and-unique-index/">https://chsm.locklab.cn/2020/08/29/logical-deletion-and-unique-index/</a></li></ul><p><strong>案例</strong></p><blockquote><p>当我们查询某一条记录 ， 大部分情况都会走 <code>物理删除</code>，我们要查询某条记录对应的SQL： <code>where delete_flag = 0</code> 。前面我们说了 唯一性太差的字段不需要建立索引，那么 字段 <code>delete_flag</code> 这个字段只有 <code>0</code> 或者 <code>1</code> .应该如何处理呢？</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305151523915.png" alt="image-20230515152307862"></p><h2 id="不需要严格遵守-3NF"><span class="post-title-index">6. </span><a href="#不需要严格遵守-3NF" class="headerlink" title="不需要严格遵守 3NF"></a>不需要严格遵守 3NF</h2><p><strong>数据库三范式（3NF）基本概念</strong></p><ul><li><p>第一范式：对属性的原子性，要求属性具有<strong>原子性，不可再分解</strong>；</p><ul><li>例如：学生（学号，姓名，性别，出生年月日），如果认为最后一列还可以再分成（出生年，出生月，出生日），这说明不具备原子性。</li></ul></li><li><p>第二范式：对记录的唯一性，要求记录有唯一标识，即实体的<strong>唯一性，即不存在部分依赖</strong>；</p><ul><li>例如：课程（学号、姓名、课程号、学分），学分依赖课程号，姓名依赖与学号，所以不符合二范式。</li><li>正确做法：学生：Student(学号, 姓名)；课程：Course(课程号, 学分)；选课关系：StudentCourse(学号, 课程号, 成绩)。</li></ul></li><li><p>第三范式：对字段的冗余性，要求任何字段不能由其他字段派生出来，它要求字段没有冗余，即<strong>不存在传递依赖</strong>；</p><ul><li>例如：学号, 姓名, 年龄, 学院名称, 学院电话。依赖传递: (学号) → (学生)；(所在学院) → (学院电话)</li><li>正确做法：学生：(学号, 姓名, 年龄, 所在学院)；学院：(学院, 电话)。</li></ul></li></ul><p><strong>案例</strong></p><blockquote><p>通过业务字段冗余来减少表关联，我们设计表及其字段之间的关系, 应尽量满足第三范式。但是有时候，可以适当冗余，来提高效率</p></blockquote><p>总金额 = 单价 <em> 数量，总金额这个字段的存在，表明该表的设计不满足第三范式，因为总金额可以由单价</em>数量得到，说明总金额是冗余字段。</p><div class="table-container"><table><thead><tr><th><strong>商品名称</strong></th><th><strong>商品型号</strong></th><th><strong>单价</strong></th><th><strong>数量</strong></th><th><strong>总金额</strong></th></tr></thead><tbody><tr><td>手机</td><td>IPhone 13 Pro Max</td><td>9000</td><td>5</td><td>45000</td></tr></tbody></table></div><h2 id="数据库字段是枚举类型的，需要在comment注释清楚"><span class="post-title-index">7. </span><a href="#数据库字段是枚举类型的，需要在comment注释清楚" class="headerlink" title="数据库字段是枚举类型的，需要在comment注释清楚"></a>数据库字段是枚举类型的，需要在comment注释清楚</h2><blockquote><p>如果你设计的数据库字段是枚举类型的话，就需要在comment后面注释清楚每个枚举的意思，以便于维护</p></blockquote><p><strong>正例</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`session_status` <span class="type">char</span>(<span class="number">2</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;session授权态 00：在线-授权态有效 01：下线-授权态失效 02：下线-主动退出 03：下线-在别处被登录&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>反例</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`session_status` <span class="type">varchar</span>(<span class="number">2</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;session授权态&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="1-N-、-N-N-关系的设计"><span class="post-title-index">8. </span><a href="#1-N-、-N-N-关系的设计" class="headerlink" title="(1 : N) 、(N : N)关系的设计"></a>(1 : N) 、(N : N)关系的设计</h2><p><strong>1 : N 表的设计</strong></p><blockquote><p>从表（N的这一方）创建一个字段，以字段作为外键指向主表（1的这一方）的主键</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305151531955.png" alt="image2022-12-30_16-51-18.png"></p><p><strong>N : N表设计</strong></p><blockquote><p>通过增加第三张表，把N:N修改为两个 1:N，例如 RBAC 表的设计</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305151533552.png" alt="image2022-12-19_14-15-35.png"></p><h2 id="不搞外键关联，一般都在代码维护"><span class="post-title-index">9. </span><a href="#不搞外键关联，一般都在代码维护" class="headerlink" title="不搞外键关联，一般都在代码维护"></a>不搞外键关联，一般都在代码维护</h2><p><strong>什么是外键呢？</strong></p><ul><li>外键，也叫FOREIGN KEY，它是用于将两个表连接在一起的键。</li><li>FOREIGN KEY是一个表中的一个字段（或字段集合），它引用另一个表中的PRIMARY KEY。它是用来保证数据的一致性和完整性的。</li></ul><p><strong>阿里的Java规范也有这么一条：</strong></p><ul><li>【强制】不得使用外键与级联，一切外键概念必须在应用层解决。</li></ul><p><strong>我们为什么不推荐使用外键呢？</strong></p><ul><li>使用外键存在性能问题、并发死锁问题、使用起来不方便等等。</li><li>每次做DELETE或者UPDATE都必须考虑外键约束，会导致开发的时候很难受,测试数据造数据也不方便。</li><li>还有一个场景不能使用外键，就是分库分表。 </li></ul><h2 id="参考博文"><span class="post-title-index">10. </span><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><blockquote><ul><li><a href="https://juejin.cn/post/7147135702604447758">掘金文章（21个MySQL表设计的经验准则）</a></li><li><a href="https://zhuanlan.zhihu.com/p/63005458">MySQL中的char和varchar</a></li><li><a href="https://www.cnblogs.com/mkl34367803/p/13096564.html">为什么说性别不适合做索引</a></li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL-表命名规范（一）</title>
      <link href="/posts/9abc017f.html"/>
      <url>/posts/9abc017f.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><span class="post-title-index">1. </span><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>本文主要讲解 <code>MySQL</code> 表中的一些错误命名规范，虽然这是一个很简单的事情，但随着需求增多，表也在不断扩张，如果没有相关的表命名规范，到时候维护起来也会及其麻烦。我们以 开源框架 <code>Ruoyi</code> 为例，讲解这个框架对表的命名处理。</p></blockquote><h2 id="不规范表命名存在的问题"><span class="post-title-index">2. </span><a href="#不规范表命名存在的问题" class="headerlink" title="不规范表命名存在的问题"></a>不规范表命名存在的问题</h2><h3 id="表命名"><span class="post-title-index">2.1. </span><a href="#表命名" class="headerlink" title="表命名"></a>表命名</h3><div class="note orange simple"><p>问题一：如下图中，如下表名虽然可以做到见名其意，但随着业务扩展。当需要查询某一个模块的数据时，但又不清楚表名就会存在问题。</p></div><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305151249471.png" alt="image-20230515124929426"></p><h3 id="字段命名"><span class="post-title-index">2.2. </span><a href="#字段命名" class="headerlink" title="字段命名"></a>字段命名</h3><div class="note orange simple"><p>问题二：如下图中，找到了表名，但如果要修改某个字段的数据又会存在问题了。</p></div><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305151255479.png" alt="image-20230515125527436"></p><h2 id="Ruoyi-对表命名的处理"><span class="post-title-index">3. </span><a href="#Ruoyi-对表命名的处理" class="headerlink" title="Ruoyi 对表命名的处理"></a><code>Ruoyi</code> 对表命名的处理</h2><blockquote><p>基本规范</p><ul><li><strong>数据库表名、字段名、索引名等都需要命名规范，可读性高(一般要求用英文)，最好做到见名知意</strong></li><li>我们可以通过命名知道表属于那个模块，可以高效的定位到表进行修改。</li></ul></blockquote><h3 id="表命名-1"><span class="post-title-index">3.1. </span><a href="#表命名-1" class="headerlink" title="表命名"></a>表命名</h3><blockquote><p>基本规范</p><ul><li>必须使用小写字母或者数字，禁止使用数字开头，禁止使用拼音，并且一般不使用英文缩写。</li><li>在 <code>MySQL</code> 中，如果表名可以使用父级模块的名称作为前缀，可以更好地组织和管理表</li></ul></blockquote><p>如下图，<code>QRTZ</code> 开头就可以知道是定时任务模块的数据。<code>system</code> 开头的就知道是系统模块的数据。</p><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305151302576.png" alt="image2022-12-30_10-30-27.png"></p><h3 id="字段命名-1"><span class="post-title-index">3.2. </span><a href="#字段命名-1" class="headerlink" title="字段命名"></a>字段命名</h3><blockquote><p>基本规范</p><ul><li>必须使用小写字母或者数字，禁止使用数字开头，禁止使用拼音，并且一般不使用英文缩写</li></ul></blockquote><p>例如，一个表的账号字段</p><ul><li>反例</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `account_user` (</span><br><span class="line">  `<span class="number">1</span>_acc_no` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;账号&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`acc_no`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">3</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8mb4_unicode_ci COMMENT<span class="operator">=</span><span class="string">&#x27;用户信息表&#x27;</span>;</span><br></pre></td></tr></table></figure><ul><li>正例</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `account_user` (</span><br><span class="line">  `account_no` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;账号&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`account_no`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">3</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8mb4_unicode_ci COMMENT<span class="operator">=</span><span class="string">&#x27;用户信息表&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="索引命名"><span class="post-title-index">3.3. </span><a href="#索引命名" class="headerlink" title="索引命名"></a>索引命名</h3><p>主键索引：</p><ul><li>pk_字段名。 例如：<strong><code>PRIMARY KEY (</code>id<code>) USING BTREE</code></strong></li></ul><p>唯一索引：</p><ul><li>uk_字段名。 例如：<strong><code>UNIQUE INDEX</code>uk_mobile<code>(</code>mobile<code>ASC) USING BTREE</code></strong></li></ul><p>普通索引：</p><ul><li>idx_字段名。例如：<strong><code>INDEX</code>idx_mobile<code>(</code>mobile<code>ASC) USING BTREE</code></strong></li></ul>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx-负载均衡（九）</title>
      <link href="/posts/ed9b15a4.html"/>
      <url>/posts/ed9b15a4.html</url>
      
        <content type="html"><![CDATA[<h2 id="问题思考？"><span class="post-title-index">1. </span><a href="#问题思考？" class="headerlink" title="问题思考？"></a>问题思考？</h2><ol><li><p><strong>负载均衡之前使用的什么方案？</strong></p><ul><li>在早期并发不大的情况，我们一般使用如下图所示的架构。</li><li>当用户增长量上升，服务器处理请求的能力到达了极限，就会出现加载速度慢，出现宕机情况</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305121653538.png" alt="image.png"></p></li><li><p><strong>负载均衡 解决了什么问题？</strong></p><ul><li>针对上面的问题就可以使用 负载均衡 策略进行处理，具体如下图</li><li>当我们其中一台服务出现问题，我们可以通过负载均衡策略将请求转移到其他服务器中。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305121654822.gif" alt="v2-3661c2082103036ecb23a3f29be740be_b.gif"></p></li><li><p><strong>负载均衡提供的策略？</strong></p><ul><li>轮询策略（round-robin）：请求在所有可用服务器之间平均分配，负载均衡默认的配置就是轮询。</li><li>权重策略（weight）：服务器被分配一个权重，请求根据每个服务器的权重分配。</li><li>随机策略（random）：请求被随机分配在任意一台可用服务器当中。</li><li>ip_hash：客户端的 IP 地址将用作哈希键，来自同一个ip的请求会被转发到相同的服务器。</li><li>响应时长策略（fair）：根据服务器的响应时间来分配请求，响应时间短的优先分配，即负载压力小的优先会分配。</li><li>最少连接（least_conn）：将请求分配给活动连接数最少的服务器（较为空闲的服务器）。</li></ul></li></ol><h2 id="Nginx-配置负载均衡策略"><span class="post-title-index">2. </span><a href="#Nginx-配置负载均衡策略" class="headerlink" title="Nginx 配置负载均衡策略"></a><strong>Nginx 配置负载均衡策略</strong></h2><blockquote><p>根据业务场景的不同选择不同的策略方式，如果选择的策略不适合特定场景，可能会导致性能问题。</p></blockquote><h3 id="最佳实现（round-robin、random）"><span class="post-title-index">2.1. </span><a href="#最佳实现（round-robin、random）" class="headerlink" title="最佳实现（round-robin、random）"></a>最佳实现（round-robin、random）</h3><blockquote><p>最佳实践的两种策略：<strong>轮询策略（round-robin）、随机策略（random）</strong></p><p><strong>最佳实现的考量指标</strong></p><ul><li>这种是最常见的一种配置，当不知道用什么的时候就采用这一类型。</li><li>随机策略在大量请求的情况下，按照概率的理论等同于轮询策略。</li></ul></blockquote><p><strong>轮询策略（round-robin）：请求在所有可用服务器之间平均分配</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 默认配置就是轮询策略</span></span><br><span class="line"><span class="section">upstream</span> server_group &#123;</span><br><span class="line">   <span class="attribute">server</span> <span class="number">192.168.206.100:9001</span>;</span><br><span class="line">   <span class="attribute">server</span> <span class="number">192.168.206.101:9001</span>;</span><br><span class="line">   <span class="attribute">server</span> <span class="number">192.168.206.102:9001</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">server&#123;</span><br><span class="line">   </span><br><span class="line">    <span class="comment"># 监听端口</span></span><br><span class="line">    <span class="attribute">listen</span> <span class="number">8003</span>;</span><br><span class="line">    <span class="comment"># 匹配请求中的host值</span></span><br><span class="line">    <span class="attribute">server_name</span> ruoyi.balance.localhost;</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 监听请求静态资源 html 路径</span></span><br><span class="line">    <span class="section">location</span> / &#123;</span><br><span class="line">      <span class="comment"># 查找目录</span></span><br><span class="line">      <span class="attribute">root</span> /home/basics-analysis/web;</span><br><span class="line">      <span class="comment"># 默认查找</span></span><br><span class="line">      <span class="attribute">index</span> index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">       </span><br><span class="line">    <span class="comment"># 监听请求后端服务</span></span><br><span class="line">    <span class="section">location</span><span class="regexp"> ^~</span> /api &#123;</span><br><span class="line">        <span class="comment">#nginx的主机地址</span></span><br><span class="line">        <span class="attribute">proxy_set_header</span> Host <span class="variable">$http_host</span>;</span><br><span class="line">  </span><br><span class="line">        <span class="comment">#用户端真实的IP，即客户端IP</span></span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="comment"># 配置代理服务器</span></span><br><span class="line">        <span class="attribute">proxy_pass</span> http://server_group;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>随机策略（random）：请求被随机分配在任意一台可用服务器当中</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 随机策略</span></span><br><span class="line"><span class="section">upstream</span> server_group &#123;</span><br><span class="line">   random;</span><br><span class="line">   <span class="attribute">server</span> <span class="number">192.168.206.100:9001</span>;</span><br><span class="line">   <span class="attribute">server</span> <span class="number">192.168.206.101:9001</span>;</span><br><span class="line">   <span class="attribute">server</span> <span class="number">192.168.206.102:9001</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="性能优先（weight、fair、least-conn）"><span class="post-title-index">2.2. </span><a href="#性能优先（weight、fair、least-conn）" class="headerlink" title="性能优先（weight、fair、least_conn）"></a>性能优先（weight、fair、least_conn）</h3><blockquote><p>性能优先的三种策略：<strong>权重策略（weight）、响应时长策略（fair）、最小连接（least_conn）</strong></p><p><strong>性能优先的考量指标</strong></p><ul><li>从经验或硬件上分为高权重、低权重的机器。</li><li>按照节点请求的响应时长来决定是多分配请求，还是少分配请求。</li><li>按照保持的连接数。一般来说保持的连接数越多说明处理的任务越多，也是最繁忙的，可以将请求分配给其他机器处理。</li></ul></blockquote><p><strong>权重策略（weight）：服务器被分配一个权重，请求根据每个服务器的权重分配</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 权重策略</span></span><br><span class="line"><span class="section">upstream</span> server_group &#123;</span><br><span class="line">   <span class="attribute">server</span> <span class="number">192.168.206.100:9001</span> weight=<span class="number">5</span>;</span><br><span class="line">   <span class="attribute">server</span> <span class="number">192.168.206.101:9001</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>响应时长策略（fair）：根据服务器的响应时间来分配请求，响应时间短的优先分配，即负载压力小的优先会分配</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 响应时长策略</span></span><br><span class="line"><span class="section">upstream</span> server_group &#123;</span><br><span class="line">   fair;</span><br><span class="line">   <span class="attribute">server</span> <span class="number">192.168.206.100:9001</span>;</span><br><span class="line">   <span class="attribute">server</span> <span class="number">192.168.206.101:9001</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>最少连接数（least_conn）：将请求分配给活动连接数最少的服务器（较为空闲的服务器）</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 最少连接数</span></span><br><span class="line"><span class="section">upstream</span> server_group &#123;</span><br><span class="line">   least_conn;</span><br><span class="line">   <span class="attribute">server</span> <span class="number">192.168.206.100:9001</span>;</span><br><span class="line">   <span class="attribute">server</span> <span class="number">192.168.206.101:9001</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="保持稳定（ip-hash、url-hash）"><span class="post-title-index">2.3. </span><a href="#保持稳定（ip-hash、url-hash）" class="headerlink" title="保持稳定（ip_hash、url_hash）"></a>保持稳定（ip_hash、url_hash）</h3><blockquote><p><strong>保持稳定的两种策略：ip_hash、url_hash</strong></p><p><strong>保持稳定的考量指标</strong></p><ul><li>很多请求都是有状态的，上一次请求到哪个业务节点，这次还要请求到哪台机器。</li><li>将客户端的 IP 地址 或者 url 作为哈希键，来自同一个ip的请求会被转发到相同的服务器。</li></ul><p><strong>保持稳定的两种策略存在的问题</strong></p><ul><li><strong>当有一个上游服务器宕机或者扩容的时候，会引发大量的路由变更，进而引发连锁反应，如果上游服务器在有缓存的情况下导致大量缓存失效等问题。</strong></li><li><strong>针对这个问题，参考博文：</strong><a href="https://blog.csdn.net/qq_34556414/article/details/106156796">https://blog.csdn.net/qq_34556414/article/details/106156796</a></li></ul></blockquote><p><strong>ip_hash策略</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ip_hash</span></span><br><span class="line"><span class="section">upstream</span> server_group &#123;</span><br><span class="line">   ip_hash;</span><br><span class="line">   <span class="attribute">server</span> <span class="number">192.168.206.100:9001</span>;</span><br><span class="line">   <span class="attribute">server</span> <span class="number">192.168.206.101:9001</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>url_hash策略</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># url_hash</span></span><br><span class="line"><span class="section">upstream</span> server_group&#123;</span><br><span class="line">   <span class="attribute">hash</span> <span class="variable">$request_uri</span> consistent;</span><br><span class="line">   <span class="attribute">server</span> <span class="number">192.168.206.100:9001</span>;</span><br><span class="line">   <span class="attribute">server</span> <span class="number">192.168.206.101:9001</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="故障节点摘除与恢复"><span class="post-title-index">3. </span><a href="#故障节点摘除与恢复" class="headerlink" title="故障节点摘除与恢复"></a>故障节点摘除与恢复</h2><ul><li>经典配置详解</li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">upstream</span> server_group &#123;</span><br><span class="line">   <span class="attribute">server</span> <span class="number">192.168.206.100:9001</span> max_fails=<span class="number">3</span> fail_timeout=<span class="number">30s</span>;</span><br><span class="line">   <span class="attribute">server</span> <span class="number">192.168.206.101:9001</span> backup;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>配置详解</strong></p><div class="table-container"><table><thead><tr><th><strong>指令</strong></th><th><strong>默认值</strong></th><th><strong>解释</strong></th></tr></thead><tbody><tr><td>max_fails</td><td>1</td><td>请求失败多少次之后，暂停使用该节点。需要搭配fail_timeout 一起使用。</td></tr><tr><td>fail_timeout</td><td>10s</td><td>当认定该节点不能使用之后，暂定多久可以使用。</td></tr><tr><td>backup</td><td>-</td><td>类似于switch语句中的default，当主要节点都挂了的时候，会把请求打到这个backup节点</td></tr></tbody></table></div><h2 id="参考博文"><span class="post-title-index">4. </span><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><blockquote><p><a href="https://zhuanlan.zhihu.com/p/32841479">什么是负载均衡？</a></p><p><a href="https://blog.csdn.net/finally_vince/article/details/124454458">Nginx负载均衡解决的问题和实现方式都在这里啦</a></p><p><a href="https://juejin.cn/post/6844904019043811342">Nginx专题（2）：Nginx的负载均衡策略及其配置</a></p><p><a href="https://blog.csdn.net/xyang81/article/details/51702900">Nginx负载均衡配置</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Web服务器 </category>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx-WebSocket（八）</title>
      <link href="/posts/b0ee815c.html"/>
      <url>/posts/b0ee815c.html</url>
      
        <content type="html"><![CDATA[<h2 id="Nginx-配置-WebSocket"><span class="post-title-index">1. </span><a href="#Nginx-配置-WebSocket" class="headerlink" title="Nginx 配置 WebSocket"></a>Nginx 配置 WebSocket</h2><blockquote><p>具体步骤如下：</p><ol><li>创建 <code>Nginx</code> 配置文件 <code>8004.conf</code></li><li>刷新 <code>Nginx</code> 配置文件</li></ol></blockquote><h3 id="实现步骤"><span class="post-title-index">1.1. </span><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h3><ol><li><p>创建 <code>Nginx</code> 配置文件 <code>8004.conf</code></p><ul><li><code>Nginx</code> 配置文件路径：<code>/etc/nginx/conf.d</code></li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将 $http_upgrade 变量映射到 $connection_upgrade 变量</span></span><br><span class="line"><span class="comment"># $http_upgrade 变量通常用于表示客户端请求是否支持 WebSocket。</span></span><br><span class="line"><span class="comment"># 如果客户端请求支持 WebSocket，则 $http_upgrade 变量的值为 &quot;websocket&quot;；否则，它的值为空字符串。</span></span><br><span class="line"><span class="attribute">map</span> <span class="variable">$http_upgrade</span> <span class="variable">$connection_upgrade</span> &#123;</span><br><span class="line">    <span class="attribute">default</span> upgrade;</span><br><span class="line">    &#x27;&#x27;      close;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 虚拟主机server块</span></span><br><span class="line">server&#123;</span><br><span class="line"> </span><br><span class="line">   <span class="comment"># do something ...</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 监听 /message 路径的请求</span></span><br><span class="line">    <span class="section">location</span><span class="regexp"> ^~</span> /message &#123;</span><br><span class="line">       <span class="attribute">proxy_pass</span> http://server:port;</span><br><span class="line">       <span class="comment"># 表示使用 HTTP/1.1 协议</span></span><br><span class="line">       <span class="attribute">proxy_http_version</span> <span class="number">1</span>.<span class="number">1</span>;   </span><br><span class="line">       <span class="comment"># 表示将 Upgrade 头设置为 $http_upgrade。在http请求头中加入了 Upgrade: websocket</span></span><br><span class="line">       <span class="attribute">proxy_set_header</span> Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line">       <span class="comment"># 表示将 Connection 头设置为 &quot;upgrade&quot;。在http请求头中加入了 Connection: Upgrade</span></span><br><span class="line">       <span class="attribute">proxy_set_header</span> Connection <span class="variable">$connection_upgrade</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>刷新 <code>Nginx</code> 配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos conf.d]<span class="comment"># /usr/sbin/nginx -t </span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@VM-0-9-centos conf.d]<span class="comment"># /usr/sbin/nginx -s reload</span></span><br><span class="line">[root@VM-0-9-centos conf.d]<span class="comment"># </span></span><br></pre></td></tr></table></figure></li></ol><h2 id="WebSocket-长时间不进行推送"><span class="post-title-index">2. </span><a href="#WebSocket-长时间不进行推送" class="headerlink" title="WebSocket 长时间不进行推送"></a>WebSocket 长时间不进行推送</h2><ol><li>方案一：通过 <code>proxy_read_timeout</code> 超时连接时长解决</li></ol><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 监听 /message 路径的请求</span></span><br><span class="line"><span class="section">location</span><span class="regexp"> ^~</span> /message &#123;</span><br><span class="line">   <span class="attribute">proxy_pass</span> http://server:port;</span><br><span class="line">   <span class="comment"># 解决连接超时问题，60分钟，默认是60s。</span></span><br><span class="line">   <span class="attribute">proxy_read_timeout</span> <span class="number">3600s</span>;</span><br><span class="line">   <span class="comment"># 表示使用 HTTP/1.1 协议</span></span><br><span class="line">   <span class="attribute">proxy_http_version</span> <span class="number">1</span>.<span class="number">1</span>;   </span><br><span class="line">   <span class="comment"># 表示将 Upgrade 头设置为 $http_upgrade。在http请求头中加入了 Upgrade: websocket</span></span><br><span class="line">   <span class="attribute">proxy_set_header</span> Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line">   <span class="comment"># 表示将 Connection 头设置为 &quot;upgrade&quot;。在http请求头中加入了 Connection: Upgrade</span></span><br><span class="line">   <span class="attribute">proxy_set_header</span> Connection <span class="variable">$connection_upgrade</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>方案二：通过前端设置定时器，进行 <code>WebSocket</code> 进行心跳请求</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">timer=<span class="built_in">setInterval</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (websocket.<span class="property">readyState</span> == <span class="number">1</span>) &#123;</span><br><span class="line">        websocket.<span class="title function_">send</span>(<span class="string">&quot;心跳包检测&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//IM连接已断开</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;, <span class="number">50</span> * <span class="number">1000</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web服务器 </category>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx-配置跨域（七）</title>
      <link href="/posts/db06d141.html"/>
      <url>/posts/db06d141.html</url>
      
        <content type="html"><![CDATA[<h2 id="问题思考？"><span class="post-title-index">1. </span><a href="#问题思考？" class="headerlink" title="问题思考？"></a>问题思考？</h2><ol><li><p><strong>什么是跨域？</strong></p><ul><li><strong>跨域是指浏览器不允许一个网站访问另一个网站的资源。</strong></li></ul></li><li><p><strong>跨域的例子？</strong></p><ul><li>当我们开发时，需要前后端进行联调代码。</li><li>这时 如果 前端的ip是 <code>192.168.56.10:8080</code> ，后端的ip是 <code>192.168.53.20:8888</code></li><li>那么 前端 请求后台就会出现跨域问题。</li></ul></li><li><p><strong>出现跨域的原因？</strong></p><ul><li>不同域名。例如：<a href="http://www.example.com/">www.example.com</a> 请求 <a href="http://api.example.com/">api.example.com</a></li><li>不同协议。例如：<a href="http://a.baidu.com/">http://a.baidu.com</a> 请求 <a href="https://www.baidu.com/">https://www.baidu.com</a> </li><li>不同端口。例如：<a href="http://127.0.0.1:5500/">http://127.0.0.1:5500</a> 请求 <a href="http://127.0.0.1:8089/">http://127.0.0.1:8089</a>  </li></ul></li><li><p><strong>图解说明</strong></p><ul><li><p>当我们在网页上面请求 <a href="http://127.0.0.1:5500/index">http://127.0.0.1:5500/index</a></p><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305121459712.png" alt="img"></p></li></ul><ul><li><p>这时候在JavaScript中需要请求第三方接口 <a href="http://127.0.0.1:8089/">http://127.0.0.1:8089</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="title function_">fetch</span>(<span class="string">&quot;http://127.0.0.1:8089/api/testCross&quot;</span>)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>控制台中打印错误信息</p><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305121459518.png" alt="img"></p></li></ul></li></ol><h2 id="Nginx-处理跨域"><span class="post-title-index">2. </span><a href="#Nginx-处理跨域" class="headerlink" title="Nginx 处理跨域"></a><code>Nginx</code> 处理跨域</h2><ul><li><p><strong>方式一：接受来自任意源的跨域请求</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># 配置允许所有源的跨域请求（即 add_header &#x27;Access-Control-Allow-Origin&#x27; &#x27;*&#x27;;）</span></span><br><span class="line">  <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span> <span class="string">&#x27;*&#x27;</span>;</span><br><span class="line">  <span class="comment"># 配置允许请求方法</span></span><br><span class="line">  <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Allow-Methods&#x27;</span> <span class="string">&#x27;GET, POST, PUT, DELETE&#x27;</span>;</span><br><span class="line">  <span class="comment"># 配置允许的请求头</span></span><br><span class="line">  <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Allow-Headers&#x27;</span> <span class="string">&#x27;DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type&#x27;</span>;</span><br><span class="line">  <span class="comment"># 如果请求方法是 OPTIONS，则返回 HTTP 状态码 20</span></span><br><span class="line">  <span class="attribute">if</span> (<span class="variable">$request_method</span> = <span class="string">&#x27;OPTIONS&#x27;</span>) &#123;</span><br><span class="line">    <span class="attribute">return</span> <span class="number">204</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>方式二：只有请求路径以 /api/ 开头的请求才会添加跨域头信息</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span> /api &#123;</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 配置允许所有源的跨域请求（即 add_header &#x27;Access-Control-Allow-Origin&#x27; &#x27;*&#x27;;）</span></span><br><span class="line">    <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span> <span class="string">&#x27;*&#x27;</span>;</span><br><span class="line">    <span class="comment"># 配置允许请求方法</span></span><br><span class="line">    <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Allow-Methods&#x27;</span> <span class="string">&#x27;GET, POST, PUT, DELETE&#x27;</span>;</span><br><span class="line">    <span class="comment"># 配置允许的请求头</span></span><br><span class="line">    <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Allow-Headers&#x27;</span> <span class="string">&#x27;DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type&#x27;</span>;</span><br><span class="line">    <span class="comment"># 如果请求方法是 OPTIONS，则返回 HTTP 状态码 20</span></span><br><span class="line">    <span class="attribute">if</span> (<span class="variable">$request_method</span> = <span class="string">&#x27;OPTIONS&#x27;</span>) &#123;</span><br><span class="line">        <span class="attribute">return</span> <span class="number">204</span>;</span><br><span class="line">     &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="SpringBoot-处理跨域"><span class="post-title-index">3. </span><a href="#SpringBoot-处理跨域" class="headerlink" title="SpringBoot 处理跨域"></a><code>SpringBoot</code> 处理跨域</h2><ul><li><p>针对于上面的前后端联调例子，我们可以在 <code>java</code> 中添加以下代码，就可以解决跨域问题。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ResourcesConfig</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 跨域配置</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> CorsFilter <span class="title function_">corsFilter</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">CorsConfiguration</span> <span class="variable">config</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CorsConfiguration</span>();</span><br><span class="line">        config.setAllowCredentials(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">// 设置访问源地址</span></span><br><span class="line">        config.addAllowedOriginPattern(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        <span class="comment">// 设置访问源请求头</span></span><br><span class="line">        config.addAllowedHeader(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        <span class="comment">// 设置访问源请求方法</span></span><br><span class="line">        config.addAllowedMethod(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        <span class="comment">// 有效期 1800秒</span></span><br><span class="line">        config.setMaxAge(<span class="number">1800L</span>);</span><br><span class="line">        <span class="comment">// 添加映射路径，拦截一切请求</span></span><br><span class="line">        <span class="type">UrlBasedCorsConfigurationSource</span> <span class="variable">source</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UrlBasedCorsConfigurationSource</span>();</span><br><span class="line">        source.registerCorsConfiguration(<span class="string">&quot;/**&quot;</span>, config);</span><br><span class="line">        <span class="comment">// 返回新的CorsFilter</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">CorsFilter</span>(source);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="区别？"><span class="post-title-index">4. </span><a href="#区别？" class="headerlink" title="区别？"></a>区别？</h2><blockquote><p><code>Nginx</code> 处理跨域和 <code>Spring Boot</code> 处理跨域的区别主要在于它们<strong>处理跨域请求的位置</strong>不同。</p><p><code>Nginx</code> ：处理跨域适用于<strong>前端应用程序</strong>与<strong>后端 API 之间</strong>的跨域问题</p><p><code>Spring Boot</code>：处理跨域则适用于在<strong>后端应用程序</strong>中解决跨域问题</p></blockquote><ol><li><p><strong><code>Nginx</code> 处理跨域</strong></p><ul><li><code>Nginx</code> 处理跨域是在服务器端处理跨域请求的</li><li>首先，当客户端发送跨域请求时，<strong>请求会先到达 <code>Nginx</code> 服务器</strong>。</li><li>然后，<code>Nginx</code> 服务器会添加相应的头信息并转发请求到后端应用服务器。</li></ul></li><li><p><strong><code>SpringBoot</code> 处理跨域</strong></p><ul><li>Spring Boot 处理跨域是在应用服务器端处理跨域请求的</li><li>首先，当客户端发送跨域请求时，请求会先到达 <code>Nginx</code> 服务器；</li><li>然后，<code>Nginx</code> 服务器会转发请求到后端应用服务器；</li><li>最后，应用服务器再通过配置 <code>CORS</code> 过滤器来处理跨域请求；</li></ul></li><li><p><strong>服务器和服务器之间不存在跨域，只有浏览器才存在跨域的说法，例如 HttpClient 请求</strong>。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Web服务器 </category>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx-配置参数（六）</title>
      <link href="/posts/cfc171aa.html"/>
      <url>/posts/cfc171aa.html</url>
      
        <content type="html"><![CDATA[<h2 id="location-参数"><span class="post-title-index">1. </span><a href="#location-参数" class="headerlink" title="location 参数"></a>location 参数</h2><blockquote><p>location ：配置请求的路由，可以使用修饰符或正则表达式。</p><p>注意事项：<strong>location uri 前边的/不能省略，uri后边的/可以省略</strong>。</p></blockquote><p>如下内容的优先级从高到低</p><div class="tabs" id="location"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#location-1">1.精确匹配【=】</button></li><li class="tab"><button type="button" data-href="#location-2">2.抢占式前缀匹配【^~】</button></li><li class="tab"><button type="button" data-href="#location-3">3.正则匹配【~】</button></li><li class="tab"><button type="button" data-href="#location-4">3.正则匹配【~*】</button></li><li class="tab"><button type="button" data-href="#location-5">4.普通前缀匹配【/】</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="location-1"><p>用于<strong>标准 URI</strong> 前，要求请求字符串与其精准匹配，成功则立即处理，nginx 停止搜索其他匹配。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  只有当访问 www.nginx-test.com/match_all/ 时才会匹配 /usr/share/nginx/html/match_all/index.html</span></span><br><span class="line"><span class="section">location</span> = /match_all/ &#123;</span><br><span class="line">   <span class="attribute">root</span> /usr/share/nginx/html</span><br><span class="line">   index index.html</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="location-2"><p>用于<strong>标准 URI</strong> 前，并要求一旦匹配到就会立即处理，不再去匹配其他的那些个正则 URI，一般用来匹配目录</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 当访问 www.nginx-test.com/bbs/ 时会匹配上 /usr/share/nginx/html/bbs/index.html</span></span><br><span class="line"><span class="section">location</span><span class="regexp"> ^~</span> /bbs &#123;</span><br><span class="line">   <span class="attribute">root</span> /usr/share/nginx/html;</span><br><span class="line">   <span class="attribute">index</span> index.html index.htm;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="location-3"><p>用于<strong>正则 URI</strong> 前，表示 URI 包含正则表达式， <strong>区分</strong>大小写</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">用于正则 <span class="attribute">URI</span> 前，表示 URI 包含正则表达式， 区分大小写<span class="comment"># 当访问 www.nginx-test.com/a.jpg 等路径时会去 /usr/share/nginx/images/a.jpg 找对应的资源</span></span><br><span class="line">location <span class="regexp">~ \.(jpeg|jpg|png|svg)$</span> &#123;</span><br><span class="line">   <span class="attribute">root</span> /usr/share/nginx/images;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="location-4"><p>用于<strong>正则 URI</strong> 前， 表示 URI 包含正则表达式， <strong>不区分</strong>大小写</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 当访问 www.nginx-test.com/A.jpg 等路径时会去 /usr/share/nginx/images/A.jpg 找对应的资源</span></span><br><span class="line"><span class="section">location</span> <span class="regexp">~* \.(jpeg|jpg|png|svg)$</span> &#123;</span><br><span class="line">   <span class="attribute">root</span> /usr/share/nginx/images;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="location-5"><p>location 后没有参数直接跟着 <strong>标准 URI</strong>，表示前缀匹配，代表跟请求中的 URI 从头开始匹配</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">   <span class="attribute">root</span> /usr/share/nginx/html</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="root-参数"><span class="post-title-index">2. </span><a href="#root-参数" class="headerlink" title="root 参数"></a>root 参数</h2><blockquote><p> <code>root</code> : 指令用于指定一个文件系统路径和静态资源文件的根目录。</p></blockquote><ul><li>语法</li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">   <span class="comment"># root路径＋location路径</span></span><br><span class="line">   <span class="attribute">root</span> path</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>示例</li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span><span class="regexp"> ^~</span> /test &#123;</span><br><span class="line"><span class="attribute">root</span> /opt</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>请求示例</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://x.x.x.x/test</span><br></pre></td></tr></table></figure><ul><li>实际访问目录</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/opt/test</span><br></pre></td></tr></table></figure><h2 id="alias-参数"><span class="post-title-index">3. </span><a href="#alias-参数" class="headerlink" title="alias 参数"></a>alias 参数</h2><blockquote><p> <code>alias</code> ：指令用于指定文件系统路径，但它与 <code>root</code> 指令有所不同。</p><p> 指定文件路径，使用 <code>alias</code> 时，目录后面一定要加 <strong>/</strong></p></blockquote><ul><li>语法</li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">   <span class="comment"># root路径＋location路径</span></span><br><span class="line">   <span class="attribute">alias</span> path</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>示例</li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span><span class="regexp"> ^~</span> /test-alias/ &#123;</span><br><span class="line">    <span class="attribute">alias</span> /opt/test/alias/;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>请求示例</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://x.x.x.x/test-alias/index.html</span><br></pre></td></tr></table></figure><ul><li>实际访问目录</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/opt/test/alias/</span><br></pre></td></tr></table></figure><h2 id="proxy-pass-修饰符"><span class="post-title-index">4. </span><a href="#proxy-pass-修饰符" class="headerlink" title="proxy_pass 修饰符"></a>proxy_pass 修饰符</h2><blockquote><p>反向代理配置，用于代理请求，适用于前后端负载分离或多台机器、服务器负载分离的场景。</p><p>匹配到location配置的URL路径后，转发请求到【proxy_pass】配置的URL。</p><p>是否会附加location配置路径与【proxy_pass】配置的路径后是否有”/“有关，有”/“则不附加。</p><p>具体博文请参考 <a href="http://localhost:4000/2023/05/11/Nginx/Nginx-%E4%BB%A3%E7%90%86%E8%BD%AC%E5%8F%91%EF%BC%88%E5%9B%9B%EF%BC%89/">Nginx-代理转发（四）</a></p></blockquote><h2 id="参考博文"><span class="post-title-index">5. </span><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><blockquote><p><a href="https://blog.csdn.net/weixin_46270732/article/details/116937218">什么是NGINX的动静分离；什么是负载均衡</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Web服务器 </category>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx-动静分离（五）</title>
      <link href="/posts/b5837b07.html"/>
      <url>/posts/b5837b07.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><span class="post-title-index">1. </span><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>本文的核心主要是将前四篇博文的内容进行一个综合练习，通过 <code>Nginx</code> 部署开源框架 <code>Ruoyi-Vue</code> 这个需求进行实现动静分离。 </p><p><strong>准备工作</strong></p><ul><li>网盘链接: <a href="https://pan.baidu.com/s/13bTaoFbooNpEQ9oE9vXsGw">https://pan.baidu.com/s/13bTaoFbooNpEQ9oE9vXsGw</a>  密码: vx7n</li></ul></blockquote><h2 id="问题思考"><span class="post-title-index">2. </span><a href="#问题思考" class="headerlink" title="问题思考?"></a>问题思考?</h2><ol><li><p><strong>为什么不使用 Apache Tomcat 处理动静分离？</strong></p><ul><li><code>Apache Tocmat</code> 严格来说是一款 <code>java EE</code> 服务器，主要是用来处理 <code>servlet</code> 请求。例如 <code>SpringBoot</code> 中内置的就是 Tomcat 服务器。</li></ul></li><li><p><strong>静态资源（<code>html、css、js</code>、图片）交给谁处理？</strong></p><ul><li>将静态文件交给 <code>Nginx</code> 处理，可以提高系统的访问速度，减少 <code>Tomcat</code> 的请求次数，有效的给后端服务器降压。</li></ul></li><li><p><strong>静态资源一定是和 <code>Nginx</code> 放在同一台服务器的吗？</strong></p><ul><li>是的，本质上来说 <code>Nginx</code> 配置本身就是一个静态资源的服务器。例如，我们打的前端 Docker 镜像本质上一个 <code>Nginx</code> 服务器。</li></ul></li><li><p><strong>那动静分离之后，静态资源如何跟动态请求交互呢？</strong></p><ul><li>静态资源是通过浏览器和动态资源进行交互的。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305120041894.png" alt="888dce6baa76ca30e5892d8f9d16f4a"></p></li></ol><h2 id="具体需求"><span class="post-title-index">3. </span><a href="#具体需求" class="headerlink" title="具体需求"></a>具体需求</h2><blockquote><p>本过程也可以在一台服务器中进行，但为了更好的理解动静分离，本人用到的是两台服务器 <code>server1</code> 和 <code>server2</code> 。</p><ul><li><code>server1</code> ：部署的是 <code>nginx</code> 和 前端文件服务；</li><li><code>server2</code> ：部署的是后端 jar 服务；</li></ul><p>实现流程如下：</p><ul><li>首先，当客户端通过 <a href="http://ip:port/path">http://ip:port/path</a> 进行访问。</li><li>然后，当请求达到服务器之后，通过 <code>Nginx</code> 代理 转发到真正的目标服务器上。</li><li>最后，返回请求信息。</li><li>具体流程如下图</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305120049140.png" alt="image-20230512004958119"></p></blockquote><h2 id="Nginx-配置-Ruoyi-Vue-框架"><span class="post-title-index">4. </span><a href="#Nginx-配置-Ruoyi-Vue-框架" class="headerlink" title="Nginx 配置 Ruoyi-Vue 框架"></a><code>Nginx</code> 配置 <code>Ruoyi-Vue</code> 框架</h2><blockquote><p>具体步骤如下：</p><ol><li><code>server1</code> ：上传静态资源。</li><li><code>server1</code> ：创建 <code>nginx</code> 配置文件，并使其生效。</li><li><code>server2</code> ：修改 <code>ruoyi-admin.jar</code> 中的数据库和 <code>Redis</code> 连接信息，并使其生效。</li><li><code>server1</code> ：通过 <code>crul</code> 命令是否可以访问该端口。</li><li>客户端访问</li></ol></blockquote><h3 id="实现步骤"><span class="post-title-index">4.1. </span><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h3><ol><li><p><code>server1</code> ：上传静态资源。</p><ul><li><p>文件路径：<code>/home/ruoyi</code></p><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305120104382.png" alt="image-20230512010402361"></p></li></ul></li><li><p><code>server1</code> ：创建 <code>nginx</code> 配置文件，并使其生效。</p><div class="tabs" id="server1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#server1-1">【第一步：创建nginx配置文件 8003.conf】</button></li><li class="tab"><button type="button" data-href="#server1-2">【第二步：刷新 nginx 配置文件】</button></li><li class="tab"><button type="button" data-href="#server1-3">【第三步：开放防火墙端口，刷新配置】</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="server1-1"><ul><li><p><code>nginx</code> 配置文件路径 <code>/etc/nginx/cond.d</code></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 虚拟主机server块</span></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line"> <span class="comment"># 监听端口</span></span><br><span class="line">     <span class="attribute">listen</span>       <span class="number">8003</span>;</span><br><span class="line">     <span class="comment"># 匹配请求中的host值</span></span><br><span class="line">     <span class="attribute">server_name</span>  localhost;</span><br><span class="line">     <span class="attribute">charset</span> utf-<span class="number">8</span>;</span><br><span class="line"></span><br><span class="line"> <span class="comment"># 监听请求静态资源路径</span></span><br><span class="line">     <span class="section">location</span> / &#123;</span><br><span class="line">       <span class="attribute">root</span>   /home/ruoyi;</span><br><span class="line">   <span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.html;</span><br><span class="line">       <span class="attribute">index</span>  index.html index.htm;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment"># 监听请求静态资源路径</span></span><br><span class="line">     <span class="section">location</span> /prod-api/ &#123;</span><br><span class="line">        <span class="comment">#nginx的主机地址</span></span><br><span class="line">        <span class="attribute">proxy_set_header</span> Host <span class="variable">$http_host</span>;</span><br><span class="line"></span><br><span class="line">     <span class="comment">#用户端真实的IP，即客户端IP</span></span><br><span class="line">         <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">         <span class="attribute">proxy_set_header</span> REMOTE-HOST <span class="variable">$remote_addr</span>;</span><br><span class="line">         <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">         </span><br><span class="line">         <span class="comment"># 配置代理服务器, 这里 如果是本机就直接使用 http://localhost:port，如果不是就是用目标服务器的 ip + 端口。</span></span><br><span class="line">         <span class="attribute">proxy_pass</span> http://localhost:8080/;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="attribute">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /50x.html;</span><br><span class="line">     <span class="section">location</span> = /50x.html &#123;</span><br><span class="line">         <span class="attribute">root</span>   html;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="server1-2"><ul><li><p>刷新 <code>nginx</code> 配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos conf.d]<span class="comment"># /usr/sbin/nginx -t </span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@VM-0-9-centos conf.d]<span class="comment"># /usr/sbin/nginx -s reload</span></span><br><span class="line">[root@VM-0-9-centos conf.d]<span class="comment"># </span></span><br></pre></td></tr></table></figure></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="server1-3"><ul><li><p><code>server1</code> ：开放防火墙端口，刷新配置。</p><div class="note warning simple"><p>如果为 阿里云 或者 腾讯云 需要配置安全组规则。例如：<a href="https://developer.aliyun.com/article/767328">阿里云-配置安全组规则</a></p></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos images]<span class="comment"># firewall-cmd --zone=public --add-port=8003/tcp --permanent # 开放8003端口</span></span><br><span class="line">success</span><br><span class="line">[root@VM-0-9-centos images]<span class="comment"># firewall-cmd --reload # 刷新防火墙配置</span></span><br><span class="line">success</span><br><span class="line">[root@VM-0-9-centos images]<span class="comment"># </span></span><br></pre></td></tr></table></figure></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></li><li><p><code>server2</code> ：修改 <code>ruoyi-admin.jar</code> 中的连接信息，并使其生效。</p><div class="tabs" id="server2"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#server2-1">【第一步：修改jar包配置信息】</button></li><li class="tab"><button type="button" data-href="#server2-2">【第二步：创建数据库信息】</button></li><li class="tab"><button type="button" data-href="#server2-3">【第三步：启动项目】</button></li><li class="tab"><button type="button" data-href="#server2-4">【第四步：开放端口】</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="server2-1"><ul><li><p>通过压缩工具打开<code>jar</code>包，可以通过 <code>360压缩</code> 或者 <code>7z</code> 打开</p><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305111635689.png" alt="image-20230511163533665"></p></li><li><p>修改 <code>BOOT-INF\classes</code> 文件下 <code>application-druid.yml</code> 文件中的 数据库连接信息</p><blockquote><p>关于Linux下的MySQL安装可以参考我的博客 《<a href="http://example.com/2023/05/09/Linux/Linux-Shell-MySQL/">Linux-Shell-MySQL</a>》</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 数据源配置</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">    <span class="attr">datasource:</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">        <span class="attr">driverClassName:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">        <span class="attr">druid:</span></span><br><span class="line">            <span class="comment"># 主库数据源</span></span><br><span class="line">            <span class="attr">master:</span></span><br><span class="line">                <span class="attr">url:</span> <span class="string">jdbc:mysql://server:3306/ry?useUnicode=true&amp;characterEncoding=utf8&amp;zeroDateTimeBehavior=convertToNull&amp;useSSL=true&amp;serverTimezone=GMT%2B8</span></span><br><span class="line">                <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">                <span class="attr">password:</span> <span class="string">P@ssw0rd</span></span><br><span class="line"><span class="string">......</span></span><br></pre></td></tr></table></figure></li><li><p>修改 <code>BOOT-INF\classes</code> 文件下 <code>application.yml</code> 文件中的 <code>Redis</code> 连接信息</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># redis 配置</span></span><br><span class="line"><span class="attr">redis:</span></span><br><span class="line">  <span class="comment"># 地址</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">server</span></span><br><span class="line">  <span class="comment"># 端口，默认为6379</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">6379</span></span><br><span class="line">  <span class="comment"># 数据库索引</span></span><br><span class="line">  <span class="attr">database:</span> <span class="number">0</span></span><br><span class="line">  <span class="comment"># 密码</span></span><br><span class="line">  <span class="attr">password:</span> </span><br><span class="line">  <span class="comment"># 连接超时时间</span></span><br><span class="line">  <span class="attr">timeout:</span> <span class="string">10s</span></span><br><span class="line">  <span class="attr">lettuce:</span></span><br><span class="line">    <span class="attr">pool:</span></span><br><span class="line">      <span class="comment"># 连接池中的最小空闲连接</span></span><br><span class="line">      <span class="attr">min-idle:</span> <span class="number">0</span></span><br><span class="line">      <span class="comment"># 连接池中的最大空闲连接</span></span><br><span class="line">      <span class="attr">max-idle:</span> <span class="number">8</span></span><br><span class="line">      <span class="comment"># 连接池的最大数据库连接数</span></span><br><span class="line">      <span class="attr">max-active:</span> <span class="number">8</span></span><br><span class="line">      <span class="comment"># #连接池最大阻塞等待时间（使用负值表示没有限制）</span></span><br><span class="line">      <span class="attr">max-wait:</span> <span class="string">-1ms</span></span><br></pre></td></tr></table></figure></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="server2-2"><ul><li><p>创建 <code>ry</code> 数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 创建 ruoyi 数据库 jdbc:mysql:<span class="operator">/</span><span class="operator">/</span>server:<span class="number">3306</span><span class="operator">/</span>ry</span><br><span class="line"><span class="keyword">CREATE</span> DATABASE `ry` <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="string">&#x27;utf8mb4&#x27;</span> <span class="keyword">COLLATE</span> <span class="string">&#x27;utf8mb4_unicode_ci&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>将百度网盘中的 <code>ry_20230223.sql</code> 文件导入 <code>ry</code> 数据库中</p><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305120108851.png" alt="image-20230512010835821"></p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="server2-3"><ul><li><p>上传至 <code>/home/ruoyi</code> 盘符</p><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305120110359.png" alt="image-20230512011020342"></p></li><li><p>启动项目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-24-4-centos ruoyi]<span class="comment"># java -jar ruoyi-admin.jar &amp;</span></span><br><span class="line">[1] 6556</span><br></pre></td></tr></table></figure></li><li><p>查看日志</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-24-4-centos ruoyi]<span class="comment"># tail -f nohup.out </span></span><br><span class="line">..............</span><br><span class="line">00:21:26.908 [main] INFO  c.r.RuoYiApplication - [logStarted,61] - Started RuoYiApplication <span class="keyword">in</span> 28.295 seconds (JVM running <span class="keyword">for</span> 29.96)</span><br><span class="line">(♥◠‿◠)ﾉﾞ  若依启动成功   ლ(´ڡ`ლ)ﾞ  </span><br><span class="line"> .-------.       ____     __        </span><br><span class="line"> |  _ _   \      \   \   /  /    </span><br><span class="line"> | ( <span class="string">&#x27; )  |       \  _. /  &#x27;</span>       </span><br><span class="line"> |(_ o _) /        _( )_ .<span class="string">&#x27;         </span></span><br><span class="line"><span class="string"> | (_,_).&#x27;</span> __  ___(_ o _)<span class="string">&#x27;          </span></span><br><span class="line"><span class="string"> |  |\ \  |  ||   |(_,_)&#x27;</span>         </span><br><span class="line"> |  | \ `<span class="string">&#x27;   /|   `-&#x27;</span>  /           </span><br><span class="line"> |  |  \    /  \      /           </span><br><span class="line"> <span class="string">&#x27;&#x27;</span>-<span class="string">&#x27;   `&#x27;</span>-<span class="string">&#x27;    `-..-&#x27;</span>  </span><br></pre></td></tr></table></figure></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="server2-4"><ul><li><div class="note warning simple"><p>如果为 阿里云 或者 腾讯云 需要配置安全组规则。例如：<a href="https://developer.aliyun.com/article/767328">阿里云-配置安全组规则</a></p></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-24-4-centos ruoyi]<span class="comment"># firewall-cmd --zone=public --add-port=8080/tcp --permanent # 开放8080端口</span></span><br><span class="line">success</span><br><span class="line">[root@VM-24-4-centos ruoyi]<span class="comment"># firewall-cmd --reload # 刷新防火墙配置</span></span><br><span class="line">success</span><br><span class="line">[root@VM-24-4-centos ruoyi]<span class="comment"># </span></span><br></pre></td></tr></table></figure></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></li><li><p><code>server1</code> ：通过 <code>crul</code> 命令是否可以访问该端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos home]<span class="comment"># curl http://server2:8080/</span></span><br><span class="line">欢迎使用RuoYi后台管理框架，当前版本：v3.8.5，请通过前端地址访问。</span><br></pre></td></tr></table></figure></li><li><p>客户端进行访问</p><ul><li>访问地址：<a href="http://server1:8003">http://server1:8003</a></li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305120112387.png" alt="image-20230512011246341"></p></li></ol><h2 id="参考博文"><span class="post-title-index">5. </span><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><blockquote><p><a href="https://blog.csdn.net/weixin_46270732/article/details/116937218">什么是NGINX的动静分离；什么是负载均衡</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Web服务器 </category>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx-代理转发（四）</title>
      <link href="/posts/fc4777.html"/>
      <url>/posts/fc4777.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><span class="post-title-index">1. </span><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>在 《<a href="https://wickson.top/2023/05/11/Nginx/Nginx-%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%EF%BC%88%E4%B8%89%EF%BC%89/">Nginx-反向代理（三）</a>》博文中在 nginx 的配置文件中出现了一下参数 <strong><code>proxy_pass</code></strong> 以及 如何 <strong><code>设置代理请求headers</code></strong>。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 监听请求静态资源路径</span></span><br><span class="line">  <span class="section">location</span> / &#123;</span><br><span class="line">    <span class="comment"># 配置代理服务器, 这里 如果是本机就直接使用 http://localhost:port，如果不是就是用目标服务器的 ip + 端口。</span></span><br><span class="line">    <span class="attribute">proxy_pass</span> http://server2:port;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></blockquote><h2 id="proxy-pass"><span class="post-title-index">2. </span><a href="#proxy-pass" class="headerlink" title="proxy_pass"></a>proxy_pass</h2><blockquote><ul><li>proxy_pass: <strong>用于配制代理服务器，<code>proxy_pass</code> 区别于 <code>root</code> 和 <code>alias</code> ，是将请求反向代理到指定的url，后面博文会讲解他们的区别</strong></li></ul></blockquote><ul><li>语法</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxy_pass &lt;URL&gt;</span><br></pre></td></tr></table></figure><ul><li>示例</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">proxy_pass http://127.0.0.1:8081;</span><br><span class="line">proxy_pass http://127.0.0.1/proxy</span><br></pre></td></tr></table></figure><ul><li>注意事项：<strong>nginx 配置 proxy_pass 中 url 末尾 带/ 与 不带/ 的区别</strong></li></ul><div class="tabs" id="proxy_pass"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#proxy_pass-1">【 带/ 】</button></li><li class="tab"><button type="button" data-href="#proxy_pass-2">【 不带/ 】</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="proxy_pass-1"><div class="note success simple"><p><strong>带 / : 会将原uri去除location匹配表达式后的内容拼接在proxy_pass中url之后</strong></p></div><p><strong>用户请求 URI</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bbs/abc/test.html</span><br></pre></td></tr></table></figure><p><strong>proxy_pass 配置</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 匹配路径，后缀不带/</span></span><br><span class="line"><span class="section">location</span> /bbs &#123;</span><br><span class="line">   <span class="comment"># 带 / : 会将原uri去除location匹配表达式后的内容拼接在proxy_pass中url之后</span></span><br><span class="line">   <span class="attribute">proxy_pass</span> http://127.0.0.1:8080/;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 匹配路径，后缀带/</span></span><br><span class="line"><span class="section">location</span> /bbs/ &#123;</span><br><span class="line">   <span class="comment"># 带 / : 会将原uri去除location匹配表达式后的内容拼接在proxy_pass中url之后</span></span><br><span class="line">   <span class="attribute">proxy_pass</span> http://127.0.0.1:8080/;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>【 location /bbs 】</p><ul><li><p>计算规则：<a href="http://127.0.0.1:8080/">http://127.0.0.1:8080/</a> + （/bbs/abc/test.html - /bbs）</p></li><li><p>最终结果：<a href="http://127.0.0.1:8080//abc/test.html">http://127.0.0.1:8080//abc/test.html</a></p></li></ul><p>【 location /bbs/ 】</p><ul><li><p>计算规则：<a href="http://127.0.0.1:8080/">http://127.0.0.1:8080/</a> + （/bbs/abc/test.html - /bbs/）</p></li><li><p>最终结果：<a href="http://127.0.0.1:8080/abc/test.html">http://127.0.0.1:8080/abc/test.html</a></p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="proxy_pass-2"><div class="note success simple"><p><strong>不带 / : location匹配到的部分属于请求部分，匹配到 /bbs/ 时会将整个请求部分追加到proxy_pass上</strong></p></div><p><strong>用户请求 URI</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bbs/abc/test.html</span><br></pre></td></tr></table></figure><p><strong>proxy_pass 配置</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 匹配路径，后缀不带/</span></span><br><span class="line"><span class="section">location</span> /bbs &#123;</span><br><span class="line">   <span class="comment"># 不带 / : location匹配到的部分属于请求部分，匹配到 /bbs/ 时会将整个请求部分追加到proxy_pass上</span></span><br><span class="line">   <span class="attribute">proxy_pass</span> http://127.0.0.1:8080;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 匹配路径，后缀带/</span></span><br><span class="line"><span class="section">location</span> /bbs/ &#123;</span><br><span class="line">   <span class="comment"># 不带 / : location匹配到的部分属于请求部分，匹配到 /bbs/ 时会将整个请求部分追加到proxy_pass上</span></span><br><span class="line">   <span class="attribute">proxy_pass</span> http://127.0.0.1:8080;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>【 location /bbs 】</p><ul><li><p>计算规则：<a href="http://127.0.0.1:8080">http://127.0.0.1:8080</a> + （/bbs/abc/test.html）</p></li><li><p>最终结果：<a href="http://127.0.0.1:8080/bbs/abc/test.html">http://127.0.0.1:8080/bbs/abc/test.html</a></p></li></ul><p>【 location /bbs/ 】</p><ul><li><p>计算规则：<a href="http://127.0.0.1:8080">http://127.0.0.1:8080</a> + （/bbs/abc/test.html）</p></li><li><p>最终结果：<a href="http://127.0.0.1:8080/bbs/abc/test.html">http://127.0.0.1:8080/bbs/abc/test.html</a></p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="设置代理请求-headers"><span class="post-title-index">3. </span><a href="#设置代理请求-headers" class="headerlink" title="设置代理请求 headers"></a>设置代理请求 <code>headers</code></h2><blockquote><p>headers：指的是Nginx服务器发送给<strong>客户端的 HTTP 响应头部信息</strong>。</p><p>在HTTP响应中，头部信息包含关于响应的元数据，如响应的内容类型、响应的日期和时间、服务器的类型和版本、以及其他有关响应和请求的信息。</p></blockquote><h3 id="问题"><span class="post-title-index">3.1. </span><a href="#问题" class="headerlink" title="问题"></a>问题</h3><div class="note orange simple"><p>问题位置：系统监控 -&gt; 在线用户 - 主机地址</p><p>问题描述：其中主机字段应该是获取的当前登录用户的真实 ip 地址，而不是主机服务器的ip。</p></div><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305112036519.png" alt="image-20230511203608477"></p><h3 id="解决方案"><span class="post-title-index">3.2. </span><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><ol><li><p>在 <code>nginx</code> 配置文件（8002.conf）中新增如下如下内容</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 虚拟主机server块</span></span><br><span class="line">server&#123;</span><br><span class="line">  </span><br><span class="line">    <span class="comment"># 监听端口</span></span><br><span class="line">    <span class="attribute">listen</span> <span class="number">8002</span>;</span><br><span class="line">    <span class="comment"># 匹配请求中的host值</span></span><br><span class="line">    <span class="attribute">server_name</span> ruoyi.localhost;</span><br><span class="line">      </span><br><span class="line">    <span class="comment"># 监听请求静态资源路径</span></span><br><span class="line">    <span class="section">location</span> / &#123;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">#nginx的主机地址</span></span><br><span class="line">        <span class="attribute">proxy_set_header</span> Host <span class="variable">$http_host</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">#用户端真实的IP，即客户端IP</span></span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="comment"># 配置代理服务器</span></span><br><span class="line">        <span class="attribute">proxy_pass</span> http://192.168.206.120:8088;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><ol><li><p>常用变量值</p><p>| <strong>变量名称</strong> | <strong>变量解释</strong>                                         |<br>| —————— | —————————————————————————— |<br>| $host        | nginx主机IP，例如 192.168.206.120                    |<br>| $http_host   | nginx主机IP和端口，例如 192.168.206.120:8002         |<br>| $proxy_host  | proxy_pass里配置的主机名和端口，例如：localhost:8088 |<br>| $remote_addr | 用户的真实IP，即客户端IP                             |</p></li></ol><ol><li><p>然后刷新配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos home]<span class="comment"># /usr/sbin/nginx -s reload</span></span><br><span class="line">[root@VM-0-9-centos home]<span class="comment"># </span></span><br></pre></td></tr></table></figure></li></ol><ol><li><p>访问</p><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305112034508.png" alt="image-20230511203437468"></p></li></ol><h2 id="参考博文"><span class="post-title-index">4. </span><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><blockquote><ul><li><a href="https://www.jianshu.com/p/549972745909"><code>nginx</code> 配置 proxy_pass 时 <code>url</code> 末尾带“/”与不带“/”的区别如下</a></li><li><a href="https://juejin.cn/post/7083306471697416228"><code>nginx proxy_pass</code>路径后带/与不带/的区别</a></li><li><a href="https://www.bilibili.com/video/BV1rG4y1e7BQ/?p=1&amp;vd_source=8c87bde4b88d9c9613014acf272109fc"><code>nginx</code>一小时入门精讲课程(干货纯享版)</a></li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> Web服务器 </category>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx-反向代理（三）</title>
      <link href="/posts/be2f0375.html"/>
      <url>/posts/be2f0375.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><span class="post-title-index">1. </span><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>本文 主要通过案例 <strong><code>Nginx</code> 配置 <code>Ruoyi</code> 框架</strong> ，学习反向代理。 </p><p><strong>准备工作</strong></p><ul><li>网盘链接: <a href="https://pan.baidu.com/s/1NmCR-vdAcZLouRRn9V1yTA">https://pan.baidu.com/s/1NmCR-vdAcZLouRRn9V1yTA</a> 密码: 1b60</li><li>官网文档：<a href="http://doc.ruoyi.vip/ruoyi">http://doc.ruoyi.vip/ruoyi</a></li><li>源码下载：<a href="https://codeload.github.com/yangzongzhuan/RuoYi/zip/refs/tags/v4.7.4">https://codeload.github.com/yangzongzhuan/RuoYi/zip/refs/tags/v4.7.4</a></li></ul></blockquote><h2 id="具体需求"><span class="post-title-index">2. </span><a href="#具体需求" class="headerlink" title="具体需求"></a><strong>具体需求</strong></h2><blockquote><p>本过程也可以在一台服务器中进行，但为了更好的理解反向代理，本人用到的是两台服务器 <code>server1</code> 和 <code>server2</code> 。</p><ul><li><code>server1</code> ：部署的是 <code>nginx</code> 服务</li><li><code>server2</code> ：部署的是后端 jar 服务</li></ul><p>实现流程如下：</p><ul><li>首先，当客户端通过 <a href="http://ip:port/path">http://ip:port/path</a> 进行访问。</li><li>然后，当请求达到服务器之后，通过 <code>Nginx</code> 代理 转发到真正的目标服务器上。</li><li>最后，返回请求信息。</li><li>具体流程如下图</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305111616675.png" alt="image-20230511161605653"></p></blockquote><h2 id="Nginx-配置-Ruoyi-框架"><span class="post-title-index">3. </span><a href="#Nginx-配置-Ruoyi-框架" class="headerlink" title="Nginx 配置 Ruoyi 框架"></a><code>Nginx</code> 配置 <code>Ruoyi</code> 框架</h2><blockquote><p>具体步骤如下：</p><ol><li><code>server1</code> ：创建 <code>nginx</code> 配置文件，并使其生效。</li><li><code>server2</code> ：修改 <code>ruoyi-admin.jar</code> 中的数据库连接信息，并使其生效。</li><li><code>server1</code> ：通过 <code>crul</code> 命令是否可以访问该端口。</li><li>客户端访问</li></ol></blockquote><h3 id="实现步骤"><span class="post-title-index">3.1. </span><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h3><ol><li><p><code>server1</code> ：创建 <code>nginx</code> 配置文件，并使其生效。</p><div class="tabs" id="server1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#server1-1">【第一步：创建nginx配置文件 8002.conf】</button></li><li class="tab"><button type="button" data-href="#server1-2">【第二步：刷新 nginx 配置文件】</button></li><li class="tab"><button type="button" data-href="#server1-3">【第三步：开放防火墙端口，刷新配置】</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="server1-1"><ul><li><p><code>nginx</code> 配置文件路径 <code>/etc/nginx/cond.d</code></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 虚拟主机server块</span></span><br><span class="line">server&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># 监听端口</span></span><br><span class="line">  <span class="attribute">listen</span> <span class="number">8002</span>;</span><br><span class="line">  <span class="comment"># 匹配请求中的host值</span></span><br><span class="line">  <span class="attribute">server_name</span> ruoyi.localhost;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># 监听请求静态资源路径</span></span><br><span class="line">  <span class="section">location</span> / &#123;</span><br><span class="line">    <span class="comment"># 配置代理服务器, 这里 如果是本机就直接使用 http://localhost:port，如果不是就是用目标服务器的 ip + 端口。</span></span><br><span class="line">    <span class="attribute">proxy_pass</span> http://server2:port;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="server1-2"><ul><li><p>刷新 <code>nginx</code> 配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos conf.d]<span class="comment"># /usr/sbin/nginx -t </span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@VM-0-9-centos conf.d]<span class="comment"># /usr/sbin/nginx -s reload</span></span><br><span class="line">[root@VM-0-9-centos conf.d]<span class="comment"># </span></span><br></pre></td></tr></table></figure></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="server1-3"><ul><li><p><code>server1</code> ：开放防火墙端口，刷新配置。</p><div class="note warning simple"><p>如果为 阿里云 或者 腾讯云 需要配置安全组规则。例如：<a href="https://developer.aliyun.com/article/767328">阿里云-配置安全组规则</a></p></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos images]<span class="comment"># firewall-cmd --zone=public --add-port=8002/tcp --permanent # 开放8002端口</span></span><br><span class="line">success</span><br><span class="line">[root@VM-0-9-centos images]<span class="comment"># firewall-cmd --reload # 刷新防火墙配置</span></span><br><span class="line">success</span><br><span class="line">[root@VM-0-9-centos images]<span class="comment"># </span></span><br></pre></td></tr></table></figure></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></li><li><p><code>server2</code> ：修改 <code>ruoyi-admin.jar</code> 中的数据库连接信息，并使其生效。</p><div class="tabs" id="server2"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#server2-1">【第一步：修改jar包配置信息】</button></li><li class="tab"><button type="button" data-href="#server2-2">【第二步：创建数据库信息】</button></li><li class="tab"><button type="button" data-href="#server2-3">【第三步：启动项目】</button></li><li class="tab"><button type="button" data-href="#server2-4">【第四步：开放端口】</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="server2-1"><ul><li><p>通过压缩工具打开<code>jar</code>包，可以通过 <code>360压缩</code> 或者 <code>7z</code> 打开</p><p> <img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305111635689.png" alt="image-20230511163533665"></p></li><li><p>修改 <code>BOOT-INF\classes</code> 文件下 <code>application-druid.yml</code> 文件中的 数据库连接信息</p><blockquote><p>关于Linux下的MySQL安装可以参考我的博客 《<a href="http://example.com/2023/05/09/Linux/Linux-Shell-MySQL/">Linux-Shell-MySQL</a>》</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 数据源配置</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">    <span class="attr">datasource:</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">        <span class="attr">driverClassName:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">        <span class="attr">druid:</span></span><br><span class="line">            <span class="comment"># 主库数据源</span></span><br><span class="line">            <span class="attr">master:</span></span><br><span class="line">                <span class="attr">url:</span> <span class="string">jdbc:mysql://server:3306/ry?useUnicode=true&amp;characterEncoding=utf8&amp;zeroDateTimeBehavior=convertToNull&amp;useSSL=true&amp;serverTimezone=GMT%2B8</span></span><br><span class="line">                <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">                <span class="attr">password:</span> <span class="string">P@ssw0rd</span></span><br><span class="line"><span class="string">......</span></span><br></pre></td></tr></table></figure></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="server2-2"><ul><li><p>创建 <code>ry</code> 数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 创建 ruoyi 数据库 jdbc:mysql:<span class="operator">/</span><span class="operator">/</span>server:<span class="number">3306</span><span class="operator">/</span>ry</span><br><span class="line"><span class="keyword">CREATE</span> DATABASE `ry` <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="string">&#x27;utf8mb4&#x27;</span> <span class="keyword">COLLATE</span> <span class="string">&#x27;utf8mb4_unicode_ci&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>将百度网盘中的 <code>ry_20210924.sql</code> 文件导入 <code>ry</code> 数据库中</p><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305111648892.png" alt="image-20230511164821860"></p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="server2-3"><ul><li><p>上传至 <code>/home/ruoyi</code> 盘符</p><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305111700052.png" alt="image-20230511170026032"></p></li><li><p>启动项目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-rw-r--r-- 1 root root 75366452 May 11 16:58 ruoyi-admin.jar</span><br><span class="line">[root@VM-24-4-centos ruoyi]<span class="comment"># nohup java -jar ruoyi-admin.jar &amp;</span></span><br><span class="line">[1] 26695</span><br></pre></td></tr></table></figure></li><li><p>查看日志</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-24-4-centos ruoyi]<span class="comment"># tail -f nohup.out </span></span><br><span class="line">..............</span><br><span class="line">17:09:07.497 [main] INFO  c.r.RuoYiApplication - [logStarted,61] - Started RuoYiApplication <span class="keyword">in</span> 22.314 seconds (JVM running <span class="keyword">for</span> 23.97)</span><br><span class="line">(♥◠‿◠)ﾉﾞ  若依启动成功   ლ(´ڡ`ლ)ﾞ  </span><br><span class="line"> .-------.       ____     __        </span><br><span class="line"> |  _ _   \      \   \   /  /    </span><br><span class="line"> | ( <span class="string">&#x27; )  |       \  _. /  &#x27;</span>       </span><br><span class="line"> |(_ o _) /        _( )_ .<span class="string">&#x27;         </span></span><br><span class="line"><span class="string"> | (_,_).&#x27;</span> __  ___(_ o _)<span class="string">&#x27;          </span></span><br><span class="line"><span class="string"> |  |\ \  |  ||   |(_,_)&#x27;</span>         </span><br><span class="line"> |  | \ `<span class="string">&#x27;   /|   `-&#x27;</span>  /           </span><br><span class="line"> |  |  \    /  \      /           </span><br><span class="line"> <span class="string">&#x27;&#x27;</span>-<span class="string">&#x27;   `&#x27;</span>-<span class="string">&#x27;    `-..-&#x27;</span> </span><br></pre></td></tr></table></figure></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="server2-4"><ul><li><div class="note warning simple"><p>如果为 阿里云 或者 腾讯云 需要配置安全组规则。例如：<a href="https://developer.aliyun.com/article/767328">阿里云-配置安全组规则</a></p></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-24-4-centos ruoyi]<span class="comment"># firewall-cmd --zone=public --add-port=8088/tcp --permanent # 开放8088端口</span></span><br><span class="line">success</span><br><span class="line">[root@VM-24-4-centos ruoyi]<span class="comment"># firewall-cmd --reload # 刷新防火墙配置</span></span><br><span class="line">success</span><br><span class="line">[root@VM-24-4-centos ruoyi]<span class="comment"># </span></span><br></pre></td></tr></table></figure></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></li><li><p><code>server1</code> ：通过 <code>crul</code> 命令是否可以访问该端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos conf.d]<span class="comment"># curl http://server2:8088/</span></span><br><span class="line">[root@VM-0-9-centos conf.d]<span class="comment"># </span></span><br></pre></td></tr></table></figure></li><li><p>客户端进行访问</p><ul><li>访问地址：<a href="http://server1:8002">http://server1:8002</a></li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305111744050.png" alt="image-20230511174435926"></p></li></ol><h2 id="参考博文"><span class="post-title-index">4. </span><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><blockquote><ul><li><a href="https://www.bilibili.com/video/BV1rG4y1e7BQ/?p=1&amp;vd_source=8c87bde4b88d9c9613014acf272109fc"><code>nginx</code>一小时入门精讲课程(干货纯享版)</a></li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> Web服务器 </category>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx-静态资源（二）</title>
      <link href="/posts/9aade770.html"/>
      <url>/posts/9aade770.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><span class="post-title-index">1. </span><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>本篇博文主要是通过 <code>Nginx</code> 服务器代理静态资源。主要有两个案例，其中一个是 <strong><code>Nginx</code> 配置静态资源</strong>，另一个是 <strong><code>Nginx</code> 配置静态网站</strong>。</p><p><strong>常见静态资源类型：</strong></p><ul><li>浏览器端渲染：HTML、<code>CSS</code>、<code>JS</code></li><li>图片：<code>JPEG</code>、<code>GIF</code>、<code>PNG</code></li><li>视频：<code>FLV</code>、<code>MPEG</code></li><li>文件：<code>TXT</code> 等任意下载文件</li></ul></blockquote><h2 id="Nginx-配置静态资源"><span class="post-title-index">2. </span><a href="#Nginx-配置静态资源" class="headerlink" title="Nginx 配置静态资源"></a><code>Nginx</code> 配置静态资源</h2><blockquote><p>具体步骤如下：</p><ol><li>上传图片到指定盘符；</li><li>创建 <code>nginx</code> 配置文件；</li><li>检测 <code>nginx</code> 配置文件，并刷新配置文件；</li><li>开放防火墙端口，并刷新配置；</li><li>进行访问；</li></ol></blockquote><h3 id="实现步骤"><span class="post-title-index">2.1. </span><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h3><ol><li><p>上传图片到指定盘符</p><ul><li>上传路径：<code>/home/images</code> 盘符下</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305110006300.png" alt="image-20230511000644277"></p></li><li><p>创建 <code>nginx</code> 配置文件。</p><ul><li><p>配置文件路径：<code>/etc/nginx/conf</code></p></li><li><p>配置文件名称：<code>8000.conf</code> </p></li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 虚拟主机server块</span></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line"> </span><br><span class="line">     <span class="comment"># 端口</span></span><br><span class="line">     <span class="attribute">listen</span> <span class="number">8000</span>;</span><br><span class="line">     <span class="comment"># 匹配请求中的host值</span></span><br><span class="line">     <span class="attribute">server_name</span>    localhost;</span><br><span class="line"> </span><br><span class="line">     <span class="comment"># 监听请求静态资源 图片 路径</span></span><br><span class="line">     <span class="section">location</span> /images &#123;</span><br><span class="line">          <span class="comment"># 查找目录</span></span><br><span class="line">          <span class="attribute">root</span> /home;</span><br><span class="line">     &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>检测 <code>nginx</code> 配置文件，并刷新配置文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos images]<span class="comment"># /usr/sbin/nginx -t # 检测配置文件命令</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@VM-0-9-centos images]<span class="comment"># /usr/sbin/nginx -s reload # 刷新配置文件</span></span><br><span class="line">[root@VM-0-9-centos images]<span class="comment"># </span></span><br></pre></td></tr></table></figure></li><li><p>开放防火墙端口，并刷新配置。</p><div class="note warning simple"><p>如果为 阿里云 或者 腾讯云 需要配置安全组规则。例如：<a href="https://developer.aliyun.com/article/767328">阿里云-配置安全组规则</a></p></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos images]<span class="comment"># firewall-cmd --zone=public --add-port=8000/tcp --permanent # 开放8000端口</span></span><br><span class="line">success</span><br><span class="line">[root@VM-0-9-centos images]<span class="comment"># firewall-cmd --reload # 刷新防火墙配置</span></span><br><span class="line">success</span><br><span class="line">[root@VM-0-9-centos images]<span class="comment"># </span></span><br></pre></td></tr></table></figure></li><li><p>进行访问</p><ul><li>访问路径：<code>http:ip:8000/images/20230506231750.jpg</code></li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305110136357.png" alt="image-20230511013614304"></p></li></ol><h2 id="Nginx-配置静态网站"><span class="post-title-index">3. </span><a href="#Nginx-配置静态网站" class="headerlink" title="Nginx 配置静态网站"></a><code>Nginx</code> 配置静态网站</h2><h3 id="准备工作"><span class="post-title-index">3.1. </span><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><blockquote><p><code>Nginx</code> 配置静态网站，<code>AdminLTE</code> 后台管理系统。</p><ul><li><code>AdminLTE</code> 官方网址：<a href="https://adminlte.io/">https://adminlte.io/</a></li><li>源码下载：<a href="https://codeload.github.com/ColorlibHQ/AdminLTE/tar.gz/refs/tags/v3.2.0">https://codeload.github.com/ColorlibHQ/AdminLTE/tar.gz/refs/tags/v3.2.0</a></li></ul></blockquote><h3 id="实现步骤-1"><span class="post-title-index">3.2. </span><a href="#实现步骤-1" class="headerlink" title="实现步骤"></a>实现步骤</h3><blockquote><p>具体步骤如下：</p><ol><li>上传静态资源到指定盘符；</li><li><code>nginx</code> 配置文件；</li><li>检测 <code>nginx</code> 配置文件，并刷新配置文件；</li><li>开放防火墙端口，并刷新配置；</li><li>进行访问；</li></ol></blockquote><ol><li><p><strong>上传静态资源到指定盘符</strong></p><ul><li>上传路径：<code>/home/images</code> 盘符下</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305110122048.png" alt="image-20230511012248028"></p></li><li><p><strong>创建 <code>Nginx</code> 配置文件</strong></p><ul><li>配置文件路径：<code>/etc/nginx/conf</code></li><li>配置文件名称：<code>8001.conf</code> </li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置虚拟主机的相关参数，可以有多个</span></span><br><span class="line">server&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 监听端口, 监听可以配置成IP 或 端口或IP+端口listen 127.0.0.1:8000;</span></span><br><span class="line">    <span class="attribute">listen</span> <span class="number">8001</span>;</span><br><span class="line">    <span class="comment"># 通过请求中的 host 值，找到对应的虚拟主机的配置</span></span><br><span class="line">    <span class="attribute">server_name</span> nginx-dev;</span><br><span class="line">     </span><br><span class="line">    <span class="comment"># 配置请求路由，location 总是从/目录开始匹配。</span></span><br><span class="line">    <span class="comment"># 例如：/static/css ==》 location /css &#123;   root /static;  &#125;</span></span><br><span class="line">    <span class="section">location</span> / &#123;</span><br><span class="line">        <span class="attribute">root</span> /home/static/AdminLTE-<span class="number">3</span>.<span class="number">2</span>.<span class="number">0</span>;</span><br><span class="line">        <span class="attribute">index</span> index.html index2.html index3.html;</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>检测 <code>nginx</code> 配置文件，并刷新配置文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos images]<span class="comment"># /usr/sbin/nginx -t # 检测配置文件命令</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@VM-0-9-centos images]<span class="comment"># /usr/sbin/nginx -s reload # 刷新配置文件</span></span><br><span class="line">[root@VM-0-9-centos images]<span class="comment"># </span></span><br></pre></td></tr></table></figure></li><li><p><strong>开放防火墙端口，并刷新配置</strong></p><div class="note warning simple"><p>如果为 阿里云 或者 腾讯云 需要配置安全组规则。例如：<a href="https://developer.aliyun.com/article/767328">阿里云-配置安全组规则</a></p></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos images]<span class="comment"># firewall-cmd --zone=public --add-port=8001/tcp --permanent # 开放8001端口</span></span><br><span class="line">success</span><br><span class="line">[root@VM-0-9-centos images]<span class="comment"># firewall-cmd --reload # 刷新防火墙配置</span></span><br><span class="line">success</span><br><span class="line">[root@VM-0-9-centos images]<span class="comment"># </span></span><br></pre></td></tr></table></figure></li><li><p><strong>进行访问</strong></p><ul><li>访问路径：<a href="http://ip:8001/index.html">http://ip:8001/index.html</a></li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305110133134.png" alt="image-20230511013353075"></p></li></ol><h2 id="参考博文"><span class="post-title-index">4. </span><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><blockquote><ul><li><a href="https://tsejx.github.io/devops-guidebook//server/nginx/static-resource-server">静态资源服务器</a></li><li><a href="https://www.bilibili.com/video/BV1rG4y1e7BQ/?p=1&amp;vd_source=8c87bde4b88d9c9613014acf272109fc"><code>nginx</code>一小时入门精讲课程(干货纯享版)</a></li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> Web服务器 </category>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx-基础知识（一）</title>
      <link href="/posts/380e70b.html"/>
      <url>/posts/380e70b.html</url>
      
        <content type="html"><![CDATA[<h2 id="Nginx-是什么？"><span class="post-title-index">1. </span><a href="#Nginx-是什么？" class="headerlink" title="Nginx 是什么？"></a><code>Nginx</code> 是什么？</h2><blockquote><p> <code>Nginx</code> 是一款轻量级的 Web 服务器 / 反向代理服务器，广泛用于负载均衡、反向代理和 HTTP 缓存等功能。</p></blockquote><h2 id="Nginx-解决了什么问题？"><span class="post-title-index">2. </span><a href="#Nginx-解决了什么问题？" class="headerlink" title="Nginx 解决了什么问题？"></a><code>Nginx</code> 解决了什么问题？</h2><ul><li>高并发连接数请求处理：<code>Nginx</code> 通过异步非阻塞的设计架构，能够高效地处理高并发连接数的请求。</li><li>负载均衡：<code>Nginx</code> 可以将客户端的请求均衡分发到后端的多台服务器上，从而提供负载均衡服务。</li><li>反向代理：<code>Nginx</code> 可以作为反向代理服务器，将客户端的请求转发到后端的服务器上，从而为客户端提供负载均衡、高可用性和安全性等功能。</li><li>HTTP 缓存：<code>Nginx</code> 可以将常用的静态文件缓存在内存中，从而提升网站的访问速度。</li><li><code>HTTPS</code>服务：<code>Nginx</code> 支持 <code>HTTPS</code>协议，可以为网站提供安全的加密传输服务。</li></ul><h2 id="Nginx-如何使用？"><span class="post-title-index">3. </span><a href="#Nginx-如何使用？" class="headerlink" title="Nginx 如何使用？"></a><code>Nginx</code> 如何使用？</h2><ul><li>在线安装参考（外网博文）：<a href="https://www.runoob.com/linux/`Nginx`-install-setup.html">在线安装 <code>Nginx</code></a></li><li>Docker安装参考（外网博文）：<a href="https://www.runoob.com/docker/docker-install-`Nginx`.html">Docker 安装 <code>Nginx</code></a></li></ul><h2 id="Nginx-相关目录"><span class="post-title-index">4. </span><a href="#Nginx-相关目录" class="headerlink" title="Nginx 相关目录"></a><code>Nginx</code> 相关目录</h2><ul><li><p><code>Nginx</code> 安装目录</p><ul><li>外网（在线安装）：<code>/usr/local/Nginx</code></li></ul></li><li><p><code>Nginx</code> 启动目录</p><ul><li>外网（在线安装）：<code>/usr/local/Nginx/sbin</code></li></ul></li><li><p><code>Nginx</code> 日志目录</p><ul><li>外网（在线安装）：<code>/usr/local/Nginx/logs</code></li></ul></li></ul><h2 id="Nginx-常用命令"><span class="post-title-index">5. </span><a href="#Nginx-常用命令" class="headerlink" title="Nginx 常用命令"></a><code>Nginx</code> 常用命令</h2><div class="table-container"><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td><code>Nginx</code> -t</td><td>执行配置文件检测</td></tr><tr><td><code>Nginx</code> -t -q</td><td>执行配置文件检测，且只输出错误信息</td></tr><tr><td><code>Nginx</code> -v</td><td>显示<code>Nginx</code>执行文件的版本信息</td></tr><tr><td><code>Nginx</code> -s stop</td><td>快速停止<code>Nginx</code></td></tr><tr><td><code>Nginx</code> -s reload</td><td>重新加载配置文件</td></tr><tr><td><code>Nginx</code> -c /etc/<code>Nginx</code>/<code>Nginx</code>.conf</td><td>指定 <code>Nginx</code>.conf 文件的位置</td></tr></tbody></table></div><h2 id="Nginx-代理"><span class="post-title-index">6. </span><a href="#Nginx-代理" class="headerlink" title="Nginx 代理"></a><code>Nginx</code> 代理</h2><h3 id="正向代理"><span class="post-title-index">6.1. </span><a href="#正向代理" class="headerlink" title="正向代理"></a>正向代理</h3><blockquote><p>正向代理：当我们站在客户端的角度想访问 Google， 正向代理服务器类似一个跳板机，代理访问外部资源。</p></blockquote><p>例如，下面这个例子，我们想访问 Google，但是存在相应的防火墙，无法访问。</p><ul><li><p>首先，先找一个能访问到 Google 的服务器。</p></li><li><p>然后，我们能够访问这台服务器，作为我们能够访问Google的桥梁。</p></li><li><p>最后，在让代理服务器将我们想要的数据返回给我们。</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305101524071.png" alt="image2023-1-3_19-20-3.png"></p><h3 id="反向代理"><span class="post-title-index">6.2. </span><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h3><blockquote><p>反向代理（Reverse Proxy）实际运行方式是指以代理服务器来接受 <code>internet</code> 上的连接请求。</p><p>客户端是无感知代理的存在的，反向代理对外都是透明的，访问者者并不知道自己访问的是一个代理，因为客户端不需要任何配置就可以访问。</p><p>例如，我们访问 <code>taobao.com</code> 或者 <code>jd.com</code> 其实 都经过了 很多次代理然后才到的目标服务器。</p></blockquote><p>例子，我们部署的项目</p><ul><li><p>首先，我们通过客户端访问 106.12.78.90 时，会在浏览器得到我们想看到的内容。</p></li><li><p>然后，但项目部署在 10.10.20.200 这台服务器中，并暴露外网 106.12.78.90 暴露出去。</p></li><li><p>最后，在服务器 10.10.20.200 内部可能做了多次代理，才访问到我们的Web服务器（10.10.20.189）中。</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305101532396.png" alt="image2023-1-3_19-27-24.png"></p><h3 id="正向代理、方向代理区别"><span class="post-title-index">6.3. </span><a href="#正向代理、方向代理区别" class="headerlink" title="正向代理、方向代理区别"></a>正向代理、方向代理区别</h3><blockquote><p>来自知乎：<a href="https://www.zhihu.com/question/24723688">https://www.zhihu.com/question/24723688</a></p></blockquote><ul><li><p>正向代理中，proxy和client同属一个LAN，对server透明；</p></li><li><p>反向代理中，proxy和server同属一个LAN，对client透明。</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305101537454.png" alt="image2023-1-3_19-40-39.png"></p><h2 id="Nginx-负载均衡"><span class="post-title-index">7. </span><a href="#Nginx-负载均衡" class="headerlink" title="Nginx 负载均衡"></a><code>Nginx</code> 负载均衡</h2><blockquote><p>负载均衡，通过反向代理服务器来优化网站的负载，一台服务器不行就搞多台。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305101527469.png" alt="image2023-1-3_19-36-41.png"></p><h2 id="Nginx-配置文件"><span class="post-title-index">8. </span><a href="#Nginx-配置文件" class="headerlink" title="Nginx 配置文件"></a><code>Nginx</code> 配置文件</h2><blockquote><p><code>nginx.conf</code> 配置文件分为如下三个板块：</p><ul><li>全局配置</li><li>I/O 事件配置</li><li><code>http</code> 配置</li></ul></blockquote><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">worker_processes</span> <span class="number">1</span>; <span class="comment"># 只启动一个工作进程</span></span><br><span class="line"> </span><br><span class="line"><span class="section">events</span> &#123;</span><br><span class="line">    <span class="attribute">worker_connections</span> <span class="number">1024</span>; <span class="comment"># 每个工作进程的最大连接为1024</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="attribute">include</span> mime.types; <span class="comment"># 引入MIME类型映射表文件</span></span><br><span class="line">    <span class="attribute">default_type</span> application/octet-stream; <span class="comment"># 全局默认映射类型为application/octet-stream</span></span><br><span class="line"> </span><br><span class="line">    <span class="attribute">sendfile</span> <span class="literal">on</span>; <span class="comment"># 启用零复制机制</span></span><br><span class="line">    <span class="attribute">keepalive_timeout</span> <span class="number">65</span>; <span class="comment"># 保持连接超时时间为65s</span></span><br><span class="line">     </span><br><span class="line">    <span class="section">server</span> &#123; <span class="comment"># 虚拟主机配置</span></span><br><span class="line">        <span class="attribute">listen</span> <span class="number">80</span>; <span class="comment"># 监听80端口的网络连接请求</span></span><br><span class="line">        <span class="attribute">server_name</span> localhost; <span class="comment"># 虚拟主机名为localhost</span></span><br><span class="line"> </span><br><span class="line">        <span class="section">location</span> / &#123; <span class="comment"># 匹配路径</span></span><br><span class="line">            <span class="attribute">root</span> html; <span class="comment"># 文件根目录</span></span><br><span class="line">            <span class="attribute">index</span> index.html index.htm; <span class="comment"># 默认页名称</span></span><br><span class="line">        &#125;</span><br><span class="line">         </span><br><span class="line">        <span class="attribute">error_page</span> <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span> /50x.html; <span class="comment"># 报错编码对应页面</span></span><br><span class="line">        <span class="section">location</span> = /50x.html &#123;</span><br><span class="line">            <span class="attribute">root</span> html;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 引入其他 nginx 配置文件</span></span><br><span class="line">    <span class="attribute">include</span> /etc/nginx/conf.d/<span class="regexp">*.conf</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考博文"><span class="post-title-index">9. </span><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><blockquote><ul><li><a href="https://www.cnblogs.com/anker/p/6056540.html">正向代理与反向代理</a></li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> Web服务器 </category>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux-Shell-MySQL</title>
      <link href="/posts/3ffb66e.html"/>
      <url>/posts/3ffb66e.html</url>
      
        <content type="html"><![CDATA[<h2 id="准备工作"><span class="post-title-index">1. </span><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><blockquote><p>现在 <code>MySQL</code> 虽说可以通过 <code>Docker</code> 一键安装，但是还是有很多公司的项目依旧在使用传统的方式进行安装。</p><p>如下方式可以通过脚本一键安装 <code>MySQL 5.7.35</code></p><p>准备环境：</p><ul><li>操作系统：CentOS 7.6 64位</li><li>实例配置：1核 1GB 5Mbps</li><li>MySQL：<code>mysql 5.7.35</code></li></ul><p>准备脚本（网盘自取）：</p><ul><li>链接：<a href="https://pan.baidu.com/s/1vXElBOA_zM1dlwxUT-wi7Q">https://pan.baidu.com/s/1vXElBOA_zM1dlwxUT-wi7Q</a> </li><li>提取码：kh9m </li></ul></blockquote><h2 id="步骤"><span class="post-title-index">2. </span><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><blockquote><ol><li>将脚本上传至 <code>/tmp</code> 目录下</li><li>给脚本添加权限添加权限</li><li>执行脚本</li><li>开放防火墙端口，并刷新配置</li><li>配置 <code>MySQL</code> </li><li>测试链接</li></ol></blockquote><ol><li><p>将脚本上传至 <code>/tmp</code> 目录下</p><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305111335799.png" alt="image-20230511133516733"></p></li><li><p>给脚本添加权限添加权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-24-4-centos tmp]<span class="comment"># chmod +x mysqlinstall_auto.sh </span></span><br></pre></td></tr></table></figure></li><li><p>执行脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-24-4-centos tmp]<span class="comment"># ./mysqlinstall_auto.sh </span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line">MySQL自动部署脚本执行</span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line">发现MySQL-server安装文件 mysql-community-server-5.7.35-1.el7.x86_64.rpm</span><br><span class="line">发现MySQL-client安装文件 mysql-community-client-5.7.35-1.el7.x86_64.rpm</span><br><span class="line">--------------------------------------------------------------------</span><br><span class="line">正在安装MySQL...</span><br><span class="line">正在卸载MariaDB</span><br><span class="line">已卸载MariaDB</span><br><span class="line">正在安装MySQL-server...</span><br><span class="line">warning: mysql-community-server-5.7.35-1.el7.x86_64.rpm: Header V3 DSA/SHA256 Signature, key ID 5072e1f5: NOKEY</span><br><span class="line"><span class="comment">################################# [100%]</span></span><br><span class="line">Updating / installing...</span><br><span class="line"><span class="comment">################################# [100%]</span></span><br><span class="line">server安装完成</span><br><span class="line">正在安装MySQL-client...</span><br><span class="line">warning: mysql-community-client-5.7.35-1.el7.x86_64.rpm: Header V3 DSA/SHA256 Signature, key ID 5072e1f5: NOKEY</span><br><span class="line"><span class="comment">################################# [100%]</span></span><br><span class="line">Updating / installing...</span><br><span class="line"><span class="comment">################################# [100%]</span></span><br><span class="line">client安装完成</span><br><span class="line">--------------------------------------------------------------------</span><br><span class="line">正在启动MySQL...</span><br><span class="line">启动成功</span><br><span class="line">--------------------------------------------------------------------</span><br><span class="line">正在获取mysql初始密码</span><br><span class="line">mysql初始密码: )tLp(LCD&lt;6*S</span><br><span class="line">-------------------------------------------------</span><br><span class="line">部署脚本执行完成</span><br></pre></td></tr></table></figure></li><li><p>开放防火墙端口，并刷新配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-24-4-centos tmp]<span class="comment"># firewall-cmd --zone=public --add-port=3306/tcp --permanent # 开放3306端口</span></span><br><span class="line">success</span><br><span class="line">[root@VM-24-4-centos tmp]<span class="comment"># firewall-cmd --reload # 刷新防火墙配置</span></span><br><span class="line">success</span><br><span class="line">[root@VM-24-4-centos tmp]<span class="comment"># </span></span><br></pre></td></tr></table></figure></li><li><p>配置 <code>MySQL</code> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-24-4-centos tmp]<span class="comment"># mysql -u root -p </span></span><br><span class="line">Enter password: </span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection <span class="built_in">id</span> is 3</span><br><span class="line">Server version: 5.7.35</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2021, Oracle and/or its affiliates.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> or <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">&#x27;\c&#x27;</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 首次操作要求重置密码,必须大小写特殊字符组成, 我设置的密码为 P@ssw0rd</span></span><br><span class="line">mysql&gt; ALTER USER <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class="string">&#x27;P@ssw0rd&#x27;</span>; </span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 授权远程访问 % 表示所有主机都可以访问</span></span><br><span class="line">mysql&gt; grant all privileges on *.* to <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified by <span class="string">&#x27;P@ssw0rd&#x27;</span> with grant option; </span><br><span class="line">Query OK, 0 rows affected, 1 warning (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; flush privileges; <span class="comment"># 刷新权限信息</span></span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="built_in">exit</span></span><br><span class="line">Bye</span><br><span class="line">[root@VM-24-4-centos tmp]<span class="comment"># </span></span><br></pre></td></tr></table></figure></li><li><p>测试链接</p><p><img src="https://cdn.jsdelivr.net/gh/wicksonZhang/static-source-cdn/images/202305111401493.png" alt="image-20230511140119459"></p></li></ol><h2 id="脚本解析"><span class="post-title-index">3. </span><a href="#脚本解析" class="headerlink" title="脚本解析"></a>脚本解析</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定安装文件夹</span></span><br><span class="line">package_dir=<span class="string">&quot;/tmp&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;#################################################&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;MySQL自动部署脚本执行&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;#################################################&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> <span class="string">&quot;<span class="variable">$&#123;package_dir&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找MySQL-server和MySQL-client的安装包</span></span><br><span class="line">server=$(find -maxdepth 1 -name <span class="string">&#x27;*mysql*&#x27;</span> | grep server | awk -F <span class="string">&quot;/&quot;</span> <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class="line">client=$(find -maxdepth 1 -name <span class="string">&#x27;*mysql*&#x27;</span> | grep client | awk -F <span class="string">&quot;/&quot;</span> <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查MySQL-server安装包是否存在，不存在则退出</span></span><br><span class="line"><span class="keyword">if</span> [[ -z <span class="string">&quot;<span class="variable">$&#123;server&#125;</span>&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;未找到MySQL-server安装文件&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;发现MySQL-server安装文件 <span class="variable">$&#123;server&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查MySQL-client安装包是否存在，不存在则退出</span></span><br><span class="line"><span class="keyword">if</span> [[ -z <span class="string">&quot;<span class="variable">$&#123;client&#125;</span>&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;未找到MySQL-client安装文件&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;发现MySQL-client安装文件 <span class="variable">$&#123;client&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装MySQL</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">install_mysql</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;--------------------------------------------------------------------&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;正在安装MySQL...&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 检查系统自带数据库MariaDB是否存在，如果存在则卸载</span></span><br><span class="line">    mariadb=$(rpm -qa | grep mariadb)</span><br><span class="line">    <span class="keyword">if</span> [[ -n <span class="string">&quot;<span class="variable">$&#123;mariadb&#125;</span>&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;正在卸载MariaDB&quot;</span></span><br><span class="line">        rpm -e <span class="string">&quot;<span class="variable">$&#123;mariadb&#125;</span>&quot;</span> --nodeps</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;已卸载MariaDB&quot;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;未找到MariaDB软件包&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 检查服务器上是否已安装MySQL，如果已经安装则退出</span></span><br><span class="line">    ismysql=$(rpm -qa | grep mysql)</span><br><span class="line">    <span class="keyword">if</span> [[ -n <span class="string">&quot;<span class="variable">$&#123;ismysql&#125;</span>&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;mysql已存在，请确认&quot;</span></span><br><span class="line">        <span class="built_in">exit</span> 0</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="comment"># 安装MySQL-server和MySQL-client</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;正在安装MySQL-server...&quot;</span></span><br><span class="line">        rpm -ih <span class="string">&quot;<span class="variable">$&#123;server&#125;</span>&quot;</span> --force --nodeps</span><br><span class="line">        <span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;server安装完成&quot;</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;server安装失败，请检查报错信息！&quot;</span></span><br><span class="line">            <span class="built_in">exit</span> 1</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;正在安装MySQL-client...&quot;</span></span><br><span class="line">        rpm -ih <span class="string">&quot;<span class="variable">$&#123;client&#125;</span>&quot;</span> --force --nodeps</span><br><span class="line">        <span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;client安装完成&quot;</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;client安装失败，请检查报错信息！&quot;</span></span><br><span class="line">            <span class="built_in">exit</span> 1</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动MySQL</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">startup</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;--------------------------------------------------------------------&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;正在启动MySQL...&quot;</span></span><br><span class="line">    systemctl restart mysqld</span><br><span class="line">    <span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line">        <span class="keyword">if</span> netstat -ntulp | grep -q 3306</span><br><span class="line">        <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;启动成功&quot;</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;启动失败，请查看日志！&quot;</span></span><br><span class="line">            <span class="built_in">exit</span> 1</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;启动失败，请查看日志！&quot;</span></span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取MySQL的初始密码</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">get_password</span></span>() &#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;--------------------------------------------------------------------&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;正在获取mysql初始密码&quot;</span></span><br><span class="line">init_password=$(grep <span class="string">&#x27;temporary password&#x27;</span> /var/log/mysqld.log | awk <span class="string">&#x27;&#123;print $NF&#125;&#x27;</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;mysql初始密码: <span class="variable">$init_password</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">install_mysql</span><br><span class="line">startup</span><br><span class="line">get_password</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;-------------------------------------------------&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;部署脚本执行完成&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux-Shell</title>
      <link href="/posts/ccf232fc.html"/>
      <url>/posts/ccf232fc.html</url>
      
        <content type="html"><![CDATA[<h3 id="变量"><span class="post-title-index">.1. </span><a href="#变量" class="headerlink" title="变量"></a>变量</h3><blockquote><p>变量是 Shell 脚本编程中最基本的概念之一，用于存储数据。Shell 中的变量不需要事先声明，只需要在变量名前加上 <code>$</code> 符号即可引用该变量。</p></blockquote><ul><li>命令语法</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义变量</span></span><br><span class="line">变量名 = 值</span><br><span class="line"><span class="comment"># 调用变量</span></span><br><span class="line">$变量名</span><br></pre></td></tr></table></figure><ul><li>示例</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name=<span class="string">&quot;John&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;My name is <span class="variable">$name</span>.&quot;</span></span><br></pre></td></tr></table></figure><h3 id="常用判断"><span class="post-title-index">.2. </span><a href="#常用判断" class="headerlink" title="常用判断"></a>常用判断</h3><blockquote><p>在 Shell 脚本编程中，常常需要根据某些条件进行判断。</p></blockquote><h4 id="if-语句"><span class="post-title-index">.2.1. </span><a href="#if-语句" class="headerlink" title="if 语句"></a>if 语句</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># if 语句判断变量 num 是否大于 10，如果成立则输出 &quot;The number is greater than 10.&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$num</span> -gt 10 ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;The number is greater than 10.&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h4 id="case-语句"><span class="post-title-index">.2.2. </span><a href="#case-语句" class="headerlink" title="case 语句"></a>case 语句</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="variable">$variable</span> <span class="keyword">in</span></span><br><span class="line">  value1)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Variable is value1.&quot;</span></span><br><span class="line">    ;;</span><br><span class="line">  value2)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Variable is value2.&quot;</span></span><br><span class="line">    ;;</span><br><span class="line">  *)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Variable is neither value1 nor value2.&quot;</span></span><br><span class="line">    ;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure><h3 id="流程控制"><span class="post-title-index">.3. </span><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h3><h4 id="for-循环语句"><span class="post-title-index">.3.1. </span><a href="#for-循环语句" class="headerlink" title="for 循环语句"></a>for 循环语句</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..5&#125;; <span class="keyword">do</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h4 id="while-语句"><span class="post-title-index">.3.2. </span><a href="#while-语句" class="headerlink" title="while 语句"></a>while 语句</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> [ <span class="variable">$num</span> -le 10 ]; <span class="keyword">do</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$num</span></span><br><span class="line">  num=$((num+<span class="number">1</span>))</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="传参"><span class="post-title-index">.4. </span><a href="#传参" class="headerlink" title="传参"></a>传参</h3><blockquote><p>在 Shell 脚本中，可以通过命令行参数来传递参数值。</p></blockquote><ul><li>示例</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;The first parameter is: <span class="variable">$1</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;The second parameter is: <span class="variable">$2</span>&quot;</span></span><br></pre></td></tr></table></figure><p>在上述代码中，使用 <code>$1</code> 和 <code>$2</code> 来引用第一个和第二个参数。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./script.sh foo bar</span><br></pre></td></tr></table></figure><p>输出结果</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">The first parameter is: foo</span><br><span class="line">The second parameter is: bar</span><br></pre></td></tr></table></figure><h3 id="函数"><span class="post-title-index">.5. </span><a href="#函数" class="headerlink" title="函数"></a>函数</h3><blockquote><p>函数来封装重复使用的代码.</p></blockquote><ul><li>示例</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">greeting</span></span>() &#123;</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Hello, <span class="variable">$1</span>!&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">greeting <span class="string">&quot;John&quot;</span></span><br></pre></td></tr></table></figure><ul><li>调用脚本 <code>./script.sh</code></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># ./script.sh </span></span><br><span class="line">Hello, John!</span><br></pre></td></tr></table></figure><h3 id="数组"><span class="post-title-index">.6. </span><a href="#数组" class="headerlink" title="数组"></a>数组</h3><blockquote><p>在 Shell 脚本中，可以使用数组来存储一组数据。</p></blockquote><ul><li>示例</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">fruits=(<span class="string">&quot;apple&quot;</span> <span class="string">&quot;banana&quot;</span> <span class="string">&quot;orange&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;fruits[0]&#125;</span>  <span class="comment"># 输出 &quot;apple&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;fruits[1]&#125;</span>  <span class="comment"># 输出 &quot;banana&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;fruits[2]&#125;</span>  <span class="comment"># 输出 &quot;orange&quot;</span></span><br></pre></td></tr></table></figure><ul><li>调用</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># ./script.sh </span></span><br><span class="line">apple</span><br><span class="line">banana</span><br><span class="line">orange</span><br></pre></td></tr></table></figure><h3 id="示例"><span class="post-title-index">.7. </span><a href="#示例" class="headerlink" title="示例"></a>示例</h3><blockquote><p>以下是一个综合使用变量、常用判断、流程控制、传参、函数、数组的 Shell 脚本示例</p></blockquote><ul><li>示例</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">name=<span class="string">&quot;John&quot;</span></span><br><span class="line">age=20</span><br><span class="line">fruits=(<span class="string">&quot;apple&quot;</span> <span class="string">&quot;banana&quot;</span> <span class="string">&quot;orange&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$age</span> -ge 18 ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$name</span> is an adult.&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$name</span> is not an adult.&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> fruit <span class="keyword">in</span> <span class="variable">$&#123;fruits[@]&#125;</span>; <span class="keyword">do</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;I like <span class="variable">$fruit</span>.&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">greeting</span></span>() &#123;</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Hello, <span class="variable">$1</span>!&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">greeting <span class="variable">$name</span></span><br></pre></td></tr></table></figure><ul><li>调用脚本</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># ./script.sh </span></span><br><span class="line">John is an adult.</span><br><span class="line">I like apple.</span><br><span class="line">I like banana.</span><br><span class="line">I like orange.</span><br><span class="line">Hello, John!</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux-网络监测</title>
      <link href="/posts/4f449b15.html"/>
      <url>/posts/4f449b15.html</url>
      
        <content type="html"><![CDATA[<h2 id="curl"><span class="post-title-index">1. </span><a href="#curl" class="headerlink" title="curl"></a>curl</h2><blockquote><p>curl：该命令可视为不带参数的GET请求。</p></blockquote><ul><li>命令格式</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl 服务地址</span><br></pre></td></tr></table></figure><ul><li>操作示例</li></ul><div class="tabs" id="curl"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#curl-1"><i class="fas fa-check"></i>【正常示例】</button></li><li class="tab"><button type="button" data-href="#curl-2"><i class="fas fa-xmark"></i>【失败示例】</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="curl-1"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># curl http://localhost:80</span></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;<span class="built_in">head</span>&gt;</span><br><span class="line">&lt;title&gt;Welcome to nginx!&lt;/title&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">    body &#123;</span><br><span class="line">        width: 35em;</span><br><span class="line">        margin: 0 auto;</span><br><span class="line">        font-family: Tahoma, Verdana, Arial, sans-serif;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;Welcome to nginx!&lt;/h1&gt;</span><br><span class="line">&lt;p&gt;If you see this page, the nginx web server is successfully installed and</span><br><span class="line">working. Further configuration is required.&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;For online documentation and support please refer to</span><br><span class="line">&lt;a href=<span class="string">&quot;http://nginx.org/&quot;</span>&gt;nginx.org&lt;/a&gt;.&lt;br/&gt;</span><br><span class="line">Commercial support is available at</span><br><span class="line">&lt;a href=<span class="string">&quot;http://nginx.com/&quot;</span>&gt;nginx.com&lt;/a&gt;.&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;&lt;em&gt;Thank you <span class="keyword">for</span> using nginx.&lt;/em&gt;&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># </span></span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="curl-2"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># curl http://localhost:8080</span></span><br><span class="line">curl: (7) Failed connect to localhost:8080; Connection refused</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="netstat"><span class="post-title-index">2. </span><a href="#netstat" class="headerlink" title="netstat"></a><code>netstat</code></h2><blockquote><p><code>netstat</code> ：监听端口状态</p></blockquote><ul><li>命令格式</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat 参数 | grep 端口号</span><br></pre></td></tr></table></figure><ul><li>参数说明</li></ul><div class="note orange simple"><p><strong>-a</strong>：显示所有socket</p><p><strong>-l</strong>：显示所有处于监听中的端口</p><p><strong>-n</strong>：显示本地的<code>IP</code>地址</p><p><strong>-p</strong>：显示<code>pid</code>及进程名称</p><p><strong>-t</strong>：只显示<code>tcp</code>端口</p><p><strong>-u</strong>：只显示<code>udp</code>端口</p></div><ul><li>操作示例</li></ul><div class="tabs" id="netstat"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#netstat-1">【监听tcp端口】</button></li><li class="tab"><button type="button" data-href="#netstat-2">【查询包含80的端口】</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="netstat-1"><p><code>netstat -ltnp</code>：查询所有处于监听状态的tcp端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># netstat -ltnp</span></span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    </span><br><span class="line">tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      3781/nginx: master  </span><br><span class="line">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      1457/sshd           </span><br><span class="line">tcp        0      0 0.0.0.0:8888            0.0.0.0:*               LISTEN      1455/python         </span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="netstat-2"><p><code>netstat -anp | grep 80</code>：查询所有处于监听状态的tcp端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># netstat -anp | grep 80</span></span><br><span class="line">tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      3781/nginx: master  </span><br><span class="line">tcp        0      0 10.0.0.9:42842          169.254.0.55:8080       TIME_WAIT   -                   </span><br><span class="line">tcp        0      0 10.0.0.9:80             170.64.161.204:38658    TIME_WAIT   -                   </span><br><span class="line">tcp        0      0 10.0.0.9:35380          169.254.0.55:5574       ESTABLISHED 5133/YDService      </span><br><span class="line">tcp        0      0 10.0.0.9:80             170.64.161.204:38694    TIME_WAIT   -                   </span><br><span class="line">tcp        0      0 10.0.0.9:80             170.64.161.204:38660    TIME_WAIT   -                   </span><br><span class="line">udp6       0      0 fe80::5054:ff:fead::123 :::*                                657/ntpd            </span><br><span class="line">unix  2      [ ACC ]     STREAM     LISTENING     8005     1/systemd            /run/systemd/journal/stdout</span><br><span class="line">unix  5      [ ]         DGRAM                    8008     1/systemd            /run/systemd/journal/socket</span><br><span class="line">unix  12     [ ]         DGRAM                    8010     1/systemd            /dev/log</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="telnet"><span class="post-title-index">3. </span><a href="#telnet" class="headerlink" title="telnet"></a>telnet</h2><blockquote><p>telnet：用来探测指定 <code>ip</code> 是否开放指定端口。</p><p>在 Linux 环境下 <code>Telnet</code> 是需要安装的。 安装命令：<code>yum install telnet</code></p></blockquote><ul><li>命令格式</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet IP 端口</span><br></pre></td></tr></table></figure><ul><li>操作示例</li></ul><div class="tabs" id="curl"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#curl-1"><i class="fas fa-check"></i>【正常示例】</button></li><li class="tab"><button type="button" data-href="#curl-2"><i class="fas fa-xmark"></i>【失败示例】</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="curl-1"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># telnet 127.0.0.1 80</span></span><br><span class="line">Trying 127.0.0.1...</span><br><span class="line">Connected to 127.0.0.1.</span><br><span class="line">Escape character is <span class="string">&#x27;^]&#x27;</span>.</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="curl-2"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># telnet 127.0.0.1 8080</span></span><br><span class="line">Trying 127.0.0.1...</span><br><span class="line">telnet: connect to address 127.0.0.1: Connection refused</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux-基础命令</title>
      <link href="/posts/5c7d7d77.html"/>
      <url>/posts/5c7d7d77.html</url>
      
        <content type="html"><![CDATA[<h2 id="Linux-目录操作"><span class="post-title-index">1. </span><a href="#Linux-目录操作" class="headerlink" title="Linux - 目录操作"></a>Linux - 目录操作</h2><h3 id="cd"><span class="post-title-index">1.1. </span><a href="#cd" class="headerlink" title="cd"></a>cd</h3><blockquote><p>cd：进入对应目录，类似 windows 打开文件夹</p></blockquote><ul><li>命令语法</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> 【<span class="built_in">dir</span>】</span><br></pre></td></tr></table></figure><ul><li>操作示例</li></ul><div class="tabs" id="cd"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#cd-1">【cd ~】</button></li><li class="tab"><button type="button" data-href="#cd-2">【cd ..】</button></li><li class="tab"><button type="button" data-href="#cd-3">【cd -】</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="cd-1"><p><strong>cd ~ ：回到当前登录账号的home目录</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos ~]<span class="comment"># cd /usr/local/</span></span><br><span class="line">[root@VM-0-9-centos <span class="built_in">local</span>]<span class="comment"># cd ~</span></span><br><span class="line">[root@VM-0-9-centos ~]<span class="comment"># pwd</span></span><br><span class="line">/root</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="cd-2"><p><strong>cd .. || cd ./.. ：进到当前目录的父级目录</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos /]<span class="comment"># cd /usr/local/</span></span><br><span class="line">[root@VM-0-9-centos <span class="built_in">local</span>]<span class="comment"># cd ./..</span></span><br><span class="line">[root@VM-0-9-centos usr]<span class="comment"># pwd</span></span><br><span class="line">/usr</span><br><span class="line">[root@VM-0-9-centos usr]<span class="comment"># cd /usr/local/</span></span><br><span class="line">[root@VM-0-9-centos <span class="built_in">local</span>]<span class="comment"># cd ..</span></span><br><span class="line">[root@VM-0-9-centos usr]<span class="comment"># pwd</span></span><br><span class="line">/usr</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="cd-3"><p><strong>cd - ：跳转到之前所在目录</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos home]<span class="comment"># cd /usr/local/</span></span><br><span class="line">[root@VM-0-9-centos <span class="built_in">local</span>]<span class="comment"># pwd</span></span><br><span class="line">/usr/local</span><br><span class="line">[root@VM-0-9-centos <span class="built_in">local</span>]<span class="comment"># cd -</span></span><br><span class="line">/home</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="cp"><span class="post-title-index">1.2. </span><a href="#cp" class="headerlink" title="cp"></a>cp</h3><blockquote><p>cp：文件拷贝</p></blockquote><ul><li>命令语法</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> 参数 源文件 目标位置</span><br></pre></td></tr></table></figure><ul><li>参数说明</li></ul><div class="note orange simple"><p><strong>-r/R</strong>：递归，使用于目录复制</p><p><strong>-n</strong>：不覆盖，不加该参数默认覆盖</p></div><ul><li>操作示例</li></ul><div class="tabs" id="cp"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#cp-1">【cp 源文件 目标位置】</button></li><li class="tab"><button type="button" data-href="#cp-2">【cp -r 源文件 目标位置】</button></li><li class="tab"><button type="button" data-href="#cp-3">【cp -n 源文件 目标位置】</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="cp-1"><p>【cp 源文件 目标位置】：覆盖复制当前目录下bbb文件至/tmp目录下，命名为aaa文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos <span class="built_in">local</span>]<span class="comment"># touch bbb.md</span></span><br><span class="line">[root@VM-0-9-centos <span class="built_in">local</span>]<span class="comment"># ll</span></span><br><span class="line">...</span><br><span class="line">-rw-r--r--   1 root root    0 May  9 12:01 bbb.md</span><br><span class="line">...</span><br><span class="line">[root@VM-0-9-centos <span class="built_in">local</span>]<span class="comment"># cp bbb.md /tmp/aaa</span></span><br><span class="line">[root@VM-0-9-centos <span class="built_in">local</span>]<span class="comment"># cd /tmp/</span></span><br><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># ll</span></span><br><span class="line">...</span><br><span class="line">-rw-r--r-- 1 root root    0 May  9 12:01 aaa</span><br><span class="line">...</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="cp-2"><p>【cp -r 源文件 目标位置】：覆盖复制ccc目录至/tmp目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos <span class="built_in">local</span>]<span class="comment"># pwd</span></span><br><span class="line">/usr/local</span><br><span class="line">[root@VM-0-9-centos <span class="built_in">local</span>]<span class="comment"># mkdir ccc</span></span><br><span class="line">[root@VM-0-9-centos <span class="built_in">local</span>]<span class="comment"># cp -r ccc/ /tmp/</span></span><br><span class="line">[root@VM-0-9-centos <span class="built_in">local</span>]<span class="comment"># cd /tmp/</span></span><br><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># ll</span></span><br><span class="line">drwxr-xr-x 2 root root 4096 May  9 13:32 ccc</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="cp-3"><p>【cp -n 源文件 目标位置】：复制bbb文件至/tmp目录下，并跳过重名文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos <span class="built_in">local</span>]<span class="comment"># touch bbb.md</span></span><br><span class="line">[root@VM-0-9-centos <span class="built_in">local</span>]<span class="comment"># cp -n bbb.md /tmp/</span></span><br><span class="line">[root@VM-0-9-centos <span class="built_in">local</span>]<span class="comment"># cd /tmp/</span></span><br><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># ll</span></span><br><span class="line">-rw-r--r-- 1 root root    0 May  9 13:36 bbb.md</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="find"><span class="post-title-index">1.3. </span><a href="#find" class="headerlink" title="find"></a>find</h3><blockquote><p>find：查找文件</p></blockquote><ul><li>命令语法</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find 查找目录 参数</span><br></pre></td></tr></table></figure><ul><li>参数说明</li></ul><div class="note orange simple"><p><strong>-name</strong>：名称匹配</p><p><strong>-mindepth</strong>：目录深度最小限制</p><p><strong>-maxdepth</strong>：目录深度最大限制</p><p><strong>-type</strong>：文件类型匹配（<strong>f</strong> 普通文件 <strong>l</strong> 符号连接 <strong>d</strong> 目录）</p></div><ul><li>操作示例</li></ul><div class="tabs" id="find"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#find-1">【find 路径 -mindepth -maxdepth】</button></li><li class="tab"><button type="button" data-href="#find-2">【find 路径 -type f -name filename】</button></li><li class="tab"><button type="button" data-href="#find-3">【find 路径 -name *.jpg】</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="find-1"><p>find 路径 -mindepth -maxdepth：查找目录下目录深度2层与3层的文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos home]<span class="comment"># find /home -mindepth 2 -maxdepth 3</span></span><br><span class="line">/home/www/.bashrc</span><br><span class="line">/home/www/.bash_logout</span><br><span class="line">/home/www/.bash_profile</span><br><span class="line">...</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="find-2"><p>find 路径 -type f -name filename：查找/home目录下名称为aaa的普通文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos home]<span class="comment"># find /home -type f -name aaa</span></span><br><span class="line">[root@VM-0-9-centos home]<span class="comment"># touch aaa</span></span><br><span class="line">[root@VM-0-9-centos home]<span class="comment"># find /home -type f -name aaa</span></span><br><span class="line">/home/aaa</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="find-3"><p>find 路径 -name *.jpg：查找/home目录下后缀为.jpg的文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos home]<span class="comment"># find /home -name *.jpg</span></span><br><span class="line">[root@VM-0-9-centos home]<span class="comment"># touch aa.jpg</span></span><br><span class="line">[root@VM-0-9-centos home]<span class="comment"># find /home -name *.jpg</span></span><br><span class="line">/home/aa.jpg</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="ls"><span class="post-title-index">1.4. </span><a href="#ls" class="headerlink" title="ls"></a>ls</h3><blockquote><p>ls：显示当前目录下的信息</p></blockquote><ul><li>命令语法</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span></span><br></pre></td></tr></table></figure><ul><li>参数说明</li></ul><div class="note orange simple"><p><strong>-a</strong> ：显示所有文件，包括隐藏文件</p><p><strong>-l</strong> ：显示文件属性，文件大小以字节显示</p><p><strong>-h</strong> ：按K\M\G的形式显示文件大小信息</p><p><strong>-S</strong> ：按文件大小排序</p></div><ul><li>操作示例</li></ul><div class="tabs" id="ls"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#ls-1">【ls】</button></li><li class="tab"><button type="button" data-href="#ls-2">【ls -a】</button></li><li class="tab"><button type="button" data-href="#ls-3">【ls -l】</button></li><li class="tab"><button type="button" data-href="#ls-4">【ls -al】</button></li><li class="tab"><button type="button" data-href="#ls-5">【ls -lh】</button></li><li class="tab"><button type="button" data-href="#ls-6">【ls -lhS】</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="ls-1"><p>ls：显示当前目录下的信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos home]<span class="comment"># ls # 显示当前目录下的信息</span></span><br><span class="line">aaa  aa.jpg  lighthouse  www</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="ls-2"><p>ls -a：显示所有文件，包括隐藏文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos home]<span class="comment"># ls -a # 显示所有文件，包括隐藏文件</span></span><br><span class="line">.  ..  aaa  aa.jpg  lighthouse  www</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="ls-3"><p>ls -l：显示文件属性，文件大小以字节显示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos home]<span class="comment"># ls -l # 显示文件属性，文件大小以字节显示</span></span><br><span class="line">total 8</span><br><span class="line">-rw-r--r-- 1 root       root          0 May  9 13:44 aaa</span><br><span class="line">-rw-r--r-- 1 root       root          0 May  9 13:46 aa.jpg</span><br><span class="line">drwx------ 5 lighthouse lighthouse 4096 Oct 12  2022 lighthouse</span><br><span class="line">drwx------ 2 www        www        4096 Aug 11  2022 www</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="ls-4"><p>ls -al：显示所有文件，包括隐藏文件，文件属性，文件大小</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos home]<span class="comment"># ls -al # 显示所有文件，包括隐藏文件，文件属性，文件大小</span></span><br><span class="line">total 16</span><br><span class="line">drwxr-xr-x.  4 root       root       4096 May  9 13:46 .</span><br><span class="line">dr-xr-xr-x. 21 root       root       4096 May  9 13:50 ..</span><br><span class="line">-rw-r--r--   1 root       root          0 May  9 13:44 aaa</span><br><span class="line">-rw-r--r--   1 root       root          0 May  9 13:46 aa.jpg</span><br><span class="line">drwx------   5 lighthouse lighthouse 4096 Oct 12  2022 lighthouse</span><br><span class="line">drwx------   2 www        www        4096 Aug 11  2022 www</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="ls-5"><p>ls -lh（按K\M\G的形式显示文件大小信息）：显示文件属性，文件大小以K显示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos home]<span class="comment"># ls -lh # 显示文件属性，文件大小以K显示</span></span><br><span class="line">total 8.0K</span><br><span class="line">-rw-r--r-- 1 root       root          0 May  9 13:44 aaa</span><br><span class="line">-rw-r--r-- 1 root       root          0 May  9 13:46 aa.jpg</span><br><span class="line">drwx------ 5 lighthouse lighthouse 4.0K Oct 12  2022 lighthouse</span><br><span class="line">drwx------ 2 www        www        4.0K Aug 11  2022 www</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="ls-6"><p>ls -lhS：显示文件属性，文件大小以K显示，按文件大小排序</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos home]<span class="comment"># ls -lhS  # 显示文件属性，文件大小以K显示，按文件大小排序</span></span><br><span class="line">total 8.0K</span><br><span class="line">drwx------ 5 lighthouse lighthouse 4.0K Oct 12  2022 lighthouse</span><br><span class="line">drwx------ 2 www        www        4.0K Aug 11  2022 www</span><br><span class="line">-rw-r--r-- 1 root       root          0 May  9 13:44 aaa</span><br><span class="line">-rw-r--r-- 1 root       root          0 May  9 13:46 aa.jpg</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="mkdir"><span class="post-title-index">1.5. </span><a href="#mkdir" class="headerlink" title="mkdir"></a>mkdir</h3><blockquote><p>创建文件目录</p></blockquote><ul><li>命令语法</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> 参数 文件名</span><br></pre></td></tr></table></figure><ul><li>参数说明</li></ul><div class="note orange simple"><p><strong>-p</strong> ：嵌套关系目录创建;</p></div><ul><li>操作示例</li></ul><div class="tabs" id="mkdir"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#mkdir-1">【mkdir dir】</button></li><li class="tab"><button type="button" data-href="#mkdir-2">【mkdir -p dir】</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="mkdir-1"><p><strong>mkdir dir</strong>：创建空白目录；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos home]<span class="comment"># ls</span></span><br><span class="line">lighthouse  www</span><br><span class="line">[root@VM-0-9-centos home]<span class="comment"># mkdir v1</span></span><br><span class="line">[root@VM-0-9-centos home]<span class="comment"># ls</span></span><br><span class="line">lighthouse  v1  www</span><br><span class="line">[root@VM-0-9-centos home]<span class="comment"># mkdir v2 v3 v4</span></span><br><span class="line">[root@VM-0-9-centos home]<span class="comment"># ls</span></span><br><span class="line">lighthouse  v1  v2  v3  v4  www</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="mkdir-2"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos home]<span class="comment"># rm -rf v1 v2 v3 v4</span></span><br><span class="line">[root@VM-0-9-centos home]<span class="comment"># mkdir -p v1/v2/v3</span></span><br><span class="line">[root@VM-0-9-centos home]<span class="comment"># ls</span></span><br><span class="line">lighthouse  v1  www</span><br><span class="line">[root@VM-0-9-centos home]<span class="comment"># find v1 -mindepth 2 -maxdepth 3</span></span><br><span class="line">v1/v2/v3</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="mv"><span class="post-title-index">1.6. </span><a href="#mv" class="headerlink" title="mv"></a>mv</h3><blockquote><p>mv：移动文件，可以操作目录和文件。</p></blockquote><ul><li>命令格式</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> 源路径 目标路径</span><br></pre></td></tr></table></figure><ul><li>操作示例</li></ul><div class="tabs" id="mv"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#mv-1">【mv file 目标路径】</button></li><li class="tab"><button type="button" data-href="#mv-2">【mv dir 目标路径】</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="mv-1"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos home]<span class="comment"># touch ccc</span></span><br><span class="line">[root@VM-0-9-centos home]<span class="comment"># mv ccc /tmp/aaa</span></span><br><span class="line">[root@VM-0-9-centos home]<span class="comment"># cd /tmp/</span></span><br><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># ls</span></span><br><span class="line">aaa</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="mv-2"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos <span class="built_in">local</span>]<span class="comment"># mkdir bbb</span></span><br><span class="line">[root@VM-0-9-centos <span class="built_in">local</span>]<span class="comment"># mv bbb/ /tmp/</span></span><br><span class="line">[root@VM-0-9-centos <span class="built_in">local</span>]<span class="comment"># cd /tmp/</span></span><br><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># ls</span></span><br><span class="line">bbb</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="pwd"><span class="post-title-index">1.7. </span><a href="#pwd" class="headerlink" title="pwd"></a>pwd</h3><blockquote><p>显示当前工作目录</p></blockquote><ul><li>命令格式</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">pwd</span></span><br></pre></td></tr></table></figure><ul><li>操作示例</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># pwd</span></span><br><span class="line">/tmp</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="rm"><span class="post-title-index">1.8. </span><a href="#rm" class="headerlink" title="rm"></a>rm</h3><blockquote><p>rm：删除目录或文件</p></blockquote><ul><li>命令格式</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> 参数 路径</span><br></pre></td></tr></table></figure><ul><li>参数说明</li></ul><div class="note orange simple"><p><strong>-r</strong>：递归，用于目录</p><p><strong>-f</strong>：强制删除，不显示任何信息（会使前边的参数 i 失效）</p><p><strong>-i</strong>：进行任何操作前需确认，只能操作文件（会使前边的参数 f 失效）</p></div><ul><li>操作示例</li></ul><div class="tabs" id="rm"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#rm-1">【rm -ir 路径】</button></li><li class="tab"><button type="button" data-href="#rm-2">【rm -rf 路径】</button></li><li class="tab"><button type="button" data-href="#rm-3">【rm -i 文件】</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="rm-1"><p>rm -ir 路径：删除目录下所有文件，并在每一步执行操作前进行确认</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># rm -ir bbb/</span></span><br><span class="line"><span class="built_in">rm</span>: remove directory ‘bbb/’? y</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="rm-2"><p>rm -rf 路径：强制删除目录下所有文件，中间不会产生任何提示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># rm -rf ccc/</span></span><br><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># </span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="rm-3"><p>rm -i 路径：删除test1文件，在删除前进行确认</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># touch ccc.md</span></span><br><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># rm -i ccc.md </span></span><br><span class="line"><span class="built_in">rm</span>: remove regular empty file ‘ccc.md’? y</span><br><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># </span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="Linux-文件编辑"><span class="post-title-index">2. </span><a href="#Linux-文件编辑" class="headerlink" title="Linux - 文件编辑"></a>Linux - 文件编辑</h2><blockquote><p>vi：自带文本编辑器</p></blockquote><ul><li>命令格式</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi filename</span><br></pre></td></tr></table></figure><ul><li>操作示例</li></ul><div class="tabs" id="linux---vi"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#linux---vi-1">【插入模式（insert mode）】</button></li><li class="tab"><button type="button" data-href="#linux---vi-2">【命令模式（command mode）】</button></li><li class="tab"><button type="button" data-href="#linux---vi-3">【底行模式（last line mode）】</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="linux---vi-1"><ul><li><p>第一步：进入文件编辑器后，按 <strong>i</strong> 进入插入模式</p></li><li><p>第二步：插入模式下，文本编辑按常规模式进行操作</p></li><li><p>第三步：按 <strong>ESC</strong> 退出插入模式</p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="linux---vi-2"><ul><li><p>移动光标</p><ul><li><p><strong>ctrl + b</strong>  屏幕向后移动一页</p></li><li><p><strong>ctrl + f</strong>  屏幕向前移动一页</p></li><li><p><strong>ctrl + u</strong>  屏幕向后移动半页</p></li><li><p><strong>ctrl + d</strong>  屏幕向前移动半页</p></li><li><p><strong>$</strong>  光标移动到行尾</p></li><li><p><strong>^</strong>  光标移动到行首</p></li></ul></li><li><p>删除操作</p><ul><li><strong>x</strong>  删除光标后一位字符</li><li><strong>#x</strong>  删除光标后#位字符</li><li><strong>dd</strong>  删除光标所在行</li></ul></li><li><p>撤回操作</p><ul><li><strong>u</strong>  撤回上一步操作</li></ul></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="linux---vi-3"><ul><li><p>命令模式下，按 <strong>：</strong> 进入底行模式</p></li><li><p>字符查找</p><ul><li><strong>/keywords</strong>  命令模式下按 <strong>/</strong> ，接着输入查找关键字后回车进行查找，接着按 <strong>n</strong> 转到下一个查找结果</li></ul></li><li><p>保存文件</p><ul><li><p><strong>:w filename</strong>  以 <strong>filename</strong> 为文件名另存为</p></li><li><p><strong>:wq</strong>  保存并退出</p></li></ul></li><li><p>退出编辑</p><ul><li><strong>:q!</strong>  不存盘强制退出</li></ul></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="Linux-文件查看"><span class="post-title-index">3. </span><a href="#Linux-文件查看" class="headerlink" title="Linux - 文件查看"></a>Linux - 文件查看</h2><h3 id="cat"><span class="post-title-index">3.1. </span><a href="#cat" class="headerlink" title="cat"></a>cat</h3><ul><li>命令格式</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> filename <span class="comment"># 查看文件</span></span><br><span class="line"><span class="built_in">cat</span> -n filename <span class="comment"># 查看文件内容并附带行号</span></span><br></pre></td></tr></table></figure><ul><li>操作示例</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># touch Readme.md</span></span><br><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># vi Readme.md </span></span><br><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># cat Readme.md </span></span><br><span class="line">this is Readme</span><br><span class="line">[root@VM-0-9-centos tmp]<span class="comment"># cat -n Readme.md </span></span><br><span class="line">     1this is Readme</span><br></pre></td></tr></table></figure><h3 id="less"><span class="post-title-index">3.2. </span><a href="#less" class="headerlink" title="less"></a>less</h3><ul><li>命令格式</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">less filename</span><br></pre></td></tr></table></figure><ul><li>参数说明</li></ul><div class="note orange simple"><p><strong>Space</strong> 或 <strong>PageUp</strong>：向前一屏</p><p><strong>B</strong> 或 <strong>PageDown</strong>：向后一屏</p><p><strong>Enter</strong> ：向后一行</p><p><strong>K</strong> ：向前一行</p></div><h3 id="tail"><span class="post-title-index">3.3. </span><a href="#tail" class="headerlink" title="tail"></a>tail</h3><ul><li>命令格式</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">tail</span> 参数 filename</span><br></pre></td></tr></table></figure><ul><li>参数说明</li></ul><div class="note orange simple"><p><strong>-n</strong> ：指定显示文件的最后多少行。</p><p><strong>-f</strong> ：动态显示，默认显示文件末尾10行，并且一直保持显示状态。</p></div>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/4a17b156.html"/>
      <url>/posts/4a17b156.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><span class="post-title-index">1. </span><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><span class="post-title-index">1.1. </span><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><span class="post-title-index">1.2. </span><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><span class="post-title-index">1.3. </span><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><span class="post-title-index">1.4. </span><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
